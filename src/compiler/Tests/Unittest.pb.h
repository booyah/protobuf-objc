// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "ProtocolBuffers.h"

#import "Unittest_import.pb.h"
// @@protoc_insertion_point(imports)

@class BarRequest;
@class BarRequestBuilder;
@class BarResponse;
@class BarResponseBuilder;
@class BoolMessage;
@class BoolMessageBuilder;
@class FooClientMessage;
@class FooClientMessageBuilder;
@class FooRequest;
@class FooRequestBuilder;
@class FooResponse;
@class FooResponseBuilder;
@class FooServerMessage;
@class FooServerMessageBuilder;
@class ForeignMessage;
@class ForeignMessageBuilder;
@class ImportMessage;
@class ImportMessageBuilder;
@class Int32Message;
@class Int32MessageBuilder;
@class Int64Message;
@class Int64MessageBuilder;
@class MoreBytes;
@class MoreBytesBuilder;
@class MoreString;
@class MoreStringBuilder;
@class NestedTestAllTypes;
@class NestedTestAllTypesBuilder;
@class OneBytes;
@class OneBytesBuilder;
@class OneString;
@class OneStringBuilder;
@class OptionalGroup_extension;
@class OptionalGroup_extensionBuilder;
@class PublicImportMessage;
@class PublicImportMessageBuilder;
@class RepeatedGroup_extension;
@class RepeatedGroup_extensionBuilder;
@class SparseEnumMessage;
@class SparseEnumMessageBuilder;
@class TestAllExtensions;
@class TestAllExtensionsBuilder;
@class TestAllTypes;
@class TestAllTypesBuilder;
@class TestAllTypesNestedMessage;
@class TestAllTypesNestedMessageBuilder;
@class TestAllTypesOptionalGroup;
@class TestAllTypesOptionalGroupBuilder;
@class TestAllTypesRepeatedGroup;
@class TestAllTypesRepeatedGroupBuilder;
@class TestCamelCaseFieldNames;
@class TestCamelCaseFieldNamesBuilder;
@class TestCommentInjectionMessage;
@class TestCommentInjectionMessageBuilder;
@class TestDeprecatedFields;
@class TestDeprecatedFieldsBuilder;
@class TestDupFieldNumber;
@class TestDupFieldNumberBar;
@class TestDupFieldNumberBarBuilder;
@class TestDupFieldNumberBuilder;
@class TestDupFieldNumberFoo;
@class TestDupFieldNumberFooBuilder;
@class TestDynamicExtensions;
@class TestDynamicExtensionsBuilder;
@class TestDynamicExtensionsDynamicMessageType;
@class TestDynamicExtensionsDynamicMessageTypeBuilder;
@class TestEagerMessage;
@class TestEagerMessageBuilder;
@class TestEmptyMessage;
@class TestEmptyMessageBuilder;
@class TestEmptyMessageWithExtensions;
@class TestEmptyMessageWithExtensionsBuilder;
@class TestExtremeDefaultValues;
@class TestExtremeDefaultValuesBuilder;
@class TestFieldOrderings;
@class TestFieldOrderingsBuilder;
@class TestForeignNested;
@class TestForeignNestedBuilder;
@class TestLazyMessage;
@class TestLazyMessageBuilder;
@class TestMultipleExtensionRanges;
@class TestMultipleExtensionRangesBuilder;
@class TestMutualRecursionA;
@class TestMutualRecursionABuilder;
@class TestMutualRecursionB;
@class TestMutualRecursionBBuilder;
@class TestNestedExtension;
@class TestNestedExtensionBuilder;
@class TestNestedMessageHasBits;
@class TestNestedMessageHasBitsBuilder;
@class TestNestedMessageHasBitsNestedMessage;
@class TestNestedMessageHasBitsNestedMessageBuilder;
@class TestOneof;
@class TestOneof2;
@class TestOneof2Builder;
@class TestOneof2FooGroup;
@class TestOneof2FooGroupBuilder;
@class TestOneof2NestedMessage;
@class TestOneof2NestedMessageBuilder;
@class TestOneofBackwardsCompatible;
@class TestOneofBackwardsCompatibleBuilder;
@class TestOneofBackwardsCompatibleFooGroup;
@class TestOneofBackwardsCompatibleFooGroupBuilder;
@class TestOneofBuilder;
@class TestOneofFooGroup;
@class TestOneofFooGroupBuilder;
@class TestPackedExtensions;
@class TestPackedExtensionsBuilder;
@class TestPackedTypes;
@class TestPackedTypesBuilder;
@class TestParsingMerge;
@class TestParsingMergeBuilder;
@class TestParsingMergeOptionalGroup;
@class TestParsingMergeOptionalGroupBuilder;
@class TestParsingMergeRepeatedFieldsGenerator;
@class TestParsingMergeRepeatedFieldsGeneratorBuilder;
@class TestParsingMergeRepeatedFieldsGeneratorGroup1;
@class TestParsingMergeRepeatedFieldsGeneratorGroup1Builder;
@class TestParsingMergeRepeatedFieldsGeneratorGroup2;
@class TestParsingMergeRepeatedFieldsGeneratorGroup2Builder;
@class TestParsingMergeRepeatedGroup;
@class TestParsingMergeRepeatedGroupBuilder;
@class TestReallyLargeTagNumber;
@class TestReallyLargeTagNumberBuilder;
@class TestRecursiveMessage;
@class TestRecursiveMessageBuilder;
@class TestRepeatedScalarDifferentTagSizes;
@class TestRepeatedScalarDifferentTagSizesBuilder;
@class TestRequired;
@class TestRequiredBuilder;
@class TestRequiredForeign;
@class TestRequiredForeignBuilder;
@class TestRequiredOneof;
@class TestRequiredOneofBuilder;
@class TestRequiredOneofNestedMessage;
@class TestRequiredOneofNestedMessageBuilder;
@class TestUnpackedExtensions;
@class TestUnpackedExtensionsBuilder;
@class TestUnpackedTypes;
@class TestUnpackedTypesBuilder;
@class Uint32Message;
@class Uint32MessageBuilder;
@class Uint64Message;
@class Uint64MessageBuilder;
#ifndef __has_feature
  #define __has_feature(x) 0 // Compatibility with non-clang compilers.
#endif // __has_feature

#ifndef NS_RETURNS_NOT_RETAINED
  #if __has_feature(attribute_ns_returns_not_retained)
    #define NS_RETURNS_NOT_RETAINED __attribute__((ns_returns_not_retained))
  #else
    #define NS_RETURNS_NOT_RETAINED
  #endif
#endif

typedef enum {
  ForeignEnumForeignFoo = 4,
  ForeignEnumForeignBar = 5,
  ForeignEnumForeignBaz = 6,
} ForeignEnum;

BOOL ForeignEnumIsValidValue(ForeignEnum value);

typedef enum {
  TestEnumWithDupValueFoo1 = 1,
  TestEnumWithDupValueBar1 = 2,
  TestEnumWithDupValueBaz = 3,
} TestEnumWithDupValue;

BOOL TestEnumWithDupValueIsValidValue(TestEnumWithDupValue value);

typedef enum {
  TestSparseEnumSparseA = 123,
  TestSparseEnumSparseB = 62374,
  TestSparseEnumSparseC = 12589234,
  TestSparseEnumSparseD = -15,
  TestSparseEnumSparseE = -53452,
  TestSparseEnumSparseF = 0,
  TestSparseEnumSparseG = 2,
} TestSparseEnum;

BOOL TestSparseEnumIsValidValue(TestSparseEnum value);

typedef enum {
  TestAllTypesNestedEnumFoo = 1,
  TestAllTypesNestedEnumBar = 2,
  TestAllTypesNestedEnumBaz = 3,
  TestAllTypesNestedEnumNeg = -1,
} TestAllTypesNestedEnum;

BOOL TestAllTypesNestedEnumIsValidValue(TestAllTypesNestedEnum value);

typedef enum {
  TestOneof2NestedEnumFoo = 1,
  TestOneof2NestedEnumBar = 2,
  TestOneof2NestedEnumBaz = 3,
} TestOneof2NestedEnum;

BOOL TestOneof2NestedEnumIsValidValue(TestOneof2NestedEnum value);

typedef enum {
  TestDynamicExtensionsDynamicEnumTypeDynamicFoo = 2200,
  TestDynamicExtensionsDynamicEnumTypeDynamicBar = 2201,
  TestDynamicExtensionsDynamicEnumTypeDynamicBaz = 2202,
} TestDynamicExtensionsDynamicEnumType;

BOOL TestDynamicExtensionsDynamicEnumTypeIsValidValue(TestDynamicExtensionsDynamicEnumType value);


@interface UnittestRoot : NSObject {
}
+ (PBExtensionRegistry*) extensionRegistry;
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry;
+ (id<PBExtensionField>) optionalInt32Extension;
+ (id<PBExtensionField>) optionalInt64Extension;
+ (id<PBExtensionField>) optionalUint32Extension;
+ (id<PBExtensionField>) optionalUint64Extension;
+ (id<PBExtensionField>) optionalSint32Extension;
+ (id<PBExtensionField>) optionalSint64Extension;
+ (id<PBExtensionField>) optionalFixed32Extension;
+ (id<PBExtensionField>) optionalFixed64Extension;
+ (id<PBExtensionField>) optionalSfixed32Extension;
+ (id<PBExtensionField>) optionalSfixed64Extension;
+ (id<PBExtensionField>) optionalFloatExtension;
+ (id<PBExtensionField>) optionalDoubleExtension;
+ (id<PBExtensionField>) optionalBoolExtension;
+ (id<PBExtensionField>) optionalStringExtension;
+ (id<PBExtensionField>) optionalBytesExtension;
+ (id<PBExtensionField>) optionalGroupExtension;
+ (id<PBExtensionField>) optionalNestedMessageExtension;
+ (id<PBExtensionField>) optionalForeignMessageExtension;
+ (id<PBExtensionField>) optionalImportMessageExtension;
+ (id<PBExtensionField>) optionalNestedEnumExtension;
+ (id<PBExtensionField>) optionalForeignEnumExtension;
+ (id<PBExtensionField>) optionalImportEnumExtension;
+ (id<PBExtensionField>) optionalStringPieceExtension;
+ (id<PBExtensionField>) optionalCordExtension;
+ (id<PBExtensionField>) optionalPublicImportMessageExtension;
+ (id<PBExtensionField>) optionalLazyMessageExtension;
+ (id<PBExtensionField>) repeatedInt32Extension;
+ (id<PBExtensionField>) repeatedInt64Extension;
+ (id<PBExtensionField>) repeatedUint32Extension;
+ (id<PBExtensionField>) repeatedUint64Extension;
+ (id<PBExtensionField>) repeatedSint32Extension;
+ (id<PBExtensionField>) repeatedSint64Extension;
+ (id<PBExtensionField>) repeatedFixed32Extension;
+ (id<PBExtensionField>) repeatedFixed64Extension;
+ (id<PBExtensionField>) repeatedSfixed32Extension;
+ (id<PBExtensionField>) repeatedSfixed64Extension;
+ (id<PBExtensionField>) repeatedFloatExtension;
+ (id<PBExtensionField>) repeatedDoubleExtension;
+ (id<PBExtensionField>) repeatedBoolExtension;
+ (id<PBExtensionField>) repeatedStringExtension;
+ (id<PBExtensionField>) repeatedBytesExtension;
+ (id<PBExtensionField>) repeatedGroupExtension;
+ (id<PBExtensionField>) repeatedNestedMessageExtension;
+ (id<PBExtensionField>) repeatedForeignMessageExtension;
+ (id<PBExtensionField>) repeatedImportMessageExtension;
+ (id<PBExtensionField>) repeatedNestedEnumExtension;
+ (id<PBExtensionField>) repeatedForeignEnumExtension;
+ (id<PBExtensionField>) repeatedImportEnumExtension;
+ (id<PBExtensionField>) repeatedStringPieceExtension;
+ (id<PBExtensionField>) repeatedCordExtension;
+ (id<PBExtensionField>) repeatedLazyMessageExtension;
+ (id<PBExtensionField>) defaultInt32Extension;
+ (id<PBExtensionField>) defaultInt64Extension;
+ (id<PBExtensionField>) defaultUint32Extension;
+ (id<PBExtensionField>) defaultUint64Extension;
+ (id<PBExtensionField>) defaultSint32Extension;
+ (id<PBExtensionField>) defaultSint64Extension;
+ (id<PBExtensionField>) defaultFixed32Extension;
+ (id<PBExtensionField>) defaultFixed64Extension;
+ (id<PBExtensionField>) defaultSfixed32Extension;
+ (id<PBExtensionField>) defaultSfixed64Extension;
+ (id<PBExtensionField>) defaultFloatExtension;
+ (id<PBExtensionField>) defaultDoubleExtension;
+ (id<PBExtensionField>) defaultBoolExtension;
+ (id<PBExtensionField>) defaultStringExtension;
+ (id<PBExtensionField>) defaultBytesExtension;
+ (id<PBExtensionField>) defaultNestedEnumExtension;
+ (id<PBExtensionField>) defaultForeignEnumExtension;
+ (id<PBExtensionField>) defaultImportEnumExtension;
+ (id<PBExtensionField>) defaultStringPieceExtension;
+ (id<PBExtensionField>) defaultCordExtension;
+ (id<PBExtensionField>) oneofUint32Extension;
+ (id<PBExtensionField>) oneofNestedMessageExtension;
+ (id<PBExtensionField>) oneofStringExtension;
+ (id<PBExtensionField>) oneofBytesExtension;
+ (id<PBExtensionField>) myExtensionString;
+ (id<PBExtensionField>) myExtensionInt;
+ (id<PBExtensionField>) packedInt32Extension;
+ (id<PBExtensionField>) packedInt64Extension;
+ (id<PBExtensionField>) packedUint32Extension;
+ (id<PBExtensionField>) packedUint64Extension;
+ (id<PBExtensionField>) packedSint32Extension;
+ (id<PBExtensionField>) packedSint64Extension;
+ (id<PBExtensionField>) packedFixed32Extension;
+ (id<PBExtensionField>) packedFixed64Extension;
+ (id<PBExtensionField>) packedSfixed32Extension;
+ (id<PBExtensionField>) packedSfixed64Extension;
+ (id<PBExtensionField>) packedFloatExtension;
+ (id<PBExtensionField>) packedDoubleExtension;
+ (id<PBExtensionField>) packedBoolExtension;
+ (id<PBExtensionField>) packedEnumExtension;
+ (id<PBExtensionField>) unpackedInt32Extension;
+ (id<PBExtensionField>) unpackedInt64Extension;
+ (id<PBExtensionField>) unpackedUint32Extension;
+ (id<PBExtensionField>) unpackedUint64Extension;
+ (id<PBExtensionField>) unpackedSint32Extension;
+ (id<PBExtensionField>) unpackedSint64Extension;
+ (id<PBExtensionField>) unpackedFixed32Extension;
+ (id<PBExtensionField>) unpackedFixed64Extension;
+ (id<PBExtensionField>) unpackedSfixed32Extension;
+ (id<PBExtensionField>) unpackedSfixed64Extension;
+ (id<PBExtensionField>) unpackedFloatExtension;
+ (id<PBExtensionField>) unpackedDoubleExtension;
+ (id<PBExtensionField>) unpackedBoolExtension;
+ (id<PBExtensionField>) unpackedEnumExtension;
@end

@interface TestAllTypes : PBGeneratedMessage {
@private
  BOOL hasOptionalBool_:1;
  BOOL hasDefaultBool_:1;
  BOOL hasOptionalDouble_:1;
  BOOL hasDefaultDouble_:1;
  BOOL hasOptionalFloat_:1;
  BOOL hasDefaultFloat_:1;
  BOOL hasOptionalInt64_:1;
  BOOL hasDefaultInt64_:1;
  BOOL hasOptionalUint64_:1;
  BOOL hasDefaultUint64_:1;
  BOOL hasOptionalInt32_:1;
  BOOL hasDefaultInt32_:1;
  BOOL hasOptionalFixed64_:1;
  BOOL hasDefaultFixed64_:1;
  BOOL hasOptionalFixed32_:1;
  BOOL hasDefaultFixed32_:1;
  BOOL hasOneofString_:1;
  BOOL hasDefaultCord_:1;
  BOOL hasDefaultStringPiece_:1;
  BOOL hasDefaultString_:1;
  BOOL hasOptionalString_:1;
  BOOL hasOptionalStringPiece_:1;
  BOOL hasOptionalCord_:1;
  BOOL hasOptionalGroup_:1;
  BOOL hasOneofNestedMessage_:1;
  BOOL hasOptionalNestedMessage_:1;
  BOOL hasOptionalForeignMessage_:1;
  BOOL hasOptionalImportMessage_:1;
  BOOL hasOptionalPublicImportMessage_:1;
  BOOL hasOptionalLazyMessage_:1;
  BOOL hasOneofBytes_:1;
  BOOL hasDefaultBytes_:1;
  BOOL hasOptionalBytes_:1;
  BOOL hasDefaultUint32_:1;
  BOOL hasOptionalUint32_:1;
  BOOL hasOneofUint32_:1;
  BOOL hasDefaultImportEnum_:1;
  BOOL hasDefaultForeignEnum_:1;
  BOOL hasDefaultNestedEnum_:1;
  BOOL hasOptionalNestedEnum_:1;
  BOOL hasOptionalForeignEnum_:1;
  BOOL hasOptionalImportEnum_:1;
  BOOL hasOptionalSfixed32_:1;
  BOOL hasDefaultSfixed32_:1;
  BOOL hasOptionalSfixed64_:1;
  BOOL hasDefaultSfixed64_:1;
  BOOL hasOptionalSint32_:1;
  BOOL hasDefaultSint32_:1;
  BOOL hasOptionalSint64_:1;
  BOOL hasDefaultSint64_:1;
  BOOL optionalBool_:1;
  BOOL defaultBool_:1;
  Float64 optionalDouble;
  Float64 defaultDouble;
  Float32 optionalFloat;
  Float32 defaultFloat;
  SInt64 optionalInt64;
  SInt64 defaultInt64;
  UInt64 optionalUint64;
  UInt64 defaultUint64;
  SInt32 optionalInt32;
  SInt32 defaultInt32;
  UInt64 optionalFixed64;
  UInt64 defaultFixed64;
  UInt32 optionalFixed32;
  UInt32 defaultFixed32;
  NSString* oneofString;
  NSString* defaultCord;
  NSString* defaultStringPiece;
  NSString* defaultString;
  NSString* optionalString;
  NSString* optionalStringPiece;
  NSString* optionalCord;
  TestAllTypesOptionalGroup* optionalGroup;
  TestAllTypesNestedMessage* oneofNestedMessage;
  TestAllTypesNestedMessage* optionalNestedMessage;
  ForeignMessage* optionalForeignMessage;
  ImportMessage* optionalImportMessage;
  PublicImportMessage* optionalPublicImportMessage;
  TestAllTypesNestedMessage* optionalLazyMessage;
  NSData* oneofBytes;
  NSData* defaultBytes;
  NSData* optionalBytes;
  UInt32 defaultUint32;
  UInt32 optionalUint32;
  UInt32 oneofUint32;
  ImportEnum defaultImportEnum;
  ForeignEnum defaultForeignEnum;
  TestAllTypesNestedEnum defaultNestedEnum;
  TestAllTypesNestedEnum optionalNestedEnum;
  ForeignEnum optionalForeignEnum;
  ImportEnum optionalImportEnum;
  SInt32 optionalSfixed32;
  SInt32 defaultSfixed32;
  SInt64 optionalSfixed64;
  SInt64 defaultSfixed64;
  SInt32 optionalSint32;
  SInt32 defaultSint32;
  SInt64 optionalSint64;
  SInt64 defaultSint64;
  PBAppendableArray * repeatedBoolArray;
  PBAppendableArray * repeatedDoubleArray;
  PBAppendableArray * repeatedFloatArray;
  PBAppendableArray * repeatedInt64Array;
  PBAppendableArray * repeatedUint64Array;
  PBAppendableArray * repeatedInt32Array;
  PBAppendableArray * repeatedFixed64Array;
  PBAppendableArray * repeatedFixed32Array;
  NSMutableArray * repeatedCordArray;
  NSMutableArray * repeatedStringPieceArray;
  NSMutableArray * repeatedStringArray;
  NSMutableArray * repeatedGroupArray;
  NSMutableArray * repeatedLazyMessageArray;
  NSMutableArray * repeatedImportMessageArray;
  NSMutableArray * repeatedForeignMessageArray;
  NSMutableArray * repeatedNestedMessageArray;
  NSMutableArray * repeatedBytesArray;
  PBAppendableArray * repeatedUint32Array;
  PBAppendableArray * repeatedImportEnumArray;
  PBAppendableArray * repeatedForeignEnumArray;
  PBAppendableArray * repeatedNestedEnumArray;
  PBAppendableArray * repeatedSfixed32Array;
  PBAppendableArray * repeatedSfixed64Array;
  PBAppendableArray * repeatedSint32Array;
  PBAppendableArray * repeatedSint64Array;
}
- (BOOL) hasOptionalInt32;
- (BOOL) hasOptionalInt64;
- (BOOL) hasOptionalUint32;
- (BOOL) hasOptionalUint64;
- (BOOL) hasOptionalSint32;
- (BOOL) hasOptionalSint64;
- (BOOL) hasOptionalFixed32;
- (BOOL) hasOptionalFixed64;
- (BOOL) hasOptionalSfixed32;
- (BOOL) hasOptionalSfixed64;
- (BOOL) hasOptionalFloat;
- (BOOL) hasOptionalDouble;
- (BOOL) hasOptionalBool;
- (BOOL) hasOptionalString;
- (BOOL) hasOptionalBytes;
- (BOOL) hasOptionalGroup;
- (BOOL) hasOptionalNestedMessage;
- (BOOL) hasOptionalForeignMessage;
- (BOOL) hasOptionalImportMessage;
- (BOOL) hasOptionalNestedEnum;
- (BOOL) hasOptionalForeignEnum;
- (BOOL) hasOptionalImportEnum;
- (BOOL) hasOptionalStringPiece;
- (BOOL) hasOptionalCord;
- (BOOL) hasOptionalPublicImportMessage;
- (BOOL) hasOptionalLazyMessage;
- (BOOL) hasDefaultInt32;
- (BOOL) hasDefaultInt64;
- (BOOL) hasDefaultUint32;
- (BOOL) hasDefaultUint64;
- (BOOL) hasDefaultSint32;
- (BOOL) hasDefaultSint64;
- (BOOL) hasDefaultFixed32;
- (BOOL) hasDefaultFixed64;
- (BOOL) hasDefaultSfixed32;
- (BOOL) hasDefaultSfixed64;
- (BOOL) hasDefaultFloat;
- (BOOL) hasDefaultDouble;
- (BOOL) hasDefaultBool;
- (BOOL) hasDefaultString;
- (BOOL) hasDefaultBytes;
- (BOOL) hasDefaultNestedEnum;
- (BOOL) hasDefaultForeignEnum;
- (BOOL) hasDefaultImportEnum;
- (BOOL) hasDefaultStringPiece;
- (BOOL) hasDefaultCord;
- (BOOL) hasOneofUint32;
- (BOOL) hasOneofNestedMessage;
- (BOOL) hasOneofString;
- (BOOL) hasOneofBytes;
@property (readonly) SInt32 optionalInt32;
@property (readonly) SInt64 optionalInt64;
@property (readonly) UInt32 optionalUint32;
@property (readonly) UInt64 optionalUint64;
@property (readonly) SInt32 optionalSint32;
@property (readonly) SInt64 optionalSint64;
@property (readonly) UInt32 optionalFixed32;
@property (readonly) UInt64 optionalFixed64;
@property (readonly) SInt32 optionalSfixed32;
@property (readonly) SInt64 optionalSfixed64;
@property (readonly) Float32 optionalFloat;
@property (readonly) Float64 optionalDouble;
- (BOOL) optionalBool;
@property (readonly, strong) NSString* optionalString;
@property (readonly, strong) NSData* optionalBytes;
@property (readonly, strong) TestAllTypesOptionalGroup* optionalGroup;
@property (readonly, strong) TestAllTypesNestedMessage* optionalNestedMessage;
@property (readonly, strong) ForeignMessage* optionalForeignMessage;
@property (readonly, strong) ImportMessage* optionalImportMessage;
@property (readonly) TestAllTypesNestedEnum optionalNestedEnum;
@property (readonly) ForeignEnum optionalForeignEnum;
@property (readonly) ImportEnum optionalImportEnum;
@property (readonly, strong) NSString* optionalStringPiece;
@property (readonly, strong) NSString* optionalCord;
@property (readonly, strong) PublicImportMessage* optionalPublicImportMessage;
@property (readonly, strong) TestAllTypesNestedMessage* optionalLazyMessage;
@property (readonly, strong) PBArray * repeatedInt32;
@property (readonly, strong) PBArray * repeatedInt64;
@property (readonly, strong) PBArray * repeatedUint32;
@property (readonly, strong) PBArray * repeatedUint64;
@property (readonly, strong) PBArray * repeatedSint32;
@property (readonly, strong) PBArray * repeatedSint64;
@property (readonly, strong) PBArray * repeatedFixed32;
@property (readonly, strong) PBArray * repeatedFixed64;
@property (readonly, strong) PBArray * repeatedSfixed32;
@property (readonly, strong) PBArray * repeatedSfixed64;
@property (readonly, strong) PBArray * repeatedFloat;
@property (readonly, strong) PBArray * repeatedDouble;
@property (readonly, strong) PBArray * repeatedBool;
@property (readonly, strong) PBArray * repeatedString;
@property (readonly, strong) PBArray * repeatedBytes;
@property (readonly, strong) NSArray * repeatedGroup;
@property (readonly, strong) NSArray * repeatedNestedMessage;
@property (readonly, strong) NSArray * repeatedForeignMessage;
@property (readonly, strong) NSArray * repeatedImportMessage;
@property (readonly, strong) PBArray * repeatedNestedEnum;
@property (readonly, strong) PBArray * repeatedForeignEnum;
@property (readonly, strong) PBArray * repeatedImportEnum;
@property (readonly, strong) PBArray * repeatedStringPiece;
@property (readonly, strong) PBArray * repeatedCord;
@property (readonly, strong) NSArray * repeatedLazyMessage;
@property (readonly) SInt32 defaultInt32;
@property (readonly) SInt64 defaultInt64;
@property (readonly) UInt32 defaultUint32;
@property (readonly) UInt64 defaultUint64;
@property (readonly) SInt32 defaultSint32;
@property (readonly) SInt64 defaultSint64;
@property (readonly) UInt32 defaultFixed32;
@property (readonly) UInt64 defaultFixed64;
@property (readonly) SInt32 defaultSfixed32;
@property (readonly) SInt64 defaultSfixed64;
@property (readonly) Float32 defaultFloat;
@property (readonly) Float64 defaultDouble;
- (BOOL) defaultBool;
@property (readonly, strong) NSString* defaultString;
@property (readonly, strong) NSData* defaultBytes;
@property (readonly) TestAllTypesNestedEnum defaultNestedEnum;
@property (readonly) ForeignEnum defaultForeignEnum;
@property (readonly) ImportEnum defaultImportEnum;
@property (readonly, strong) NSString* defaultStringPiece;
@property (readonly, strong) NSString* defaultCord;
@property (readonly) UInt32 oneofUint32;
@property (readonly, strong) TestAllTypesNestedMessage* oneofNestedMessage;
@property (readonly, strong) NSString* oneofString;
@property (readonly, strong) NSData* oneofBytes;
- (SInt32)repeatedInt32AtIndex:(NSUInteger)index;
- (SInt64)repeatedInt64AtIndex:(NSUInteger)index;
- (UInt32)repeatedUint32AtIndex:(NSUInteger)index;
- (UInt64)repeatedUint64AtIndex:(NSUInteger)index;
- (SInt32)repeatedSint32AtIndex:(NSUInteger)index;
- (SInt64)repeatedSint64AtIndex:(NSUInteger)index;
- (UInt32)repeatedFixed32AtIndex:(NSUInteger)index;
- (UInt64)repeatedFixed64AtIndex:(NSUInteger)index;
- (SInt32)repeatedSfixed32AtIndex:(NSUInteger)index;
- (SInt64)repeatedSfixed64AtIndex:(NSUInteger)index;
- (Float32)repeatedFloatAtIndex:(NSUInteger)index;
- (Float64)repeatedDoubleAtIndex:(NSUInteger)index;
- (BOOL)repeatedBoolAtIndex:(NSUInteger)index;
- (NSString*)repeatedStringAtIndex:(NSUInteger)index;
- (NSData*)repeatedBytesAtIndex:(NSUInteger)index;
- (TestAllTypesRepeatedGroup*)repeatedGroupAtIndex:(NSUInteger)index;
- (TestAllTypesNestedMessage*)repeatedNestedMessageAtIndex:(NSUInteger)index;
- (ForeignMessage*)repeatedForeignMessageAtIndex:(NSUInteger)index;
- (ImportMessage*)repeatedImportMessageAtIndex:(NSUInteger)index;
- (TestAllTypesNestedEnum)repeatedNestedEnumAtIndex:(NSUInteger)index;
- (ForeignEnum)repeatedForeignEnumAtIndex:(NSUInteger)index;
- (ImportEnum)repeatedImportEnumAtIndex:(NSUInteger)index;
- (NSString*)repeatedStringPieceAtIndex:(NSUInteger)index;
- (NSString*)repeatedCordAtIndex:(NSUInteger)index;
- (TestAllTypesNestedMessage*)repeatedLazyMessageAtIndex:(NSUInteger)index;

+ (TestAllTypes*) defaultInstance;
- (TestAllTypes*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (TestAllTypesBuilder*) builder;
+ (TestAllTypesBuilder*) builder;
+ (TestAllTypesBuilder*) builderWithPrototype:(TestAllTypes*) prototype;
- (TestAllTypesBuilder*) toBuilder;

+ (TestAllTypes*) parseFromData:(NSData*) data;
+ (TestAllTypes*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TestAllTypes*) parseFromInputStream:(NSInputStream*) input;
+ (TestAllTypes*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TestAllTypes*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (TestAllTypes*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface TestAllTypesNestedMessage : PBGeneratedMessage {
@private
  BOOL hasBb_:1;
  SInt32 bb;
}
- (BOOL) hasBb;
@property (readonly) SInt32 bb;

+ (TestAllTypesNestedMessage*) defaultInstance;
- (TestAllTypesNestedMessage*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (TestAllTypesNestedMessageBuilder*) builder;
+ (TestAllTypesNestedMessageBuilder*) builder;
+ (TestAllTypesNestedMessageBuilder*) builderWithPrototype:(TestAllTypesNestedMessage*) prototype;
- (TestAllTypesNestedMessageBuilder*) toBuilder;

+ (TestAllTypesNestedMessage*) parseFromData:(NSData*) data;
+ (TestAllTypesNestedMessage*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TestAllTypesNestedMessage*) parseFromInputStream:(NSInputStream*) input;
+ (TestAllTypesNestedMessage*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TestAllTypesNestedMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (TestAllTypesNestedMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface TestAllTypesNestedMessageBuilder : PBGeneratedMessageBuilder {
@private
  TestAllTypesNestedMessage* result;
}

- (TestAllTypesNestedMessage*) defaultInstance;

- (TestAllTypesNestedMessageBuilder*) clear;
- (TestAllTypesNestedMessageBuilder*) clone;

- (TestAllTypesNestedMessage*) build;
- (TestAllTypesNestedMessage*) buildPartial;

- (TestAllTypesNestedMessageBuilder*) mergeFrom:(TestAllTypesNestedMessage*) other;
- (TestAllTypesNestedMessageBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (TestAllTypesNestedMessageBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasBb;
- (SInt32) bb;
- (TestAllTypesNestedMessageBuilder*) setBb:(SInt32) value;
- (TestAllTypesNestedMessageBuilder*) clearBb;
@end

@interface TestAllTypesOptionalGroup : PBGeneratedMessage {
@private
  BOOL hasA_:1;
  SInt32 a;
}
- (BOOL) hasA;
@property (readonly) SInt32 a;

+ (TestAllTypesOptionalGroup*) defaultInstance;
- (TestAllTypesOptionalGroup*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (TestAllTypesOptionalGroupBuilder*) builder;
+ (TestAllTypesOptionalGroupBuilder*) builder;
+ (TestAllTypesOptionalGroupBuilder*) builderWithPrototype:(TestAllTypesOptionalGroup*) prototype;
- (TestAllTypesOptionalGroupBuilder*) toBuilder;

+ (TestAllTypesOptionalGroup*) parseFromData:(NSData*) data;
+ (TestAllTypesOptionalGroup*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TestAllTypesOptionalGroup*) parseFromInputStream:(NSInputStream*) input;
+ (TestAllTypesOptionalGroup*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TestAllTypesOptionalGroup*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (TestAllTypesOptionalGroup*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface TestAllTypesOptionalGroupBuilder : PBGeneratedMessageBuilder {
@private
  TestAllTypesOptionalGroup* result;
}

- (TestAllTypesOptionalGroup*) defaultInstance;

- (TestAllTypesOptionalGroupBuilder*) clear;
- (TestAllTypesOptionalGroupBuilder*) clone;

- (TestAllTypesOptionalGroup*) build;
- (TestAllTypesOptionalGroup*) buildPartial;

- (TestAllTypesOptionalGroupBuilder*) mergeFrom:(TestAllTypesOptionalGroup*) other;
- (TestAllTypesOptionalGroupBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (TestAllTypesOptionalGroupBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasA;
- (SInt32) a;
- (TestAllTypesOptionalGroupBuilder*) setA:(SInt32) value;
- (TestAllTypesOptionalGroupBuilder*) clearA;
@end

@interface TestAllTypesRepeatedGroup : PBGeneratedMessage {
@private
  BOOL hasA_:1;
  SInt32 a;
}
- (BOOL) hasA;
@property (readonly) SInt32 a;

+ (TestAllTypesRepeatedGroup*) defaultInstance;
- (TestAllTypesRepeatedGroup*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (TestAllTypesRepeatedGroupBuilder*) builder;
+ (TestAllTypesRepeatedGroupBuilder*) builder;
+ (TestAllTypesRepeatedGroupBuilder*) builderWithPrototype:(TestAllTypesRepeatedGroup*) prototype;
- (TestAllTypesRepeatedGroupBuilder*) toBuilder;

+ (TestAllTypesRepeatedGroup*) parseFromData:(NSData*) data;
+ (TestAllTypesRepeatedGroup*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TestAllTypesRepeatedGroup*) parseFromInputStream:(NSInputStream*) input;
+ (TestAllTypesRepeatedGroup*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TestAllTypesRepeatedGroup*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (TestAllTypesRepeatedGroup*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface TestAllTypesRepeatedGroupBuilder : PBGeneratedMessageBuilder {
@private
  TestAllTypesRepeatedGroup* result;
}

- (TestAllTypesRepeatedGroup*) defaultInstance;

- (TestAllTypesRepeatedGroupBuilder*) clear;
- (TestAllTypesRepeatedGroupBuilder*) clone;

- (TestAllTypesRepeatedGroup*) build;
- (TestAllTypesRepeatedGroup*) buildPartial;

- (TestAllTypesRepeatedGroupBuilder*) mergeFrom:(TestAllTypesRepeatedGroup*) other;
- (TestAllTypesRepeatedGroupBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (TestAllTypesRepeatedGroupBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasA;
- (SInt32) a;
- (TestAllTypesRepeatedGroupBuilder*) setA:(SInt32) value;
- (TestAllTypesRepeatedGroupBuilder*) clearA;
@end

@interface TestAllTypesBuilder : PBGeneratedMessageBuilder {
@private
  TestAllTypes* result;
}

- (TestAllTypes*) defaultInstance;

- (TestAllTypesBuilder*) clear;
- (TestAllTypesBuilder*) clone;

- (TestAllTypes*) build;
- (TestAllTypes*) buildPartial;

- (TestAllTypesBuilder*) mergeFrom:(TestAllTypes*) other;
- (TestAllTypesBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (TestAllTypesBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasOptionalInt32;
- (SInt32) optionalInt32;
- (TestAllTypesBuilder*) setOptionalInt32:(SInt32) value;
- (TestAllTypesBuilder*) clearOptionalInt32;

- (BOOL) hasOptionalInt64;
- (SInt64) optionalInt64;
- (TestAllTypesBuilder*) setOptionalInt64:(SInt64) value;
- (TestAllTypesBuilder*) clearOptionalInt64;

- (BOOL) hasOptionalUint32;
- (UInt32) optionalUint32;
- (TestAllTypesBuilder*) setOptionalUint32:(UInt32) value;
- (TestAllTypesBuilder*) clearOptionalUint32;

- (BOOL) hasOptionalUint64;
- (UInt64) optionalUint64;
- (TestAllTypesBuilder*) setOptionalUint64:(UInt64) value;
- (TestAllTypesBuilder*) clearOptionalUint64;

- (BOOL) hasOptionalSint32;
- (SInt32) optionalSint32;
- (TestAllTypesBuilder*) setOptionalSint32:(SInt32) value;
- (TestAllTypesBuilder*) clearOptionalSint32;

- (BOOL) hasOptionalSint64;
- (SInt64) optionalSint64;
- (TestAllTypesBuilder*) setOptionalSint64:(SInt64) value;
- (TestAllTypesBuilder*) clearOptionalSint64;

- (BOOL) hasOptionalFixed32;
- (UInt32) optionalFixed32;
- (TestAllTypesBuilder*) setOptionalFixed32:(UInt32) value;
- (TestAllTypesBuilder*) clearOptionalFixed32;

- (BOOL) hasOptionalFixed64;
- (UInt64) optionalFixed64;
- (TestAllTypesBuilder*) setOptionalFixed64:(UInt64) value;
- (TestAllTypesBuilder*) clearOptionalFixed64;

- (BOOL) hasOptionalSfixed32;
- (SInt32) optionalSfixed32;
- (TestAllTypesBuilder*) setOptionalSfixed32:(SInt32) value;
- (TestAllTypesBuilder*) clearOptionalSfixed32;

- (BOOL) hasOptionalSfixed64;
- (SInt64) optionalSfixed64;
- (TestAllTypesBuilder*) setOptionalSfixed64:(SInt64) value;
- (TestAllTypesBuilder*) clearOptionalSfixed64;

- (BOOL) hasOptionalFloat;
- (Float32) optionalFloat;
- (TestAllTypesBuilder*) setOptionalFloat:(Float32) value;
- (TestAllTypesBuilder*) clearOptionalFloat;

- (BOOL) hasOptionalDouble;
- (Float64) optionalDouble;
- (TestAllTypesBuilder*) setOptionalDouble:(Float64) value;
- (TestAllTypesBuilder*) clearOptionalDouble;

- (BOOL) hasOptionalBool;
- (BOOL) optionalBool;
- (TestAllTypesBuilder*) setOptionalBool:(BOOL) value;
- (TestAllTypesBuilder*) clearOptionalBool;

- (BOOL) hasOptionalString;
- (NSString*) optionalString;
- (TestAllTypesBuilder*) setOptionalString:(NSString*) value;
- (TestAllTypesBuilder*) clearOptionalString;

- (BOOL) hasOptionalBytes;
- (NSData*) optionalBytes;
- (TestAllTypesBuilder*) setOptionalBytes:(NSData*) value;
- (TestAllTypesBuilder*) clearOptionalBytes;

- (BOOL) hasOptionalGroup;
- (TestAllTypesOptionalGroup*) optionalGroup;
- (TestAllTypesBuilder*) setOptionalGroup:(TestAllTypesOptionalGroup*) value;
- (TestAllTypesBuilder*) setOptionalGroupBuilder:(TestAllTypesOptionalGroupBuilder*) builderForValue;
- (TestAllTypesBuilder*) mergeOptionalGroup:(TestAllTypesOptionalGroup*) value;
- (TestAllTypesBuilder*) clearOptionalGroup;

- (BOOL) hasOptionalNestedMessage;
- (TestAllTypesNestedMessage*) optionalNestedMessage;
- (TestAllTypesBuilder*) setOptionalNestedMessage:(TestAllTypesNestedMessage*) value;
- (TestAllTypesBuilder*) setOptionalNestedMessageBuilder:(TestAllTypesNestedMessageBuilder*) builderForValue;
- (TestAllTypesBuilder*) mergeOptionalNestedMessage:(TestAllTypesNestedMessage*) value;
- (TestAllTypesBuilder*) clearOptionalNestedMessage;

- (BOOL) hasOptionalForeignMessage;
- (ForeignMessage*) optionalForeignMessage;
- (TestAllTypesBuilder*) setOptionalForeignMessage:(ForeignMessage*) value;
- (TestAllTypesBuilder*) setOptionalForeignMessageBuilder:(ForeignMessageBuilder*) builderForValue;
- (TestAllTypesBuilder*) mergeOptionalForeignMessage:(ForeignMessage*) value;
- (TestAllTypesBuilder*) clearOptionalForeignMessage;

- (BOOL) hasOptionalImportMessage;
- (ImportMessage*) optionalImportMessage;
- (TestAllTypesBuilder*) setOptionalImportMessage:(ImportMessage*) value;
- (TestAllTypesBuilder*) setOptionalImportMessageBuilder:(ImportMessageBuilder*) builderForValue;
- (TestAllTypesBuilder*) mergeOptionalImportMessage:(ImportMessage*) value;
- (TestAllTypesBuilder*) clearOptionalImportMessage;

- (BOOL) hasOptionalNestedEnum;
- (TestAllTypesNestedEnum) optionalNestedEnum;
- (TestAllTypesBuilder*) setOptionalNestedEnum:(TestAllTypesNestedEnum) value;
- (TestAllTypesBuilder*) clearOptionalNestedEnum;

- (BOOL) hasOptionalForeignEnum;
- (ForeignEnum) optionalForeignEnum;
- (TestAllTypesBuilder*) setOptionalForeignEnum:(ForeignEnum) value;
- (TestAllTypesBuilder*) clearOptionalForeignEnum;

- (BOOL) hasOptionalImportEnum;
- (ImportEnum) optionalImportEnum;
- (TestAllTypesBuilder*) setOptionalImportEnum:(ImportEnum) value;
- (TestAllTypesBuilder*) clearOptionalImportEnum;

- (BOOL) hasOptionalStringPiece;
- (NSString*) optionalStringPiece;
- (TestAllTypesBuilder*) setOptionalStringPiece:(NSString*) value;
- (TestAllTypesBuilder*) clearOptionalStringPiece;

- (BOOL) hasOptionalCord;
- (NSString*) optionalCord;
- (TestAllTypesBuilder*) setOptionalCord:(NSString*) value;
- (TestAllTypesBuilder*) clearOptionalCord;

- (BOOL) hasOptionalPublicImportMessage;
- (PublicImportMessage*) optionalPublicImportMessage;
- (TestAllTypesBuilder*) setOptionalPublicImportMessage:(PublicImportMessage*) value;
- (TestAllTypesBuilder*) setOptionalPublicImportMessageBuilder:(PublicImportMessageBuilder*) builderForValue;
- (TestAllTypesBuilder*) mergeOptionalPublicImportMessage:(PublicImportMessage*) value;
- (TestAllTypesBuilder*) clearOptionalPublicImportMessage;

- (BOOL) hasOptionalLazyMessage;
- (TestAllTypesNestedMessage*) optionalLazyMessage;
- (TestAllTypesBuilder*) setOptionalLazyMessage:(TestAllTypesNestedMessage*) value;
- (TestAllTypesBuilder*) setOptionalLazyMessageBuilder:(TestAllTypesNestedMessageBuilder*) builderForValue;
- (TestAllTypesBuilder*) mergeOptionalLazyMessage:(TestAllTypesNestedMessage*) value;
- (TestAllTypesBuilder*) clearOptionalLazyMessage;

- (PBAppendableArray *)repeatedInt32;
- (SInt32)repeatedInt32AtIndex:(NSUInteger)index;
- (TestAllTypesBuilder *)addRepeatedInt32:(SInt32)value;
- (TestAllTypesBuilder *)setRepeatedInt32Array:(NSArray *)array;
- (TestAllTypesBuilder *)setRepeatedInt32Values:(const SInt32 *)values count:(NSUInteger)count;
- (TestAllTypesBuilder *)clearRepeatedInt32;

- (PBAppendableArray *)repeatedInt64;
- (SInt64)repeatedInt64AtIndex:(NSUInteger)index;
- (TestAllTypesBuilder *)addRepeatedInt64:(SInt64)value;
- (TestAllTypesBuilder *)setRepeatedInt64Array:(NSArray *)array;
- (TestAllTypesBuilder *)setRepeatedInt64Values:(const SInt64 *)values count:(NSUInteger)count;
- (TestAllTypesBuilder *)clearRepeatedInt64;

- (PBAppendableArray *)repeatedUint32;
- (UInt32)repeatedUint32AtIndex:(NSUInteger)index;
- (TestAllTypesBuilder *)addRepeatedUint32:(UInt32)value;
- (TestAllTypesBuilder *)setRepeatedUint32Array:(NSArray *)array;
- (TestAllTypesBuilder *)setRepeatedUint32Values:(const UInt32 *)values count:(NSUInteger)count;
- (TestAllTypesBuilder *)clearRepeatedUint32;

- (PBAppendableArray *)repeatedUint64;
- (UInt64)repeatedUint64AtIndex:(NSUInteger)index;
- (TestAllTypesBuilder *)addRepeatedUint64:(UInt64)value;
- (TestAllTypesBuilder *)setRepeatedUint64Array:(NSArray *)array;
- (TestAllTypesBuilder *)setRepeatedUint64Values:(const UInt64 *)values count:(NSUInteger)count;
- (TestAllTypesBuilder *)clearRepeatedUint64;

- (PBAppendableArray *)repeatedSint32;
- (SInt32)repeatedSint32AtIndex:(NSUInteger)index;
- (TestAllTypesBuilder *)addRepeatedSint32:(SInt32)value;
- (TestAllTypesBuilder *)setRepeatedSint32Array:(NSArray *)array;
- (TestAllTypesBuilder *)setRepeatedSint32Values:(const SInt32 *)values count:(NSUInteger)count;
- (TestAllTypesBuilder *)clearRepeatedSint32;

- (PBAppendableArray *)repeatedSint64;
- (SInt64)repeatedSint64AtIndex:(NSUInteger)index;
- (TestAllTypesBuilder *)addRepeatedSint64:(SInt64)value;
- (TestAllTypesBuilder *)setRepeatedSint64Array:(NSArray *)array;
- (TestAllTypesBuilder *)setRepeatedSint64Values:(const SInt64 *)values count:(NSUInteger)count;
- (TestAllTypesBuilder *)clearRepeatedSint64;

- (PBAppendableArray *)repeatedFixed32;
- (UInt32)repeatedFixed32AtIndex:(NSUInteger)index;
- (TestAllTypesBuilder *)addRepeatedFixed32:(UInt32)value;
- (TestAllTypesBuilder *)setRepeatedFixed32Array:(NSArray *)array;
- (TestAllTypesBuilder *)setRepeatedFixed32Values:(const UInt32 *)values count:(NSUInteger)count;
- (TestAllTypesBuilder *)clearRepeatedFixed32;

- (PBAppendableArray *)repeatedFixed64;
- (UInt64)repeatedFixed64AtIndex:(NSUInteger)index;
- (TestAllTypesBuilder *)addRepeatedFixed64:(UInt64)value;
- (TestAllTypesBuilder *)setRepeatedFixed64Array:(NSArray *)array;
- (TestAllTypesBuilder *)setRepeatedFixed64Values:(const UInt64 *)values count:(NSUInteger)count;
- (TestAllTypesBuilder *)clearRepeatedFixed64;

- (PBAppendableArray *)repeatedSfixed32;
- (SInt32)repeatedSfixed32AtIndex:(NSUInteger)index;
- (TestAllTypesBuilder *)addRepeatedSfixed32:(SInt32)value;
- (TestAllTypesBuilder *)setRepeatedSfixed32Array:(NSArray *)array;
- (TestAllTypesBuilder *)setRepeatedSfixed32Values:(const SInt32 *)values count:(NSUInteger)count;
- (TestAllTypesBuilder *)clearRepeatedSfixed32;

- (PBAppendableArray *)repeatedSfixed64;
- (SInt64)repeatedSfixed64AtIndex:(NSUInteger)index;
- (TestAllTypesBuilder *)addRepeatedSfixed64:(SInt64)value;
- (TestAllTypesBuilder *)setRepeatedSfixed64Array:(NSArray *)array;
- (TestAllTypesBuilder *)setRepeatedSfixed64Values:(const SInt64 *)values count:(NSUInteger)count;
- (TestAllTypesBuilder *)clearRepeatedSfixed64;

- (PBAppendableArray *)repeatedFloat;
- (Float32)repeatedFloatAtIndex:(NSUInteger)index;
- (TestAllTypesBuilder *)addRepeatedFloat:(Float32)value;
- (TestAllTypesBuilder *)setRepeatedFloatArray:(NSArray *)array;
- (TestAllTypesBuilder *)setRepeatedFloatValues:(const Float32 *)values count:(NSUInteger)count;
- (TestAllTypesBuilder *)clearRepeatedFloat;

- (PBAppendableArray *)repeatedDouble;
- (Float64)repeatedDoubleAtIndex:(NSUInteger)index;
- (TestAllTypesBuilder *)addRepeatedDouble:(Float64)value;
- (TestAllTypesBuilder *)setRepeatedDoubleArray:(NSArray *)array;
- (TestAllTypesBuilder *)setRepeatedDoubleValues:(const Float64 *)values count:(NSUInteger)count;
- (TestAllTypesBuilder *)clearRepeatedDouble;

- (PBAppendableArray *)repeatedBool;
- (BOOL)repeatedBoolAtIndex:(NSUInteger)index;
- (TestAllTypesBuilder *)addRepeatedBool:(BOOL)value;
- (TestAllTypesBuilder *)setRepeatedBoolArray:(NSArray *)array;
- (TestAllTypesBuilder *)setRepeatedBoolValues:(const BOOL *)values count:(NSUInteger)count;
- (TestAllTypesBuilder *)clearRepeatedBool;

- (NSMutableArray *)repeatedString;
- (NSString*)repeatedStringAtIndex:(NSUInteger)index;
- (TestAllTypesBuilder *)addRepeatedString:(NSString*)value;
- (TestAllTypesBuilder *)setRepeatedStringArray:(NSArray *)array;
- (TestAllTypesBuilder *)clearRepeatedString;

- (NSMutableArray *)repeatedBytes;
- (NSData*)repeatedBytesAtIndex:(NSUInteger)index;
- (TestAllTypesBuilder *)addRepeatedBytes:(NSData*)value;
- (TestAllTypesBuilder *)setRepeatedBytesArray:(NSArray *)array;
- (TestAllTypesBuilder *)clearRepeatedBytes;

- (NSMutableArray *)repeatedGroup;
- (TestAllTypesRepeatedGroup*)repeatedGroupAtIndex:(NSUInteger)index;
- (TestAllTypesBuilder *)addRepeatedGroup:(TestAllTypesRepeatedGroup*)value;
- (TestAllTypesBuilder *)setRepeatedGroupArray:(NSArray *)array;
- (TestAllTypesBuilder *)clearRepeatedGroup;

- (NSMutableArray *)repeatedNestedMessage;
- (TestAllTypesNestedMessage*)repeatedNestedMessageAtIndex:(NSUInteger)index;
- (TestAllTypesBuilder *)addRepeatedNestedMessage:(TestAllTypesNestedMessage*)value;
- (TestAllTypesBuilder *)setRepeatedNestedMessageArray:(NSArray *)array;
- (TestAllTypesBuilder *)clearRepeatedNestedMessage;

- (NSMutableArray *)repeatedForeignMessage;
- (ForeignMessage*)repeatedForeignMessageAtIndex:(NSUInteger)index;
- (TestAllTypesBuilder *)addRepeatedForeignMessage:(ForeignMessage*)value;
- (TestAllTypesBuilder *)setRepeatedForeignMessageArray:(NSArray *)array;
- (TestAllTypesBuilder *)clearRepeatedForeignMessage;

- (NSMutableArray *)repeatedImportMessage;
- (ImportMessage*)repeatedImportMessageAtIndex:(NSUInteger)index;
- (TestAllTypesBuilder *)addRepeatedImportMessage:(ImportMessage*)value;
- (TestAllTypesBuilder *)setRepeatedImportMessageArray:(NSArray *)array;
- (TestAllTypesBuilder *)clearRepeatedImportMessage;

- (PBAppendableArray *)repeatedNestedEnum;
- (TestAllTypesNestedEnum)repeatedNestedEnumAtIndex:(NSUInteger)index;
- (TestAllTypesBuilder *)addRepeatedNestedEnum:(TestAllTypesNestedEnum)value;
- (TestAllTypesBuilder *)setRepeatedNestedEnumArray:(NSArray *)array;
- (TestAllTypesBuilder *)setRepeatedNestedEnumValues:(const TestAllTypesNestedEnum *)values count:(NSUInteger)count;
- (TestAllTypesBuilder *)clearRepeatedNestedEnum;

- (PBAppendableArray *)repeatedForeignEnum;
- (ForeignEnum)repeatedForeignEnumAtIndex:(NSUInteger)index;
- (TestAllTypesBuilder *)addRepeatedForeignEnum:(ForeignEnum)value;
- (TestAllTypesBuilder *)setRepeatedForeignEnumArray:(NSArray *)array;
- (TestAllTypesBuilder *)setRepeatedForeignEnumValues:(const ForeignEnum *)values count:(NSUInteger)count;
- (TestAllTypesBuilder *)clearRepeatedForeignEnum;

- (PBAppendableArray *)repeatedImportEnum;
- (ImportEnum)repeatedImportEnumAtIndex:(NSUInteger)index;
- (TestAllTypesBuilder *)addRepeatedImportEnum:(ImportEnum)value;
- (TestAllTypesBuilder *)setRepeatedImportEnumArray:(NSArray *)array;
- (TestAllTypesBuilder *)setRepeatedImportEnumValues:(const ImportEnum *)values count:(NSUInteger)count;
- (TestAllTypesBuilder *)clearRepeatedImportEnum;

- (NSMutableArray *)repeatedStringPiece;
- (NSString*)repeatedStringPieceAtIndex:(NSUInteger)index;
- (TestAllTypesBuilder *)addRepeatedStringPiece:(NSString*)value;
- (TestAllTypesBuilder *)setRepeatedStringPieceArray:(NSArray *)array;
- (TestAllTypesBuilder *)clearRepeatedStringPiece;

- (NSMutableArray *)repeatedCord;
- (NSString*)repeatedCordAtIndex:(NSUInteger)index;
- (TestAllTypesBuilder *)addRepeatedCord:(NSString*)value;
- (TestAllTypesBuilder *)setRepeatedCordArray:(NSArray *)array;
- (TestAllTypesBuilder *)clearRepeatedCord;

- (NSMutableArray *)repeatedLazyMessage;
- (TestAllTypesNestedMessage*)repeatedLazyMessageAtIndex:(NSUInteger)index;
- (TestAllTypesBuilder *)addRepeatedLazyMessage:(TestAllTypesNestedMessage*)value;
- (TestAllTypesBuilder *)setRepeatedLazyMessageArray:(NSArray *)array;
- (TestAllTypesBuilder *)clearRepeatedLazyMessage;

- (BOOL) hasDefaultInt32;
- (SInt32) defaultInt32;
- (TestAllTypesBuilder*) setDefaultInt32:(SInt32) value;
- (TestAllTypesBuilder*) clearDefaultInt32;

- (BOOL) hasDefaultInt64;
- (SInt64) defaultInt64;
- (TestAllTypesBuilder*) setDefaultInt64:(SInt64) value;
- (TestAllTypesBuilder*) clearDefaultInt64;

- (BOOL) hasDefaultUint32;
- (UInt32) defaultUint32;
- (TestAllTypesBuilder*) setDefaultUint32:(UInt32) value;
- (TestAllTypesBuilder*) clearDefaultUint32;

- (BOOL) hasDefaultUint64;
- (UInt64) defaultUint64;
- (TestAllTypesBuilder*) setDefaultUint64:(UInt64) value;
- (TestAllTypesBuilder*) clearDefaultUint64;

- (BOOL) hasDefaultSint32;
- (SInt32) defaultSint32;
- (TestAllTypesBuilder*) setDefaultSint32:(SInt32) value;
- (TestAllTypesBuilder*) clearDefaultSint32;

- (BOOL) hasDefaultSint64;
- (SInt64) defaultSint64;
- (TestAllTypesBuilder*) setDefaultSint64:(SInt64) value;
- (TestAllTypesBuilder*) clearDefaultSint64;

- (BOOL) hasDefaultFixed32;
- (UInt32) defaultFixed32;
- (TestAllTypesBuilder*) setDefaultFixed32:(UInt32) value;
- (TestAllTypesBuilder*) clearDefaultFixed32;

- (BOOL) hasDefaultFixed64;
- (UInt64) defaultFixed64;
- (TestAllTypesBuilder*) setDefaultFixed64:(UInt64) value;
- (TestAllTypesBuilder*) clearDefaultFixed64;

- (BOOL) hasDefaultSfixed32;
- (SInt32) defaultSfixed32;
- (TestAllTypesBuilder*) setDefaultSfixed32:(SInt32) value;
- (TestAllTypesBuilder*) clearDefaultSfixed32;

- (BOOL) hasDefaultSfixed64;
- (SInt64) defaultSfixed64;
- (TestAllTypesBuilder*) setDefaultSfixed64:(SInt64) value;
- (TestAllTypesBuilder*) clearDefaultSfixed64;

- (BOOL) hasDefaultFloat;
- (Float32) defaultFloat;
- (TestAllTypesBuilder*) setDefaultFloat:(Float32) value;
- (TestAllTypesBuilder*) clearDefaultFloat;

- (BOOL) hasDefaultDouble;
- (Float64) defaultDouble;
- (TestAllTypesBuilder*) setDefaultDouble:(Float64) value;
- (TestAllTypesBuilder*) clearDefaultDouble;

- (BOOL) hasDefaultBool;
- (BOOL) defaultBool;
- (TestAllTypesBuilder*) setDefaultBool:(BOOL) value;
- (TestAllTypesBuilder*) clearDefaultBool;

- (BOOL) hasDefaultString;
- (NSString*) defaultString;
- (TestAllTypesBuilder*) setDefaultString:(NSString*) value;
- (TestAllTypesBuilder*) clearDefaultString;

- (BOOL) hasDefaultBytes;
- (NSData*) defaultBytes;
- (TestAllTypesBuilder*) setDefaultBytes:(NSData*) value;
- (TestAllTypesBuilder*) clearDefaultBytes;

- (BOOL) hasDefaultNestedEnum;
- (TestAllTypesNestedEnum) defaultNestedEnum;
- (TestAllTypesBuilder*) setDefaultNestedEnum:(TestAllTypesNestedEnum) value;
- (TestAllTypesBuilder*) clearDefaultNestedEnum;

- (BOOL) hasDefaultForeignEnum;
- (ForeignEnum) defaultForeignEnum;
- (TestAllTypesBuilder*) setDefaultForeignEnum:(ForeignEnum) value;
- (TestAllTypesBuilder*) clearDefaultForeignEnum;

- (BOOL) hasDefaultImportEnum;
- (ImportEnum) defaultImportEnum;
- (TestAllTypesBuilder*) setDefaultImportEnum:(ImportEnum) value;
- (TestAllTypesBuilder*) clearDefaultImportEnum;

- (BOOL) hasDefaultStringPiece;
- (NSString*) defaultStringPiece;
- (TestAllTypesBuilder*) setDefaultStringPiece:(NSString*) value;
- (TestAllTypesBuilder*) clearDefaultStringPiece;

- (BOOL) hasDefaultCord;
- (NSString*) defaultCord;
- (TestAllTypesBuilder*) setDefaultCord:(NSString*) value;
- (TestAllTypesBuilder*) clearDefaultCord;

- (BOOL) hasOneofUint32;
- (UInt32) oneofUint32;
- (TestAllTypesBuilder*) setOneofUint32:(UInt32) value;
- (TestAllTypesBuilder*) clearOneofUint32;

- (BOOL) hasOneofNestedMessage;
- (TestAllTypesNestedMessage*) oneofNestedMessage;
- (TestAllTypesBuilder*) setOneofNestedMessage:(TestAllTypesNestedMessage*) value;
- (TestAllTypesBuilder*) setOneofNestedMessageBuilder:(TestAllTypesNestedMessageBuilder*) builderForValue;
- (TestAllTypesBuilder*) mergeOneofNestedMessage:(TestAllTypesNestedMessage*) value;
- (TestAllTypesBuilder*) clearOneofNestedMessage;

- (BOOL) hasOneofString;
- (NSString*) oneofString;
- (TestAllTypesBuilder*) setOneofString:(NSString*) value;
- (TestAllTypesBuilder*) clearOneofString;

- (BOOL) hasOneofBytes;
- (NSData*) oneofBytes;
- (TestAllTypesBuilder*) setOneofBytes:(NSData*) value;
- (TestAllTypesBuilder*) clearOneofBytes;
@end

@interface NestedTestAllTypes : PBGeneratedMessage {
@private
  BOOL hasChild_:1;
  BOOL hasPayload_:1;
  NestedTestAllTypes* child;
  TestAllTypes* payload;
}
- (BOOL) hasChild;
- (BOOL) hasPayload;
@property (readonly, strong) NestedTestAllTypes* child;
@property (readonly, strong) TestAllTypes* payload;

+ (NestedTestAllTypes*) defaultInstance;
- (NestedTestAllTypes*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (NestedTestAllTypesBuilder*) builder;
+ (NestedTestAllTypesBuilder*) builder;
+ (NestedTestAllTypesBuilder*) builderWithPrototype:(NestedTestAllTypes*) prototype;
- (NestedTestAllTypesBuilder*) toBuilder;

+ (NestedTestAllTypes*) parseFromData:(NSData*) data;
+ (NestedTestAllTypes*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (NestedTestAllTypes*) parseFromInputStream:(NSInputStream*) input;
+ (NestedTestAllTypes*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (NestedTestAllTypes*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (NestedTestAllTypes*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface NestedTestAllTypesBuilder : PBGeneratedMessageBuilder {
@private
  NestedTestAllTypes* result;
}

- (NestedTestAllTypes*) defaultInstance;

- (NestedTestAllTypesBuilder*) clear;
- (NestedTestAllTypesBuilder*) clone;

- (NestedTestAllTypes*) build;
- (NestedTestAllTypes*) buildPartial;

- (NestedTestAllTypesBuilder*) mergeFrom:(NestedTestAllTypes*) other;
- (NestedTestAllTypesBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (NestedTestAllTypesBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasChild;
- (NestedTestAllTypes*) child;
- (NestedTestAllTypesBuilder*) setChild:(NestedTestAllTypes*) value;
- (NestedTestAllTypesBuilder*) setChildBuilder:(NestedTestAllTypesBuilder*) builderForValue;
- (NestedTestAllTypesBuilder*) mergeChild:(NestedTestAllTypes*) value;
- (NestedTestAllTypesBuilder*) clearChild;

- (BOOL) hasPayload;
- (TestAllTypes*) payload;
- (NestedTestAllTypesBuilder*) setPayload:(TestAllTypes*) value;
- (NestedTestAllTypesBuilder*) setPayloadBuilder:(TestAllTypesBuilder*) builderForValue;
- (NestedTestAllTypesBuilder*) mergePayload:(TestAllTypes*) value;
- (NestedTestAllTypesBuilder*) clearPayload;
@end

@interface TestDeprecatedFields : PBGeneratedMessage {
@private
  BOOL hasDeprecatedInt32_:1;
  SInt32 deprecatedInt32;
}
- (BOOL) hasDeprecatedInt32;
@property (readonly) SInt32 deprecatedInt32;

+ (TestDeprecatedFields*) defaultInstance;
- (TestDeprecatedFields*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (TestDeprecatedFieldsBuilder*) builder;
+ (TestDeprecatedFieldsBuilder*) builder;
+ (TestDeprecatedFieldsBuilder*) builderWithPrototype:(TestDeprecatedFields*) prototype;
- (TestDeprecatedFieldsBuilder*) toBuilder;

+ (TestDeprecatedFields*) parseFromData:(NSData*) data;
+ (TestDeprecatedFields*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TestDeprecatedFields*) parseFromInputStream:(NSInputStream*) input;
+ (TestDeprecatedFields*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TestDeprecatedFields*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (TestDeprecatedFields*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface TestDeprecatedFieldsBuilder : PBGeneratedMessageBuilder {
@private
  TestDeprecatedFields* result;
}

- (TestDeprecatedFields*) defaultInstance;

- (TestDeprecatedFieldsBuilder*) clear;
- (TestDeprecatedFieldsBuilder*) clone;

- (TestDeprecatedFields*) build;
- (TestDeprecatedFields*) buildPartial;

- (TestDeprecatedFieldsBuilder*) mergeFrom:(TestDeprecatedFields*) other;
- (TestDeprecatedFieldsBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (TestDeprecatedFieldsBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasDeprecatedInt32;
- (SInt32) deprecatedInt32;
- (TestDeprecatedFieldsBuilder*) setDeprecatedInt32:(SInt32) value;
- (TestDeprecatedFieldsBuilder*) clearDeprecatedInt32;
@end

@interface ForeignMessage : PBGeneratedMessage {
@private
  BOOL hasC_:1;
  SInt32 c;
}
- (BOOL) hasC;
@property (readonly) SInt32 c;

+ (ForeignMessage*) defaultInstance;
- (ForeignMessage*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (ForeignMessageBuilder*) builder;
+ (ForeignMessageBuilder*) builder;
+ (ForeignMessageBuilder*) builderWithPrototype:(ForeignMessage*) prototype;
- (ForeignMessageBuilder*) toBuilder;

+ (ForeignMessage*) parseFromData:(NSData*) data;
+ (ForeignMessage*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ForeignMessage*) parseFromInputStream:(NSInputStream*) input;
+ (ForeignMessage*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ForeignMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (ForeignMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface ForeignMessageBuilder : PBGeneratedMessageBuilder {
@private
  ForeignMessage* result;
}

- (ForeignMessage*) defaultInstance;

- (ForeignMessageBuilder*) clear;
- (ForeignMessageBuilder*) clone;

- (ForeignMessage*) build;
- (ForeignMessage*) buildPartial;

- (ForeignMessageBuilder*) mergeFrom:(ForeignMessage*) other;
- (ForeignMessageBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (ForeignMessageBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasC;
- (SInt32) c;
- (ForeignMessageBuilder*) setC:(SInt32) value;
- (ForeignMessageBuilder*) clearC;
@end

@interface TestAllExtensions : PBExtendableMessage {
@private
}

+ (TestAllExtensions*) defaultInstance;
- (TestAllExtensions*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (TestAllExtensionsBuilder*) builder;
+ (TestAllExtensionsBuilder*) builder;
+ (TestAllExtensionsBuilder*) builderWithPrototype:(TestAllExtensions*) prototype;
- (TestAllExtensionsBuilder*) toBuilder;

+ (TestAllExtensions*) parseFromData:(NSData*) data;
+ (TestAllExtensions*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TestAllExtensions*) parseFromInputStream:(NSInputStream*) input;
+ (TestAllExtensions*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TestAllExtensions*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (TestAllExtensions*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface TestAllExtensionsBuilder : PBExtendableMessageBuilder {
@private
  TestAllExtensions* result;
}

- (TestAllExtensions*) defaultInstance;

- (TestAllExtensionsBuilder*) clear;
- (TestAllExtensionsBuilder*) clone;

- (TestAllExtensions*) build;
- (TestAllExtensions*) buildPartial;

- (TestAllExtensionsBuilder*) mergeFrom:(TestAllExtensions*) other;
- (TestAllExtensionsBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (TestAllExtensionsBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface OptionalGroup_extension : PBGeneratedMessage {
@private
  BOOL hasA_:1;
  SInt32 a;
}
- (BOOL) hasA;
@property (readonly) SInt32 a;

+ (OptionalGroup_extension*) defaultInstance;
- (OptionalGroup_extension*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (OptionalGroup_extensionBuilder*) builder;
+ (OptionalGroup_extensionBuilder*) builder;
+ (OptionalGroup_extensionBuilder*) builderWithPrototype:(OptionalGroup_extension*) prototype;
- (OptionalGroup_extensionBuilder*) toBuilder;

+ (OptionalGroup_extension*) parseFromData:(NSData*) data;
+ (OptionalGroup_extension*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (OptionalGroup_extension*) parseFromInputStream:(NSInputStream*) input;
+ (OptionalGroup_extension*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (OptionalGroup_extension*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (OptionalGroup_extension*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface OptionalGroup_extensionBuilder : PBGeneratedMessageBuilder {
@private
  OptionalGroup_extension* result;
}

- (OptionalGroup_extension*) defaultInstance;

- (OptionalGroup_extensionBuilder*) clear;
- (OptionalGroup_extensionBuilder*) clone;

- (OptionalGroup_extension*) build;
- (OptionalGroup_extension*) buildPartial;

- (OptionalGroup_extensionBuilder*) mergeFrom:(OptionalGroup_extension*) other;
- (OptionalGroup_extensionBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (OptionalGroup_extensionBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasA;
- (SInt32) a;
- (OptionalGroup_extensionBuilder*) setA:(SInt32) value;
- (OptionalGroup_extensionBuilder*) clearA;
@end

@interface RepeatedGroup_extension : PBGeneratedMessage {
@private
  BOOL hasA_:1;
  SInt32 a;
}
- (BOOL) hasA;
@property (readonly) SInt32 a;

+ (RepeatedGroup_extension*) defaultInstance;
- (RepeatedGroup_extension*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (RepeatedGroup_extensionBuilder*) builder;
+ (RepeatedGroup_extensionBuilder*) builder;
+ (RepeatedGroup_extensionBuilder*) builderWithPrototype:(RepeatedGroup_extension*) prototype;
- (RepeatedGroup_extensionBuilder*) toBuilder;

+ (RepeatedGroup_extension*) parseFromData:(NSData*) data;
+ (RepeatedGroup_extension*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (RepeatedGroup_extension*) parseFromInputStream:(NSInputStream*) input;
+ (RepeatedGroup_extension*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (RepeatedGroup_extension*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (RepeatedGroup_extension*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface RepeatedGroup_extensionBuilder : PBGeneratedMessageBuilder {
@private
  RepeatedGroup_extension* result;
}

- (RepeatedGroup_extension*) defaultInstance;

- (RepeatedGroup_extensionBuilder*) clear;
- (RepeatedGroup_extensionBuilder*) clone;

- (RepeatedGroup_extension*) build;
- (RepeatedGroup_extension*) buildPartial;

- (RepeatedGroup_extensionBuilder*) mergeFrom:(RepeatedGroup_extension*) other;
- (RepeatedGroup_extensionBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (RepeatedGroup_extensionBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasA;
- (SInt32) a;
- (RepeatedGroup_extensionBuilder*) setA:(SInt32) value;
- (RepeatedGroup_extensionBuilder*) clearA;
@end

@interface TestNestedExtension : PBGeneratedMessage {
@private
}

+ (TestNestedExtension*) defaultInstance;
- (TestNestedExtension*) defaultInstance;

+ (id<PBExtensionField>) test;
+ (id<PBExtensionField>) nestedStringExtension;
- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (TestNestedExtensionBuilder*) builder;
+ (TestNestedExtensionBuilder*) builder;
+ (TestNestedExtensionBuilder*) builderWithPrototype:(TestNestedExtension*) prototype;
- (TestNestedExtensionBuilder*) toBuilder;

+ (TestNestedExtension*) parseFromData:(NSData*) data;
+ (TestNestedExtension*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TestNestedExtension*) parseFromInputStream:(NSInputStream*) input;
+ (TestNestedExtension*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TestNestedExtension*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (TestNestedExtension*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface TestNestedExtensionBuilder : PBGeneratedMessageBuilder {
@private
  TestNestedExtension* result;
}

- (TestNestedExtension*) defaultInstance;

- (TestNestedExtensionBuilder*) clear;
- (TestNestedExtensionBuilder*) clone;

- (TestNestedExtension*) build;
- (TestNestedExtension*) buildPartial;

- (TestNestedExtensionBuilder*) mergeFrom:(TestNestedExtension*) other;
- (TestNestedExtensionBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (TestNestedExtensionBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface TestRequired : PBGeneratedMessage {
@private
  BOOL hasA_:1;
  BOOL hasDummy2_:1;
  BOOL hasB_:1;
  BOOL hasDummy4_:1;
  BOOL hasDummy5_:1;
  BOOL hasDummy6_:1;
  BOOL hasDummy7_:1;
  BOOL hasDummy8_:1;
  BOOL hasDummy9_:1;
  BOOL hasDummy10_:1;
  BOOL hasDummy11_:1;
  BOOL hasDummy12_:1;
  BOOL hasDummy13_:1;
  BOOL hasDummy14_:1;
  BOOL hasDummy15_:1;
  BOOL hasDummy16_:1;
  BOOL hasDummy17_:1;
  BOOL hasDummy18_:1;
  BOOL hasDummy19_:1;
  BOOL hasDummy20_:1;
  BOOL hasDummy21_:1;
  BOOL hasDummy22_:1;
  BOOL hasDummy23_:1;
  BOOL hasDummy24_:1;
  BOOL hasDummy25_:1;
  BOOL hasDummy26_:1;
  BOOL hasDummy27_:1;
  BOOL hasDummy28_:1;
  BOOL hasDummy29_:1;
  BOOL hasDummy30_:1;
  BOOL hasDummy31_:1;
  BOOL hasDummy32_:1;
  BOOL hasC_:1;
  SInt32 a;
  SInt32 dummy2;
  SInt32 b;
  SInt32 dummy4;
  SInt32 dummy5;
  SInt32 dummy6;
  SInt32 dummy7;
  SInt32 dummy8;
  SInt32 dummy9;
  SInt32 dummy10;
  SInt32 dummy11;
  SInt32 dummy12;
  SInt32 dummy13;
  SInt32 dummy14;
  SInt32 dummy15;
  SInt32 dummy16;
  SInt32 dummy17;
  SInt32 dummy18;
  SInt32 dummy19;
  SInt32 dummy20;
  SInt32 dummy21;
  SInt32 dummy22;
  SInt32 dummy23;
  SInt32 dummy24;
  SInt32 dummy25;
  SInt32 dummy26;
  SInt32 dummy27;
  SInt32 dummy28;
  SInt32 dummy29;
  SInt32 dummy30;
  SInt32 dummy31;
  SInt32 dummy32;
  SInt32 c;
}
- (BOOL) hasA;
- (BOOL) hasDummy2;
- (BOOL) hasB;
- (BOOL) hasDummy4;
- (BOOL) hasDummy5;
- (BOOL) hasDummy6;
- (BOOL) hasDummy7;
- (BOOL) hasDummy8;
- (BOOL) hasDummy9;
- (BOOL) hasDummy10;
- (BOOL) hasDummy11;
- (BOOL) hasDummy12;
- (BOOL) hasDummy13;
- (BOOL) hasDummy14;
- (BOOL) hasDummy15;
- (BOOL) hasDummy16;
- (BOOL) hasDummy17;
- (BOOL) hasDummy18;
- (BOOL) hasDummy19;
- (BOOL) hasDummy20;
- (BOOL) hasDummy21;
- (BOOL) hasDummy22;
- (BOOL) hasDummy23;
- (BOOL) hasDummy24;
- (BOOL) hasDummy25;
- (BOOL) hasDummy26;
- (BOOL) hasDummy27;
- (BOOL) hasDummy28;
- (BOOL) hasDummy29;
- (BOOL) hasDummy30;
- (BOOL) hasDummy31;
- (BOOL) hasDummy32;
- (BOOL) hasC;
@property (readonly) SInt32 a;
@property (readonly) SInt32 dummy2;
@property (readonly) SInt32 b;
@property (readonly) SInt32 dummy4;
@property (readonly) SInt32 dummy5;
@property (readonly) SInt32 dummy6;
@property (readonly) SInt32 dummy7;
@property (readonly) SInt32 dummy8;
@property (readonly) SInt32 dummy9;
@property (readonly) SInt32 dummy10;
@property (readonly) SInt32 dummy11;
@property (readonly) SInt32 dummy12;
@property (readonly) SInt32 dummy13;
@property (readonly) SInt32 dummy14;
@property (readonly) SInt32 dummy15;
@property (readonly) SInt32 dummy16;
@property (readonly) SInt32 dummy17;
@property (readonly) SInt32 dummy18;
@property (readonly) SInt32 dummy19;
@property (readonly) SInt32 dummy20;
@property (readonly) SInt32 dummy21;
@property (readonly) SInt32 dummy22;
@property (readonly) SInt32 dummy23;
@property (readonly) SInt32 dummy24;
@property (readonly) SInt32 dummy25;
@property (readonly) SInt32 dummy26;
@property (readonly) SInt32 dummy27;
@property (readonly) SInt32 dummy28;
@property (readonly) SInt32 dummy29;
@property (readonly) SInt32 dummy30;
@property (readonly) SInt32 dummy31;
@property (readonly) SInt32 dummy32;
@property (readonly) SInt32 c;

+ (TestRequired*) defaultInstance;
- (TestRequired*) defaultInstance;

+ (id<PBExtensionField>) single;
+ (id<PBExtensionField>) multi;
- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (TestRequiredBuilder*) builder;
+ (TestRequiredBuilder*) builder;
+ (TestRequiredBuilder*) builderWithPrototype:(TestRequired*) prototype;
- (TestRequiredBuilder*) toBuilder;

+ (TestRequired*) parseFromData:(NSData*) data;
+ (TestRequired*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TestRequired*) parseFromInputStream:(NSInputStream*) input;
+ (TestRequired*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TestRequired*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (TestRequired*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface TestRequiredBuilder : PBGeneratedMessageBuilder {
@private
  TestRequired* result;
}

- (TestRequired*) defaultInstance;

- (TestRequiredBuilder*) clear;
- (TestRequiredBuilder*) clone;

- (TestRequired*) build;
- (TestRequired*) buildPartial;

- (TestRequiredBuilder*) mergeFrom:(TestRequired*) other;
- (TestRequiredBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (TestRequiredBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasA;
- (SInt32) a;
- (TestRequiredBuilder*) setA:(SInt32) value;
- (TestRequiredBuilder*) clearA;

- (BOOL) hasDummy2;
- (SInt32) dummy2;
- (TestRequiredBuilder*) setDummy2:(SInt32) value;
- (TestRequiredBuilder*) clearDummy2;

- (BOOL) hasB;
- (SInt32) b;
- (TestRequiredBuilder*) setB:(SInt32) value;
- (TestRequiredBuilder*) clearB;

- (BOOL) hasDummy4;
- (SInt32) dummy4;
- (TestRequiredBuilder*) setDummy4:(SInt32) value;
- (TestRequiredBuilder*) clearDummy4;

- (BOOL) hasDummy5;
- (SInt32) dummy5;
- (TestRequiredBuilder*) setDummy5:(SInt32) value;
- (TestRequiredBuilder*) clearDummy5;

- (BOOL) hasDummy6;
- (SInt32) dummy6;
- (TestRequiredBuilder*) setDummy6:(SInt32) value;
- (TestRequiredBuilder*) clearDummy6;

- (BOOL) hasDummy7;
- (SInt32) dummy7;
- (TestRequiredBuilder*) setDummy7:(SInt32) value;
- (TestRequiredBuilder*) clearDummy7;

- (BOOL) hasDummy8;
- (SInt32) dummy8;
- (TestRequiredBuilder*) setDummy8:(SInt32) value;
- (TestRequiredBuilder*) clearDummy8;

- (BOOL) hasDummy9;
- (SInt32) dummy9;
- (TestRequiredBuilder*) setDummy9:(SInt32) value;
- (TestRequiredBuilder*) clearDummy9;

- (BOOL) hasDummy10;
- (SInt32) dummy10;
- (TestRequiredBuilder*) setDummy10:(SInt32) value;
- (TestRequiredBuilder*) clearDummy10;

- (BOOL) hasDummy11;
- (SInt32) dummy11;
- (TestRequiredBuilder*) setDummy11:(SInt32) value;
- (TestRequiredBuilder*) clearDummy11;

- (BOOL) hasDummy12;
- (SInt32) dummy12;
- (TestRequiredBuilder*) setDummy12:(SInt32) value;
- (TestRequiredBuilder*) clearDummy12;

- (BOOL) hasDummy13;
- (SInt32) dummy13;
- (TestRequiredBuilder*) setDummy13:(SInt32) value;
- (TestRequiredBuilder*) clearDummy13;

- (BOOL) hasDummy14;
- (SInt32) dummy14;
- (TestRequiredBuilder*) setDummy14:(SInt32) value;
- (TestRequiredBuilder*) clearDummy14;

- (BOOL) hasDummy15;
- (SInt32) dummy15;
- (TestRequiredBuilder*) setDummy15:(SInt32) value;
- (TestRequiredBuilder*) clearDummy15;

- (BOOL) hasDummy16;
- (SInt32) dummy16;
- (TestRequiredBuilder*) setDummy16:(SInt32) value;
- (TestRequiredBuilder*) clearDummy16;

- (BOOL) hasDummy17;
- (SInt32) dummy17;
- (TestRequiredBuilder*) setDummy17:(SInt32) value;
- (TestRequiredBuilder*) clearDummy17;

- (BOOL) hasDummy18;
- (SInt32) dummy18;
- (TestRequiredBuilder*) setDummy18:(SInt32) value;
- (TestRequiredBuilder*) clearDummy18;

- (BOOL) hasDummy19;
- (SInt32) dummy19;
- (TestRequiredBuilder*) setDummy19:(SInt32) value;
- (TestRequiredBuilder*) clearDummy19;

- (BOOL) hasDummy20;
- (SInt32) dummy20;
- (TestRequiredBuilder*) setDummy20:(SInt32) value;
- (TestRequiredBuilder*) clearDummy20;

- (BOOL) hasDummy21;
- (SInt32) dummy21;
- (TestRequiredBuilder*) setDummy21:(SInt32) value;
- (TestRequiredBuilder*) clearDummy21;

- (BOOL) hasDummy22;
- (SInt32) dummy22;
- (TestRequiredBuilder*) setDummy22:(SInt32) value;
- (TestRequiredBuilder*) clearDummy22;

- (BOOL) hasDummy23;
- (SInt32) dummy23;
- (TestRequiredBuilder*) setDummy23:(SInt32) value;
- (TestRequiredBuilder*) clearDummy23;

- (BOOL) hasDummy24;
- (SInt32) dummy24;
- (TestRequiredBuilder*) setDummy24:(SInt32) value;
- (TestRequiredBuilder*) clearDummy24;

- (BOOL) hasDummy25;
- (SInt32) dummy25;
- (TestRequiredBuilder*) setDummy25:(SInt32) value;
- (TestRequiredBuilder*) clearDummy25;

- (BOOL) hasDummy26;
- (SInt32) dummy26;
- (TestRequiredBuilder*) setDummy26:(SInt32) value;
- (TestRequiredBuilder*) clearDummy26;

- (BOOL) hasDummy27;
- (SInt32) dummy27;
- (TestRequiredBuilder*) setDummy27:(SInt32) value;
- (TestRequiredBuilder*) clearDummy27;

- (BOOL) hasDummy28;
- (SInt32) dummy28;
- (TestRequiredBuilder*) setDummy28:(SInt32) value;
- (TestRequiredBuilder*) clearDummy28;

- (BOOL) hasDummy29;
- (SInt32) dummy29;
- (TestRequiredBuilder*) setDummy29:(SInt32) value;
- (TestRequiredBuilder*) clearDummy29;

- (BOOL) hasDummy30;
- (SInt32) dummy30;
- (TestRequiredBuilder*) setDummy30:(SInt32) value;
- (TestRequiredBuilder*) clearDummy30;

- (BOOL) hasDummy31;
- (SInt32) dummy31;
- (TestRequiredBuilder*) setDummy31:(SInt32) value;
- (TestRequiredBuilder*) clearDummy31;

- (BOOL) hasDummy32;
- (SInt32) dummy32;
- (TestRequiredBuilder*) setDummy32:(SInt32) value;
- (TestRequiredBuilder*) clearDummy32;

- (BOOL) hasC;
- (SInt32) c;
- (TestRequiredBuilder*) setC:(SInt32) value;
- (TestRequiredBuilder*) clearC;
@end

@interface TestRequiredForeign : PBGeneratedMessage {
@private
  BOOL hasDummy_:1;
  BOOL hasOptionalMessage_:1;
  SInt32 dummy;
  TestRequired* optionalMessage;
  NSMutableArray * repeatedMessageArray;
}
- (BOOL) hasOptionalMessage;
- (BOOL) hasDummy;
@property (readonly, strong) TestRequired* optionalMessage;
@property (readonly, strong) NSArray * repeatedMessage;
@property (readonly) SInt32 dummy;
- (TestRequired*)repeatedMessageAtIndex:(NSUInteger)index;

+ (TestRequiredForeign*) defaultInstance;
- (TestRequiredForeign*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (TestRequiredForeignBuilder*) builder;
+ (TestRequiredForeignBuilder*) builder;
+ (TestRequiredForeignBuilder*) builderWithPrototype:(TestRequiredForeign*) prototype;
- (TestRequiredForeignBuilder*) toBuilder;

+ (TestRequiredForeign*) parseFromData:(NSData*) data;
+ (TestRequiredForeign*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TestRequiredForeign*) parseFromInputStream:(NSInputStream*) input;
+ (TestRequiredForeign*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TestRequiredForeign*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (TestRequiredForeign*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface TestRequiredForeignBuilder : PBGeneratedMessageBuilder {
@private
  TestRequiredForeign* result;
}

- (TestRequiredForeign*) defaultInstance;

- (TestRequiredForeignBuilder*) clear;
- (TestRequiredForeignBuilder*) clone;

- (TestRequiredForeign*) build;
- (TestRequiredForeign*) buildPartial;

- (TestRequiredForeignBuilder*) mergeFrom:(TestRequiredForeign*) other;
- (TestRequiredForeignBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (TestRequiredForeignBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasOptionalMessage;
- (TestRequired*) optionalMessage;
- (TestRequiredForeignBuilder*) setOptionalMessage:(TestRequired*) value;
- (TestRequiredForeignBuilder*) setOptionalMessageBuilder:(TestRequiredBuilder*) builderForValue;
- (TestRequiredForeignBuilder*) mergeOptionalMessage:(TestRequired*) value;
- (TestRequiredForeignBuilder*) clearOptionalMessage;

- (NSMutableArray *)repeatedMessage;
- (TestRequired*)repeatedMessageAtIndex:(NSUInteger)index;
- (TestRequiredForeignBuilder *)addRepeatedMessage:(TestRequired*)value;
- (TestRequiredForeignBuilder *)setRepeatedMessageArray:(NSArray *)array;
- (TestRequiredForeignBuilder *)clearRepeatedMessage;

- (BOOL) hasDummy;
- (SInt32) dummy;
- (TestRequiredForeignBuilder*) setDummy:(SInt32) value;
- (TestRequiredForeignBuilder*) clearDummy;
@end

@interface TestForeignNested : PBGeneratedMessage {
@private
  BOOL hasForeignNested_:1;
  TestAllTypesNestedMessage* foreignNested;
}
- (BOOL) hasForeignNested;
@property (readonly, strong) TestAllTypesNestedMessage* foreignNested;

+ (TestForeignNested*) defaultInstance;
- (TestForeignNested*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (TestForeignNestedBuilder*) builder;
+ (TestForeignNestedBuilder*) builder;
+ (TestForeignNestedBuilder*) builderWithPrototype:(TestForeignNested*) prototype;
- (TestForeignNestedBuilder*) toBuilder;

+ (TestForeignNested*) parseFromData:(NSData*) data;
+ (TestForeignNested*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TestForeignNested*) parseFromInputStream:(NSInputStream*) input;
+ (TestForeignNested*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TestForeignNested*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (TestForeignNested*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface TestForeignNestedBuilder : PBGeneratedMessageBuilder {
@private
  TestForeignNested* result;
}

- (TestForeignNested*) defaultInstance;

- (TestForeignNestedBuilder*) clear;
- (TestForeignNestedBuilder*) clone;

- (TestForeignNested*) build;
- (TestForeignNested*) buildPartial;

- (TestForeignNestedBuilder*) mergeFrom:(TestForeignNested*) other;
- (TestForeignNestedBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (TestForeignNestedBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasForeignNested;
- (TestAllTypesNestedMessage*) foreignNested;
- (TestForeignNestedBuilder*) setForeignNested:(TestAllTypesNestedMessage*) value;
- (TestForeignNestedBuilder*) setForeignNestedBuilder:(TestAllTypesNestedMessageBuilder*) builderForValue;
- (TestForeignNestedBuilder*) mergeForeignNested:(TestAllTypesNestedMessage*) value;
- (TestForeignNestedBuilder*) clearForeignNested;
@end

@interface TestEmptyMessage : PBGeneratedMessage {
@private
}

+ (TestEmptyMessage*) defaultInstance;
- (TestEmptyMessage*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (TestEmptyMessageBuilder*) builder;
+ (TestEmptyMessageBuilder*) builder;
+ (TestEmptyMessageBuilder*) builderWithPrototype:(TestEmptyMessage*) prototype;
- (TestEmptyMessageBuilder*) toBuilder;

+ (TestEmptyMessage*) parseFromData:(NSData*) data;
+ (TestEmptyMessage*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TestEmptyMessage*) parseFromInputStream:(NSInputStream*) input;
+ (TestEmptyMessage*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TestEmptyMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (TestEmptyMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface TestEmptyMessageBuilder : PBGeneratedMessageBuilder {
@private
  TestEmptyMessage* result;
}

- (TestEmptyMessage*) defaultInstance;

- (TestEmptyMessageBuilder*) clear;
- (TestEmptyMessageBuilder*) clone;

- (TestEmptyMessage*) build;
- (TestEmptyMessage*) buildPartial;

- (TestEmptyMessageBuilder*) mergeFrom:(TestEmptyMessage*) other;
- (TestEmptyMessageBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (TestEmptyMessageBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface TestEmptyMessageWithExtensions : PBExtendableMessage {
@private
}

+ (TestEmptyMessageWithExtensions*) defaultInstance;
- (TestEmptyMessageWithExtensions*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (TestEmptyMessageWithExtensionsBuilder*) builder;
+ (TestEmptyMessageWithExtensionsBuilder*) builder;
+ (TestEmptyMessageWithExtensionsBuilder*) builderWithPrototype:(TestEmptyMessageWithExtensions*) prototype;
- (TestEmptyMessageWithExtensionsBuilder*) toBuilder;

+ (TestEmptyMessageWithExtensions*) parseFromData:(NSData*) data;
+ (TestEmptyMessageWithExtensions*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TestEmptyMessageWithExtensions*) parseFromInputStream:(NSInputStream*) input;
+ (TestEmptyMessageWithExtensions*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TestEmptyMessageWithExtensions*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (TestEmptyMessageWithExtensions*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface TestEmptyMessageWithExtensionsBuilder : PBExtendableMessageBuilder {
@private
  TestEmptyMessageWithExtensions* result;
}

- (TestEmptyMessageWithExtensions*) defaultInstance;

- (TestEmptyMessageWithExtensionsBuilder*) clear;
- (TestEmptyMessageWithExtensionsBuilder*) clone;

- (TestEmptyMessageWithExtensions*) build;
- (TestEmptyMessageWithExtensions*) buildPartial;

- (TestEmptyMessageWithExtensionsBuilder*) mergeFrom:(TestEmptyMessageWithExtensions*) other;
- (TestEmptyMessageWithExtensionsBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (TestEmptyMessageWithExtensionsBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface TestMultipleExtensionRanges : PBExtendableMessage {
@private
}

+ (TestMultipleExtensionRanges*) defaultInstance;
- (TestMultipleExtensionRanges*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (TestMultipleExtensionRangesBuilder*) builder;
+ (TestMultipleExtensionRangesBuilder*) builder;
+ (TestMultipleExtensionRangesBuilder*) builderWithPrototype:(TestMultipleExtensionRanges*) prototype;
- (TestMultipleExtensionRangesBuilder*) toBuilder;

+ (TestMultipleExtensionRanges*) parseFromData:(NSData*) data;
+ (TestMultipleExtensionRanges*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TestMultipleExtensionRanges*) parseFromInputStream:(NSInputStream*) input;
+ (TestMultipleExtensionRanges*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TestMultipleExtensionRanges*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (TestMultipleExtensionRanges*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface TestMultipleExtensionRangesBuilder : PBExtendableMessageBuilder {
@private
  TestMultipleExtensionRanges* result;
}

- (TestMultipleExtensionRanges*) defaultInstance;

- (TestMultipleExtensionRangesBuilder*) clear;
- (TestMultipleExtensionRangesBuilder*) clone;

- (TestMultipleExtensionRanges*) build;
- (TestMultipleExtensionRanges*) buildPartial;

- (TestMultipleExtensionRangesBuilder*) mergeFrom:(TestMultipleExtensionRanges*) other;
- (TestMultipleExtensionRangesBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (TestMultipleExtensionRangesBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface TestReallyLargeTagNumber : PBGeneratedMessage {
@private
  BOOL hasA_:1;
  BOOL hasBb_:1;
  SInt32 a;
  SInt32 bb;
}
- (BOOL) hasA;
- (BOOL) hasBb;
@property (readonly) SInt32 a;
@property (readonly) SInt32 bb;

+ (TestReallyLargeTagNumber*) defaultInstance;
- (TestReallyLargeTagNumber*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (TestReallyLargeTagNumberBuilder*) builder;
+ (TestReallyLargeTagNumberBuilder*) builder;
+ (TestReallyLargeTagNumberBuilder*) builderWithPrototype:(TestReallyLargeTagNumber*) prototype;
- (TestReallyLargeTagNumberBuilder*) toBuilder;

+ (TestReallyLargeTagNumber*) parseFromData:(NSData*) data;
+ (TestReallyLargeTagNumber*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TestReallyLargeTagNumber*) parseFromInputStream:(NSInputStream*) input;
+ (TestReallyLargeTagNumber*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TestReallyLargeTagNumber*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (TestReallyLargeTagNumber*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface TestReallyLargeTagNumberBuilder : PBGeneratedMessageBuilder {
@private
  TestReallyLargeTagNumber* result;
}

- (TestReallyLargeTagNumber*) defaultInstance;

- (TestReallyLargeTagNumberBuilder*) clear;
- (TestReallyLargeTagNumberBuilder*) clone;

- (TestReallyLargeTagNumber*) build;
- (TestReallyLargeTagNumber*) buildPartial;

- (TestReallyLargeTagNumberBuilder*) mergeFrom:(TestReallyLargeTagNumber*) other;
- (TestReallyLargeTagNumberBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (TestReallyLargeTagNumberBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasA;
- (SInt32) a;
- (TestReallyLargeTagNumberBuilder*) setA:(SInt32) value;
- (TestReallyLargeTagNumberBuilder*) clearA;

- (BOOL) hasBb;
- (SInt32) bb;
- (TestReallyLargeTagNumberBuilder*) setBb:(SInt32) value;
- (TestReallyLargeTagNumberBuilder*) clearBb;
@end

@interface TestRecursiveMessage : PBGeneratedMessage {
@private
  BOOL hasI_:1;
  BOOL hasA_:1;
  SInt32 i;
  TestRecursiveMessage* a;
}
- (BOOL) hasA;
- (BOOL) hasI;
@property (readonly, strong) TestRecursiveMessage* a;
@property (readonly) SInt32 i;

+ (TestRecursiveMessage*) defaultInstance;
- (TestRecursiveMessage*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (TestRecursiveMessageBuilder*) builder;
+ (TestRecursiveMessageBuilder*) builder;
+ (TestRecursiveMessageBuilder*) builderWithPrototype:(TestRecursiveMessage*) prototype;
- (TestRecursiveMessageBuilder*) toBuilder;

+ (TestRecursiveMessage*) parseFromData:(NSData*) data;
+ (TestRecursiveMessage*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TestRecursiveMessage*) parseFromInputStream:(NSInputStream*) input;
+ (TestRecursiveMessage*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TestRecursiveMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (TestRecursiveMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface TestRecursiveMessageBuilder : PBGeneratedMessageBuilder {
@private
  TestRecursiveMessage* result;
}

- (TestRecursiveMessage*) defaultInstance;

- (TestRecursiveMessageBuilder*) clear;
- (TestRecursiveMessageBuilder*) clone;

- (TestRecursiveMessage*) build;
- (TestRecursiveMessage*) buildPartial;

- (TestRecursiveMessageBuilder*) mergeFrom:(TestRecursiveMessage*) other;
- (TestRecursiveMessageBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (TestRecursiveMessageBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasA;
- (TestRecursiveMessage*) a;
- (TestRecursiveMessageBuilder*) setA:(TestRecursiveMessage*) value;
- (TestRecursiveMessageBuilder*) setABuilder:(TestRecursiveMessageBuilder*) builderForValue;
- (TestRecursiveMessageBuilder*) mergeA:(TestRecursiveMessage*) value;
- (TestRecursiveMessageBuilder*) clearA;

- (BOOL) hasI;
- (SInt32) i;
- (TestRecursiveMessageBuilder*) setI:(SInt32) value;
- (TestRecursiveMessageBuilder*) clearI;
@end

@interface TestMutualRecursionA : PBGeneratedMessage {
@private
  BOOL hasBb_:1;
  TestMutualRecursionB* bb;
}
- (BOOL) hasBb;
@property (readonly, strong) TestMutualRecursionB* bb;

+ (TestMutualRecursionA*) defaultInstance;
- (TestMutualRecursionA*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (TestMutualRecursionABuilder*) builder;
+ (TestMutualRecursionABuilder*) builder;
+ (TestMutualRecursionABuilder*) builderWithPrototype:(TestMutualRecursionA*) prototype;
- (TestMutualRecursionABuilder*) toBuilder;

+ (TestMutualRecursionA*) parseFromData:(NSData*) data;
+ (TestMutualRecursionA*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TestMutualRecursionA*) parseFromInputStream:(NSInputStream*) input;
+ (TestMutualRecursionA*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TestMutualRecursionA*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (TestMutualRecursionA*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface TestMutualRecursionABuilder : PBGeneratedMessageBuilder {
@private
  TestMutualRecursionA* result;
}

- (TestMutualRecursionA*) defaultInstance;

- (TestMutualRecursionABuilder*) clear;
- (TestMutualRecursionABuilder*) clone;

- (TestMutualRecursionA*) build;
- (TestMutualRecursionA*) buildPartial;

- (TestMutualRecursionABuilder*) mergeFrom:(TestMutualRecursionA*) other;
- (TestMutualRecursionABuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (TestMutualRecursionABuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasBb;
- (TestMutualRecursionB*) bb;
- (TestMutualRecursionABuilder*) setBb:(TestMutualRecursionB*) value;
- (TestMutualRecursionABuilder*) setBbBuilder:(TestMutualRecursionBBuilder*) builderForValue;
- (TestMutualRecursionABuilder*) mergeBb:(TestMutualRecursionB*) value;
- (TestMutualRecursionABuilder*) clearBb;
@end

@interface TestMutualRecursionB : PBGeneratedMessage {
@private
  BOOL hasOptionalInt32_:1;
  BOOL hasA_:1;
  SInt32 optionalInt32;
  TestMutualRecursionA* a;
}
- (BOOL) hasA;
- (BOOL) hasOptionalInt32;
@property (readonly, strong) TestMutualRecursionA* a;
@property (readonly) SInt32 optionalInt32;

+ (TestMutualRecursionB*) defaultInstance;
- (TestMutualRecursionB*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (TestMutualRecursionBBuilder*) builder;
+ (TestMutualRecursionBBuilder*) builder;
+ (TestMutualRecursionBBuilder*) builderWithPrototype:(TestMutualRecursionB*) prototype;
- (TestMutualRecursionBBuilder*) toBuilder;

+ (TestMutualRecursionB*) parseFromData:(NSData*) data;
+ (TestMutualRecursionB*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TestMutualRecursionB*) parseFromInputStream:(NSInputStream*) input;
+ (TestMutualRecursionB*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TestMutualRecursionB*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (TestMutualRecursionB*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface TestMutualRecursionBBuilder : PBGeneratedMessageBuilder {
@private
  TestMutualRecursionB* result;
}

- (TestMutualRecursionB*) defaultInstance;

- (TestMutualRecursionBBuilder*) clear;
- (TestMutualRecursionBBuilder*) clone;

- (TestMutualRecursionB*) build;
- (TestMutualRecursionB*) buildPartial;

- (TestMutualRecursionBBuilder*) mergeFrom:(TestMutualRecursionB*) other;
- (TestMutualRecursionBBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (TestMutualRecursionBBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasA;
- (TestMutualRecursionA*) a;
- (TestMutualRecursionBBuilder*) setA:(TestMutualRecursionA*) value;
- (TestMutualRecursionBBuilder*) setABuilder:(TestMutualRecursionABuilder*) builderForValue;
- (TestMutualRecursionBBuilder*) mergeA:(TestMutualRecursionA*) value;
- (TestMutualRecursionBBuilder*) clearA;

- (BOOL) hasOptionalInt32;
- (SInt32) optionalInt32;
- (TestMutualRecursionBBuilder*) setOptionalInt32:(SInt32) value;
- (TestMutualRecursionBBuilder*) clearOptionalInt32;
@end

@interface TestDupFieldNumber : PBGeneratedMessage {
@private
  BOOL hasA_:1;
  BOOL hasFoo_:1;
  BOOL hasBar_:1;
  SInt32 a;
  TestDupFieldNumberFoo* foo;
  TestDupFieldNumberBar* bar;
}
- (BOOL) hasA;
- (BOOL) hasFoo;
- (BOOL) hasBar;
@property (readonly) SInt32 a;
@property (readonly, strong) TestDupFieldNumberFoo* foo;
@property (readonly, strong) TestDupFieldNumberBar* bar;

+ (TestDupFieldNumber*) defaultInstance;
- (TestDupFieldNumber*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (TestDupFieldNumberBuilder*) builder;
+ (TestDupFieldNumberBuilder*) builder;
+ (TestDupFieldNumberBuilder*) builderWithPrototype:(TestDupFieldNumber*) prototype;
- (TestDupFieldNumberBuilder*) toBuilder;

+ (TestDupFieldNumber*) parseFromData:(NSData*) data;
+ (TestDupFieldNumber*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TestDupFieldNumber*) parseFromInputStream:(NSInputStream*) input;
+ (TestDupFieldNumber*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TestDupFieldNumber*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (TestDupFieldNumber*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface TestDupFieldNumberFoo : PBGeneratedMessage {
@private
  BOOL hasA_:1;
  SInt32 a;
}
- (BOOL) hasA;
@property (readonly) SInt32 a;

+ (TestDupFieldNumberFoo*) defaultInstance;
- (TestDupFieldNumberFoo*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (TestDupFieldNumberFooBuilder*) builder;
+ (TestDupFieldNumberFooBuilder*) builder;
+ (TestDupFieldNumberFooBuilder*) builderWithPrototype:(TestDupFieldNumberFoo*) prototype;
- (TestDupFieldNumberFooBuilder*) toBuilder;

+ (TestDupFieldNumberFoo*) parseFromData:(NSData*) data;
+ (TestDupFieldNumberFoo*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TestDupFieldNumberFoo*) parseFromInputStream:(NSInputStream*) input;
+ (TestDupFieldNumberFoo*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TestDupFieldNumberFoo*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (TestDupFieldNumberFoo*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface TestDupFieldNumberFooBuilder : PBGeneratedMessageBuilder {
@private
  TestDupFieldNumberFoo* result;
}

- (TestDupFieldNumberFoo*) defaultInstance;

- (TestDupFieldNumberFooBuilder*) clear;
- (TestDupFieldNumberFooBuilder*) clone;

- (TestDupFieldNumberFoo*) build;
- (TestDupFieldNumberFoo*) buildPartial;

- (TestDupFieldNumberFooBuilder*) mergeFrom:(TestDupFieldNumberFoo*) other;
- (TestDupFieldNumberFooBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (TestDupFieldNumberFooBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasA;
- (SInt32) a;
- (TestDupFieldNumberFooBuilder*) setA:(SInt32) value;
- (TestDupFieldNumberFooBuilder*) clearA;
@end

@interface TestDupFieldNumberBar : PBGeneratedMessage {
@private
  BOOL hasA_:1;
  SInt32 a;
}
- (BOOL) hasA;
@property (readonly) SInt32 a;

+ (TestDupFieldNumberBar*) defaultInstance;
- (TestDupFieldNumberBar*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (TestDupFieldNumberBarBuilder*) builder;
+ (TestDupFieldNumberBarBuilder*) builder;
+ (TestDupFieldNumberBarBuilder*) builderWithPrototype:(TestDupFieldNumberBar*) prototype;
- (TestDupFieldNumberBarBuilder*) toBuilder;

+ (TestDupFieldNumberBar*) parseFromData:(NSData*) data;
+ (TestDupFieldNumberBar*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TestDupFieldNumberBar*) parseFromInputStream:(NSInputStream*) input;
+ (TestDupFieldNumberBar*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TestDupFieldNumberBar*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (TestDupFieldNumberBar*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface TestDupFieldNumberBarBuilder : PBGeneratedMessageBuilder {
@private
  TestDupFieldNumberBar* result;
}

- (TestDupFieldNumberBar*) defaultInstance;

- (TestDupFieldNumberBarBuilder*) clear;
- (TestDupFieldNumberBarBuilder*) clone;

- (TestDupFieldNumberBar*) build;
- (TestDupFieldNumberBar*) buildPartial;

- (TestDupFieldNumberBarBuilder*) mergeFrom:(TestDupFieldNumberBar*) other;
- (TestDupFieldNumberBarBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (TestDupFieldNumberBarBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasA;
- (SInt32) a;
- (TestDupFieldNumberBarBuilder*) setA:(SInt32) value;
- (TestDupFieldNumberBarBuilder*) clearA;
@end

@interface TestDupFieldNumberBuilder : PBGeneratedMessageBuilder {
@private
  TestDupFieldNumber* result;
}

- (TestDupFieldNumber*) defaultInstance;

- (TestDupFieldNumberBuilder*) clear;
- (TestDupFieldNumberBuilder*) clone;

- (TestDupFieldNumber*) build;
- (TestDupFieldNumber*) buildPartial;

- (TestDupFieldNumberBuilder*) mergeFrom:(TestDupFieldNumber*) other;
- (TestDupFieldNumberBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (TestDupFieldNumberBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasA;
- (SInt32) a;
- (TestDupFieldNumberBuilder*) setA:(SInt32) value;
- (TestDupFieldNumberBuilder*) clearA;

- (BOOL) hasFoo;
- (TestDupFieldNumberFoo*) foo;
- (TestDupFieldNumberBuilder*) setFoo:(TestDupFieldNumberFoo*) value;
- (TestDupFieldNumberBuilder*) setFooBuilder:(TestDupFieldNumberFooBuilder*) builderForValue;
- (TestDupFieldNumberBuilder*) mergeFoo:(TestDupFieldNumberFoo*) value;
- (TestDupFieldNumberBuilder*) clearFoo;

- (BOOL) hasBar;
- (TestDupFieldNumberBar*) bar;
- (TestDupFieldNumberBuilder*) setBar:(TestDupFieldNumberBar*) value;
- (TestDupFieldNumberBuilder*) setBarBuilder:(TestDupFieldNumberBarBuilder*) builderForValue;
- (TestDupFieldNumberBuilder*) mergeBar:(TestDupFieldNumberBar*) value;
- (TestDupFieldNumberBuilder*) clearBar;
@end

@interface TestEagerMessage : PBGeneratedMessage {
@private
  BOOL hasSubMessage_:1;
  TestAllTypes* subMessage;
}
- (BOOL) hasSubMessage;
@property (readonly, strong) TestAllTypes* subMessage;

+ (TestEagerMessage*) defaultInstance;
- (TestEagerMessage*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (TestEagerMessageBuilder*) builder;
+ (TestEagerMessageBuilder*) builder;
+ (TestEagerMessageBuilder*) builderWithPrototype:(TestEagerMessage*) prototype;
- (TestEagerMessageBuilder*) toBuilder;

+ (TestEagerMessage*) parseFromData:(NSData*) data;
+ (TestEagerMessage*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TestEagerMessage*) parseFromInputStream:(NSInputStream*) input;
+ (TestEagerMessage*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TestEagerMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (TestEagerMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface TestEagerMessageBuilder : PBGeneratedMessageBuilder {
@private
  TestEagerMessage* result;
}

- (TestEagerMessage*) defaultInstance;

- (TestEagerMessageBuilder*) clear;
- (TestEagerMessageBuilder*) clone;

- (TestEagerMessage*) build;
- (TestEagerMessage*) buildPartial;

- (TestEagerMessageBuilder*) mergeFrom:(TestEagerMessage*) other;
- (TestEagerMessageBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (TestEagerMessageBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasSubMessage;
- (TestAllTypes*) subMessage;
- (TestEagerMessageBuilder*) setSubMessage:(TestAllTypes*) value;
- (TestEagerMessageBuilder*) setSubMessageBuilder:(TestAllTypesBuilder*) builderForValue;
- (TestEagerMessageBuilder*) mergeSubMessage:(TestAllTypes*) value;
- (TestEagerMessageBuilder*) clearSubMessage;
@end

@interface TestLazyMessage : PBGeneratedMessage {
@private
  BOOL hasSubMessage_:1;
  TestAllTypes* subMessage;
}
- (BOOL) hasSubMessage;
@property (readonly, strong) TestAllTypes* subMessage;

+ (TestLazyMessage*) defaultInstance;
- (TestLazyMessage*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (TestLazyMessageBuilder*) builder;
+ (TestLazyMessageBuilder*) builder;
+ (TestLazyMessageBuilder*) builderWithPrototype:(TestLazyMessage*) prototype;
- (TestLazyMessageBuilder*) toBuilder;

+ (TestLazyMessage*) parseFromData:(NSData*) data;
+ (TestLazyMessage*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TestLazyMessage*) parseFromInputStream:(NSInputStream*) input;
+ (TestLazyMessage*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TestLazyMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (TestLazyMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface TestLazyMessageBuilder : PBGeneratedMessageBuilder {
@private
  TestLazyMessage* result;
}

- (TestLazyMessage*) defaultInstance;

- (TestLazyMessageBuilder*) clear;
- (TestLazyMessageBuilder*) clone;

- (TestLazyMessage*) build;
- (TestLazyMessage*) buildPartial;

- (TestLazyMessageBuilder*) mergeFrom:(TestLazyMessage*) other;
- (TestLazyMessageBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (TestLazyMessageBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasSubMessage;
- (TestAllTypes*) subMessage;
- (TestLazyMessageBuilder*) setSubMessage:(TestAllTypes*) value;
- (TestLazyMessageBuilder*) setSubMessageBuilder:(TestAllTypesBuilder*) builderForValue;
- (TestLazyMessageBuilder*) mergeSubMessage:(TestAllTypes*) value;
- (TestLazyMessageBuilder*) clearSubMessage;
@end

@interface TestNestedMessageHasBits : PBGeneratedMessage {
@private
  BOOL hasOptionalNestedMessage_:1;
  TestNestedMessageHasBitsNestedMessage* optionalNestedMessage;
}
- (BOOL) hasOptionalNestedMessage;
@property (readonly, strong) TestNestedMessageHasBitsNestedMessage* optionalNestedMessage;

+ (TestNestedMessageHasBits*) defaultInstance;
- (TestNestedMessageHasBits*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (TestNestedMessageHasBitsBuilder*) builder;
+ (TestNestedMessageHasBitsBuilder*) builder;
+ (TestNestedMessageHasBitsBuilder*) builderWithPrototype:(TestNestedMessageHasBits*) prototype;
- (TestNestedMessageHasBitsBuilder*) toBuilder;

+ (TestNestedMessageHasBits*) parseFromData:(NSData*) data;
+ (TestNestedMessageHasBits*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TestNestedMessageHasBits*) parseFromInputStream:(NSInputStream*) input;
+ (TestNestedMessageHasBits*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TestNestedMessageHasBits*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (TestNestedMessageHasBits*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface TestNestedMessageHasBitsNestedMessage : PBGeneratedMessage {
@private
  PBAppendableArray * nestedmessageRepeatedInt32Array;
  NSMutableArray * nestedmessageRepeatedForeignmessageArray;
}
@property (readonly, strong) PBArray * nestedmessageRepeatedInt32;
@property (readonly, strong) NSArray * nestedmessageRepeatedForeignmessage;
- (SInt32)nestedmessageRepeatedInt32AtIndex:(NSUInteger)index;
- (ForeignMessage*)nestedmessageRepeatedForeignmessageAtIndex:(NSUInteger)index;

+ (TestNestedMessageHasBitsNestedMessage*) defaultInstance;
- (TestNestedMessageHasBitsNestedMessage*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (TestNestedMessageHasBitsNestedMessageBuilder*) builder;
+ (TestNestedMessageHasBitsNestedMessageBuilder*) builder;
+ (TestNestedMessageHasBitsNestedMessageBuilder*) builderWithPrototype:(TestNestedMessageHasBitsNestedMessage*) prototype;
- (TestNestedMessageHasBitsNestedMessageBuilder*) toBuilder;

+ (TestNestedMessageHasBitsNestedMessage*) parseFromData:(NSData*) data;
+ (TestNestedMessageHasBitsNestedMessage*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TestNestedMessageHasBitsNestedMessage*) parseFromInputStream:(NSInputStream*) input;
+ (TestNestedMessageHasBitsNestedMessage*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TestNestedMessageHasBitsNestedMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (TestNestedMessageHasBitsNestedMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface TestNestedMessageHasBitsNestedMessageBuilder : PBGeneratedMessageBuilder {
@private
  TestNestedMessageHasBitsNestedMessage* result;
}

- (TestNestedMessageHasBitsNestedMessage*) defaultInstance;

- (TestNestedMessageHasBitsNestedMessageBuilder*) clear;
- (TestNestedMessageHasBitsNestedMessageBuilder*) clone;

- (TestNestedMessageHasBitsNestedMessage*) build;
- (TestNestedMessageHasBitsNestedMessage*) buildPartial;

- (TestNestedMessageHasBitsNestedMessageBuilder*) mergeFrom:(TestNestedMessageHasBitsNestedMessage*) other;
- (TestNestedMessageHasBitsNestedMessageBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (TestNestedMessageHasBitsNestedMessageBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (PBAppendableArray *)nestedmessageRepeatedInt32;
- (SInt32)nestedmessageRepeatedInt32AtIndex:(NSUInteger)index;
- (TestNestedMessageHasBitsNestedMessageBuilder *)addNestedmessageRepeatedInt32:(SInt32)value;
- (TestNestedMessageHasBitsNestedMessageBuilder *)setNestedmessageRepeatedInt32Array:(NSArray *)array;
- (TestNestedMessageHasBitsNestedMessageBuilder *)setNestedmessageRepeatedInt32Values:(const SInt32 *)values count:(NSUInteger)count;
- (TestNestedMessageHasBitsNestedMessageBuilder *)clearNestedmessageRepeatedInt32;

- (NSMutableArray *)nestedmessageRepeatedForeignmessage;
- (ForeignMessage*)nestedmessageRepeatedForeignmessageAtIndex:(NSUInteger)index;
- (TestNestedMessageHasBitsNestedMessageBuilder *)addNestedmessageRepeatedForeignmessage:(ForeignMessage*)value;
- (TestNestedMessageHasBitsNestedMessageBuilder *)setNestedmessageRepeatedForeignmessageArray:(NSArray *)array;
- (TestNestedMessageHasBitsNestedMessageBuilder *)clearNestedmessageRepeatedForeignmessage;
@end

@interface TestNestedMessageHasBitsBuilder : PBGeneratedMessageBuilder {
@private
  TestNestedMessageHasBits* result;
}

- (TestNestedMessageHasBits*) defaultInstance;

- (TestNestedMessageHasBitsBuilder*) clear;
- (TestNestedMessageHasBitsBuilder*) clone;

- (TestNestedMessageHasBits*) build;
- (TestNestedMessageHasBits*) buildPartial;

- (TestNestedMessageHasBitsBuilder*) mergeFrom:(TestNestedMessageHasBits*) other;
- (TestNestedMessageHasBitsBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (TestNestedMessageHasBitsBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasOptionalNestedMessage;
- (TestNestedMessageHasBitsNestedMessage*) optionalNestedMessage;
- (TestNestedMessageHasBitsBuilder*) setOptionalNestedMessage:(TestNestedMessageHasBitsNestedMessage*) value;
- (TestNestedMessageHasBitsBuilder*) setOptionalNestedMessageBuilder:(TestNestedMessageHasBitsNestedMessageBuilder*) builderForValue;
- (TestNestedMessageHasBitsBuilder*) mergeOptionalNestedMessage:(TestNestedMessageHasBitsNestedMessage*) value;
- (TestNestedMessageHasBitsBuilder*) clearOptionalNestedMessage;
@end

@interface TestCamelCaseFieldNames : PBGeneratedMessage {
@private
  BOOL hasPrimitiveField_:1;
  BOOL hasStringField_:1;
  BOOL hasStringPieceField_:1;
  BOOL hasCordField_:1;
  BOOL hasMessageField_:1;
  BOOL hasEnumField_:1;
  SInt32 primitiveField;
  NSString* stringField;
  NSString* stringPieceField;
  NSString* cordField;
  ForeignMessage* messageField;
  ForeignEnum enumField;
  PBAppendableArray * repeatedPrimitiveFieldArray;
  NSMutableArray * repeatedStringFieldArray;
  NSMutableArray * repeatedStringPieceFieldArray;
  NSMutableArray * repeatedCordFieldArray;
  NSMutableArray * repeatedMessageFieldArray;
  PBAppendableArray * repeatedEnumFieldArray;
}
- (BOOL) hasPrimitiveField;
- (BOOL) hasStringField;
- (BOOL) hasEnumField;
- (BOOL) hasMessageField;
- (BOOL) hasStringPieceField;
- (BOOL) hasCordField;
@property (readonly) SInt32 primitiveField;
@property (readonly, strong) NSString* stringField;
@property (readonly) ForeignEnum enumField;
@property (readonly, strong) ForeignMessage* messageField;
@property (readonly, strong) NSString* stringPieceField;
@property (readonly, strong) NSString* cordField;
@property (readonly, strong) PBArray * repeatedPrimitiveField;
@property (readonly, strong) PBArray * repeatedStringField;
@property (readonly, strong) PBArray * repeatedEnumField;
@property (readonly, strong) NSArray * repeatedMessageField;
@property (readonly, strong) PBArray * repeatedStringPieceField;
@property (readonly, strong) PBArray * repeatedCordField;
- (SInt32)repeatedPrimitiveFieldAtIndex:(NSUInteger)index;
- (NSString*)repeatedStringFieldAtIndex:(NSUInteger)index;
- (ForeignEnum)repeatedEnumFieldAtIndex:(NSUInteger)index;
- (ForeignMessage*)repeatedMessageFieldAtIndex:(NSUInteger)index;
- (NSString*)repeatedStringPieceFieldAtIndex:(NSUInteger)index;
- (NSString*)repeatedCordFieldAtIndex:(NSUInteger)index;

+ (TestCamelCaseFieldNames*) defaultInstance;
- (TestCamelCaseFieldNames*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (TestCamelCaseFieldNamesBuilder*) builder;
+ (TestCamelCaseFieldNamesBuilder*) builder;
+ (TestCamelCaseFieldNamesBuilder*) builderWithPrototype:(TestCamelCaseFieldNames*) prototype;
- (TestCamelCaseFieldNamesBuilder*) toBuilder;

+ (TestCamelCaseFieldNames*) parseFromData:(NSData*) data;
+ (TestCamelCaseFieldNames*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TestCamelCaseFieldNames*) parseFromInputStream:(NSInputStream*) input;
+ (TestCamelCaseFieldNames*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TestCamelCaseFieldNames*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (TestCamelCaseFieldNames*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface TestCamelCaseFieldNamesBuilder : PBGeneratedMessageBuilder {
@private
  TestCamelCaseFieldNames* result;
}

- (TestCamelCaseFieldNames*) defaultInstance;

- (TestCamelCaseFieldNamesBuilder*) clear;
- (TestCamelCaseFieldNamesBuilder*) clone;

- (TestCamelCaseFieldNames*) build;
- (TestCamelCaseFieldNames*) buildPartial;

- (TestCamelCaseFieldNamesBuilder*) mergeFrom:(TestCamelCaseFieldNames*) other;
- (TestCamelCaseFieldNamesBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (TestCamelCaseFieldNamesBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasPrimitiveField;
- (SInt32) primitiveField;
- (TestCamelCaseFieldNamesBuilder*) setPrimitiveField:(SInt32) value;
- (TestCamelCaseFieldNamesBuilder*) clearPrimitiveField;

- (BOOL) hasStringField;
- (NSString*) stringField;
- (TestCamelCaseFieldNamesBuilder*) setStringField:(NSString*) value;
- (TestCamelCaseFieldNamesBuilder*) clearStringField;

- (BOOL) hasEnumField;
- (ForeignEnum) enumField;
- (TestCamelCaseFieldNamesBuilder*) setEnumField:(ForeignEnum) value;
- (TestCamelCaseFieldNamesBuilder*) clearEnumField;

- (BOOL) hasMessageField;
- (ForeignMessage*) messageField;
- (TestCamelCaseFieldNamesBuilder*) setMessageField:(ForeignMessage*) value;
- (TestCamelCaseFieldNamesBuilder*) setMessageFieldBuilder:(ForeignMessageBuilder*) builderForValue;
- (TestCamelCaseFieldNamesBuilder*) mergeMessageField:(ForeignMessage*) value;
- (TestCamelCaseFieldNamesBuilder*) clearMessageField;

- (BOOL) hasStringPieceField;
- (NSString*) stringPieceField;
- (TestCamelCaseFieldNamesBuilder*) setStringPieceField:(NSString*) value;
- (TestCamelCaseFieldNamesBuilder*) clearStringPieceField;

- (BOOL) hasCordField;
- (NSString*) cordField;
- (TestCamelCaseFieldNamesBuilder*) setCordField:(NSString*) value;
- (TestCamelCaseFieldNamesBuilder*) clearCordField;

- (PBAppendableArray *)repeatedPrimitiveField;
- (SInt32)repeatedPrimitiveFieldAtIndex:(NSUInteger)index;
- (TestCamelCaseFieldNamesBuilder *)addRepeatedPrimitiveField:(SInt32)value;
- (TestCamelCaseFieldNamesBuilder *)setRepeatedPrimitiveFieldArray:(NSArray *)array;
- (TestCamelCaseFieldNamesBuilder *)setRepeatedPrimitiveFieldValues:(const SInt32 *)values count:(NSUInteger)count;
- (TestCamelCaseFieldNamesBuilder *)clearRepeatedPrimitiveField;

- (NSMutableArray *)repeatedStringField;
- (NSString*)repeatedStringFieldAtIndex:(NSUInteger)index;
- (TestCamelCaseFieldNamesBuilder *)addRepeatedStringField:(NSString*)value;
- (TestCamelCaseFieldNamesBuilder *)setRepeatedStringFieldArray:(NSArray *)array;
- (TestCamelCaseFieldNamesBuilder *)clearRepeatedStringField;

- (PBAppendableArray *)repeatedEnumField;
- (ForeignEnum)repeatedEnumFieldAtIndex:(NSUInteger)index;
- (TestCamelCaseFieldNamesBuilder *)addRepeatedEnumField:(ForeignEnum)value;
- (TestCamelCaseFieldNamesBuilder *)setRepeatedEnumFieldArray:(NSArray *)array;
- (TestCamelCaseFieldNamesBuilder *)setRepeatedEnumFieldValues:(const ForeignEnum *)values count:(NSUInteger)count;
- (TestCamelCaseFieldNamesBuilder *)clearRepeatedEnumField;

- (NSMutableArray *)repeatedMessageField;
- (ForeignMessage*)repeatedMessageFieldAtIndex:(NSUInteger)index;
- (TestCamelCaseFieldNamesBuilder *)addRepeatedMessageField:(ForeignMessage*)value;
- (TestCamelCaseFieldNamesBuilder *)setRepeatedMessageFieldArray:(NSArray *)array;
- (TestCamelCaseFieldNamesBuilder *)clearRepeatedMessageField;

- (NSMutableArray *)repeatedStringPieceField;
- (NSString*)repeatedStringPieceFieldAtIndex:(NSUInteger)index;
- (TestCamelCaseFieldNamesBuilder *)addRepeatedStringPieceField:(NSString*)value;
- (TestCamelCaseFieldNamesBuilder *)setRepeatedStringPieceFieldArray:(NSArray *)array;
- (TestCamelCaseFieldNamesBuilder *)clearRepeatedStringPieceField;

- (NSMutableArray *)repeatedCordField;
- (NSString*)repeatedCordFieldAtIndex:(NSUInteger)index;
- (TestCamelCaseFieldNamesBuilder *)addRepeatedCordField:(NSString*)value;
- (TestCamelCaseFieldNamesBuilder *)setRepeatedCordFieldArray:(NSArray *)array;
- (TestCamelCaseFieldNamesBuilder *)clearRepeatedCordField;
@end

@interface TestFieldOrderings : PBExtendableMessage {
@private
  BOOL hasMyFloat_:1;
  BOOL hasMyInt_:1;
  BOOL hasMyString_:1;
  Float32 myFloat;
  SInt64 myInt;
  NSString* myString;
}
- (BOOL) hasMyString;
- (BOOL) hasMyInt;
- (BOOL) hasMyFloat;
@property (readonly, strong) NSString* myString;
@property (readonly) SInt64 myInt;
@property (readonly) Float32 myFloat;

+ (TestFieldOrderings*) defaultInstance;
- (TestFieldOrderings*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (TestFieldOrderingsBuilder*) builder;
+ (TestFieldOrderingsBuilder*) builder;
+ (TestFieldOrderingsBuilder*) builderWithPrototype:(TestFieldOrderings*) prototype;
- (TestFieldOrderingsBuilder*) toBuilder;

+ (TestFieldOrderings*) parseFromData:(NSData*) data;
+ (TestFieldOrderings*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TestFieldOrderings*) parseFromInputStream:(NSInputStream*) input;
+ (TestFieldOrderings*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TestFieldOrderings*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (TestFieldOrderings*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface TestFieldOrderingsBuilder : PBExtendableMessageBuilder {
@private
  TestFieldOrderings* result;
}

- (TestFieldOrderings*) defaultInstance;

- (TestFieldOrderingsBuilder*) clear;
- (TestFieldOrderingsBuilder*) clone;

- (TestFieldOrderings*) build;
- (TestFieldOrderings*) buildPartial;

- (TestFieldOrderingsBuilder*) mergeFrom:(TestFieldOrderings*) other;
- (TestFieldOrderingsBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (TestFieldOrderingsBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasMyString;
- (NSString*) myString;
- (TestFieldOrderingsBuilder*) setMyString:(NSString*) value;
- (TestFieldOrderingsBuilder*) clearMyString;

- (BOOL) hasMyInt;
- (SInt64) myInt;
- (TestFieldOrderingsBuilder*) setMyInt:(SInt64) value;
- (TestFieldOrderingsBuilder*) clearMyInt;

- (BOOL) hasMyFloat;
- (Float32) myFloat;
- (TestFieldOrderingsBuilder*) setMyFloat:(Float32) value;
- (TestFieldOrderingsBuilder*) clearMyFloat;
@end

@interface TestExtremeDefaultValues : PBGeneratedMessage {
@private
  BOOL hasInfDouble_:1;
  BOOL hasNegInfDouble_:1;
  BOOL hasNanDouble_:1;
  BOOL hasZeroFloat_:1;
  BOOL hasOneFloat_:1;
  BOOL hasSmallFloat_:1;
  BOOL hasNegativeOneFloat_:1;
  BOOL hasNegativeFloat_:1;
  BOOL hasLargeFloat_:1;
  BOOL hasSmallNegativeFloat_:1;
  BOOL hasInfFloat_:1;
  BOOL hasNegInfFloat_:1;
  BOOL hasNanFloat_:1;
  BOOL hasSmallInt64_:1;
  BOOL hasReallySmallInt64_:1;
  BOOL hasLargeUint64_:1;
  BOOL hasSmallInt32_:1;
  BOOL hasReallySmallInt32_:1;
  BOOL hasUtf8String_:1;
  BOOL hasCppTrigraph_:1;
  BOOL hasStringWithZero_:1;
  BOOL hasStringPieceWithZero_:1;
  BOOL hasCordWithZero_:1;
  BOOL hasReplacementString_:1;
  BOOL hasEscapedBytes_:1;
  BOOL hasBytesWithZero_:1;
  BOOL hasLargeUint32_:1;
  Float64 infDouble;
  Float64 negInfDouble;
  Float64 nanDouble;
  Float32 zeroFloat;
  Float32 oneFloat;
  Float32 smallFloat;
  Float32 negativeOneFloat;
  Float32 negativeFloat;
  Float32 largeFloat;
  Float32 smallNegativeFloat;
  Float32 infFloat;
  Float32 negInfFloat;
  Float32 nanFloat;
  SInt64 smallInt64;
  SInt64 reallySmallInt64;
  UInt64 largeUint64;
  SInt32 smallInt32;
  SInt32 reallySmallInt32;
  NSString* utf8String;
  NSString* cppTrigraph;
  NSString* stringWithZero;
  NSString* stringPieceWithZero;
  NSString* cordWithZero;
  NSString* replacementString;
  NSData* escapedBytes;
  NSData* bytesWithZero;
  UInt32 largeUint32;
}
- (BOOL) hasEscapedBytes;
- (BOOL) hasLargeUint32;
- (BOOL) hasLargeUint64;
- (BOOL) hasSmallInt32;
- (BOOL) hasSmallInt64;
- (BOOL) hasReallySmallInt32;
- (BOOL) hasReallySmallInt64;
- (BOOL) hasUtf8String;
- (BOOL) hasZeroFloat;
- (BOOL) hasOneFloat;
- (BOOL) hasSmallFloat;
- (BOOL) hasNegativeOneFloat;
- (BOOL) hasNegativeFloat;
- (BOOL) hasLargeFloat;
- (BOOL) hasSmallNegativeFloat;
- (BOOL) hasInfDouble;
- (BOOL) hasNegInfDouble;
- (BOOL) hasNanDouble;
- (BOOL) hasInfFloat;
- (BOOL) hasNegInfFloat;
- (BOOL) hasNanFloat;
- (BOOL) hasCppTrigraph;
- (BOOL) hasStringWithZero;
- (BOOL) hasBytesWithZero;
- (BOOL) hasStringPieceWithZero;
- (BOOL) hasCordWithZero;
- (BOOL) hasReplacementString;
@property (readonly, strong) NSData* escapedBytes;
@property (readonly) UInt32 largeUint32;
@property (readonly) UInt64 largeUint64;
@property (readonly) SInt32 smallInt32;
@property (readonly) SInt64 smallInt64;
@property (readonly) SInt32 reallySmallInt32;
@property (readonly) SInt64 reallySmallInt64;
@property (readonly, strong) NSString* utf8String;
@property (readonly) Float32 zeroFloat;
@property (readonly) Float32 oneFloat;
@property (readonly) Float32 smallFloat;
@property (readonly) Float32 negativeOneFloat;
@property (readonly) Float32 negativeFloat;
@property (readonly) Float32 largeFloat;
@property (readonly) Float32 smallNegativeFloat;
@property (readonly) Float64 infDouble;
@property (readonly) Float64 negInfDouble;
@property (readonly) Float64 nanDouble;
@property (readonly) Float32 infFloat;
@property (readonly) Float32 negInfFloat;
@property (readonly) Float32 nanFloat;
@property (readonly, strong) NSString* cppTrigraph;
@property (readonly, strong) NSString* stringWithZero;
@property (readonly, strong) NSData* bytesWithZero;
@property (readonly, strong) NSString* stringPieceWithZero;
@property (readonly, strong) NSString* cordWithZero;
@property (readonly, strong) NSString* replacementString;

+ (TestExtremeDefaultValues*) defaultInstance;
- (TestExtremeDefaultValues*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (TestExtremeDefaultValuesBuilder*) builder;
+ (TestExtremeDefaultValuesBuilder*) builder;
+ (TestExtremeDefaultValuesBuilder*) builderWithPrototype:(TestExtremeDefaultValues*) prototype;
- (TestExtremeDefaultValuesBuilder*) toBuilder;

+ (TestExtremeDefaultValues*) parseFromData:(NSData*) data;
+ (TestExtremeDefaultValues*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TestExtremeDefaultValues*) parseFromInputStream:(NSInputStream*) input;
+ (TestExtremeDefaultValues*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TestExtremeDefaultValues*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (TestExtremeDefaultValues*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface TestExtremeDefaultValuesBuilder : PBGeneratedMessageBuilder {
@private
  TestExtremeDefaultValues* result;
}

- (TestExtremeDefaultValues*) defaultInstance;

- (TestExtremeDefaultValuesBuilder*) clear;
- (TestExtremeDefaultValuesBuilder*) clone;

- (TestExtremeDefaultValues*) build;
- (TestExtremeDefaultValues*) buildPartial;

- (TestExtremeDefaultValuesBuilder*) mergeFrom:(TestExtremeDefaultValues*) other;
- (TestExtremeDefaultValuesBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (TestExtremeDefaultValuesBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasEscapedBytes;
- (NSData*) escapedBytes;
- (TestExtremeDefaultValuesBuilder*) setEscapedBytes:(NSData*) value;
- (TestExtremeDefaultValuesBuilder*) clearEscapedBytes;

- (BOOL) hasLargeUint32;
- (UInt32) largeUint32;
- (TestExtremeDefaultValuesBuilder*) setLargeUint32:(UInt32) value;
- (TestExtremeDefaultValuesBuilder*) clearLargeUint32;

- (BOOL) hasLargeUint64;
- (UInt64) largeUint64;
- (TestExtremeDefaultValuesBuilder*) setLargeUint64:(UInt64) value;
- (TestExtremeDefaultValuesBuilder*) clearLargeUint64;

- (BOOL) hasSmallInt32;
- (SInt32) smallInt32;
- (TestExtremeDefaultValuesBuilder*) setSmallInt32:(SInt32) value;
- (TestExtremeDefaultValuesBuilder*) clearSmallInt32;

- (BOOL) hasSmallInt64;
- (SInt64) smallInt64;
- (TestExtremeDefaultValuesBuilder*) setSmallInt64:(SInt64) value;
- (TestExtremeDefaultValuesBuilder*) clearSmallInt64;

- (BOOL) hasReallySmallInt32;
- (SInt32) reallySmallInt32;
- (TestExtremeDefaultValuesBuilder*) setReallySmallInt32:(SInt32) value;
- (TestExtremeDefaultValuesBuilder*) clearReallySmallInt32;

- (BOOL) hasReallySmallInt64;
- (SInt64) reallySmallInt64;
- (TestExtremeDefaultValuesBuilder*) setReallySmallInt64:(SInt64) value;
- (TestExtremeDefaultValuesBuilder*) clearReallySmallInt64;

- (BOOL) hasUtf8String;
- (NSString*) utf8String;
- (TestExtremeDefaultValuesBuilder*) setUtf8String:(NSString*) value;
- (TestExtremeDefaultValuesBuilder*) clearUtf8String;

- (BOOL) hasZeroFloat;
- (Float32) zeroFloat;
- (TestExtremeDefaultValuesBuilder*) setZeroFloat:(Float32) value;
- (TestExtremeDefaultValuesBuilder*) clearZeroFloat;

- (BOOL) hasOneFloat;
- (Float32) oneFloat;
- (TestExtremeDefaultValuesBuilder*) setOneFloat:(Float32) value;
- (TestExtremeDefaultValuesBuilder*) clearOneFloat;

- (BOOL) hasSmallFloat;
- (Float32) smallFloat;
- (TestExtremeDefaultValuesBuilder*) setSmallFloat:(Float32) value;
- (TestExtremeDefaultValuesBuilder*) clearSmallFloat;

- (BOOL) hasNegativeOneFloat;
- (Float32) negativeOneFloat;
- (TestExtremeDefaultValuesBuilder*) setNegativeOneFloat:(Float32) value;
- (TestExtremeDefaultValuesBuilder*) clearNegativeOneFloat;

- (BOOL) hasNegativeFloat;
- (Float32) negativeFloat;
- (TestExtremeDefaultValuesBuilder*) setNegativeFloat:(Float32) value;
- (TestExtremeDefaultValuesBuilder*) clearNegativeFloat;

- (BOOL) hasLargeFloat;
- (Float32) largeFloat;
- (TestExtremeDefaultValuesBuilder*) setLargeFloat:(Float32) value;
- (TestExtremeDefaultValuesBuilder*) clearLargeFloat;

- (BOOL) hasSmallNegativeFloat;
- (Float32) smallNegativeFloat;
- (TestExtremeDefaultValuesBuilder*) setSmallNegativeFloat:(Float32) value;
- (TestExtremeDefaultValuesBuilder*) clearSmallNegativeFloat;

- (BOOL) hasInfDouble;
- (Float64) infDouble;
- (TestExtremeDefaultValuesBuilder*) setInfDouble:(Float64) value;
- (TestExtremeDefaultValuesBuilder*) clearInfDouble;

- (BOOL) hasNegInfDouble;
- (Float64) negInfDouble;
- (TestExtremeDefaultValuesBuilder*) setNegInfDouble:(Float64) value;
- (TestExtremeDefaultValuesBuilder*) clearNegInfDouble;

- (BOOL) hasNanDouble;
- (Float64) nanDouble;
- (TestExtremeDefaultValuesBuilder*) setNanDouble:(Float64) value;
- (TestExtremeDefaultValuesBuilder*) clearNanDouble;

- (BOOL) hasInfFloat;
- (Float32) infFloat;
- (TestExtremeDefaultValuesBuilder*) setInfFloat:(Float32) value;
- (TestExtremeDefaultValuesBuilder*) clearInfFloat;

- (BOOL) hasNegInfFloat;
- (Float32) negInfFloat;
- (TestExtremeDefaultValuesBuilder*) setNegInfFloat:(Float32) value;
- (TestExtremeDefaultValuesBuilder*) clearNegInfFloat;

- (BOOL) hasNanFloat;
- (Float32) nanFloat;
- (TestExtremeDefaultValuesBuilder*) setNanFloat:(Float32) value;
- (TestExtremeDefaultValuesBuilder*) clearNanFloat;

- (BOOL) hasCppTrigraph;
- (NSString*) cppTrigraph;
- (TestExtremeDefaultValuesBuilder*) setCppTrigraph:(NSString*) value;
- (TestExtremeDefaultValuesBuilder*) clearCppTrigraph;

- (BOOL) hasStringWithZero;
- (NSString*) stringWithZero;
- (TestExtremeDefaultValuesBuilder*) setStringWithZero:(NSString*) value;
- (TestExtremeDefaultValuesBuilder*) clearStringWithZero;

- (BOOL) hasBytesWithZero;
- (NSData*) bytesWithZero;
- (TestExtremeDefaultValuesBuilder*) setBytesWithZero:(NSData*) value;
- (TestExtremeDefaultValuesBuilder*) clearBytesWithZero;

- (BOOL) hasStringPieceWithZero;
- (NSString*) stringPieceWithZero;
- (TestExtremeDefaultValuesBuilder*) setStringPieceWithZero:(NSString*) value;
- (TestExtremeDefaultValuesBuilder*) clearStringPieceWithZero;

- (BOOL) hasCordWithZero;
- (NSString*) cordWithZero;
- (TestExtremeDefaultValuesBuilder*) setCordWithZero:(NSString*) value;
- (TestExtremeDefaultValuesBuilder*) clearCordWithZero;

- (BOOL) hasReplacementString;
- (NSString*) replacementString;
- (TestExtremeDefaultValuesBuilder*) setReplacementString:(NSString*) value;
- (TestExtremeDefaultValuesBuilder*) clearReplacementString;
@end

@interface SparseEnumMessage : PBGeneratedMessage {
@private
  BOOL hasSparseEnum_:1;
  TestSparseEnum sparseEnum;
}
- (BOOL) hasSparseEnum;
@property (readonly) TestSparseEnum sparseEnum;

+ (SparseEnumMessage*) defaultInstance;
- (SparseEnumMessage*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (SparseEnumMessageBuilder*) builder;
+ (SparseEnumMessageBuilder*) builder;
+ (SparseEnumMessageBuilder*) builderWithPrototype:(SparseEnumMessage*) prototype;
- (SparseEnumMessageBuilder*) toBuilder;

+ (SparseEnumMessage*) parseFromData:(NSData*) data;
+ (SparseEnumMessage*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (SparseEnumMessage*) parseFromInputStream:(NSInputStream*) input;
+ (SparseEnumMessage*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (SparseEnumMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (SparseEnumMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface SparseEnumMessageBuilder : PBGeneratedMessageBuilder {
@private
  SparseEnumMessage* result;
}

- (SparseEnumMessage*) defaultInstance;

- (SparseEnumMessageBuilder*) clear;
- (SparseEnumMessageBuilder*) clone;

- (SparseEnumMessage*) build;
- (SparseEnumMessage*) buildPartial;

- (SparseEnumMessageBuilder*) mergeFrom:(SparseEnumMessage*) other;
- (SparseEnumMessageBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (SparseEnumMessageBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasSparseEnum;
- (TestSparseEnum) sparseEnum;
- (SparseEnumMessageBuilder*) setSparseEnum:(TestSparseEnum) value;
- (SparseEnumMessageBuilder*) clearSparseEnum;
@end

@interface OneString : PBGeneratedMessage {
@private
  BOOL hasData_:1;
  NSString* data;
}
- (BOOL) hasData;
@property (readonly, strong) NSString* data;

+ (OneString*) defaultInstance;
- (OneString*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (OneStringBuilder*) builder;
+ (OneStringBuilder*) builder;
+ (OneStringBuilder*) builderWithPrototype:(OneString*) prototype;
- (OneStringBuilder*) toBuilder;

+ (OneString*) parseFromData:(NSData*) data;
+ (OneString*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (OneString*) parseFromInputStream:(NSInputStream*) input;
+ (OneString*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (OneString*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (OneString*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface OneStringBuilder : PBGeneratedMessageBuilder {
@private
  OneString* result;
}

- (OneString*) defaultInstance;

- (OneStringBuilder*) clear;
- (OneStringBuilder*) clone;

- (OneString*) build;
- (OneString*) buildPartial;

- (OneStringBuilder*) mergeFrom:(OneString*) other;
- (OneStringBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (OneStringBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasData;
- (NSString*) data;
- (OneStringBuilder*) setData:(NSString*) value;
- (OneStringBuilder*) clearData;
@end

@interface MoreString : PBGeneratedMessage {
@private
  NSMutableArray * dataArray;
}
@property (readonly, strong) PBArray * data;
- (NSString*)dataAtIndex:(NSUInteger)index;

+ (MoreString*) defaultInstance;
- (MoreString*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (MoreStringBuilder*) builder;
+ (MoreStringBuilder*) builder;
+ (MoreStringBuilder*) builderWithPrototype:(MoreString*) prototype;
- (MoreStringBuilder*) toBuilder;

+ (MoreString*) parseFromData:(NSData*) data;
+ (MoreString*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (MoreString*) parseFromInputStream:(NSInputStream*) input;
+ (MoreString*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (MoreString*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (MoreString*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface MoreStringBuilder : PBGeneratedMessageBuilder {
@private
  MoreString* result;
}

- (MoreString*) defaultInstance;

- (MoreStringBuilder*) clear;
- (MoreStringBuilder*) clone;

- (MoreString*) build;
- (MoreString*) buildPartial;

- (MoreStringBuilder*) mergeFrom:(MoreString*) other;
- (MoreStringBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (MoreStringBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (NSMutableArray *)data;
- (NSString*)dataAtIndex:(NSUInteger)index;
- (MoreStringBuilder *)addData:(NSString*)value;
- (MoreStringBuilder *)setDataArray:(NSArray *)array;
- (MoreStringBuilder *)clearData;
@end

@interface OneBytes : PBGeneratedMessage {
@private
  BOOL hasData_:1;
  NSData* data;
}
- (BOOL) hasData;
@property (readonly, strong) NSData* data;

+ (OneBytes*) defaultInstance;
- (OneBytes*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (OneBytesBuilder*) builder;
+ (OneBytesBuilder*) builder;
+ (OneBytesBuilder*) builderWithPrototype:(OneBytes*) prototype;
- (OneBytesBuilder*) toBuilder;

+ (OneBytes*) parseFromData:(NSData*) data;
+ (OneBytes*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (OneBytes*) parseFromInputStream:(NSInputStream*) input;
+ (OneBytes*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (OneBytes*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (OneBytes*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface OneBytesBuilder : PBGeneratedMessageBuilder {
@private
  OneBytes* result;
}

- (OneBytes*) defaultInstance;

- (OneBytesBuilder*) clear;
- (OneBytesBuilder*) clone;

- (OneBytes*) build;
- (OneBytes*) buildPartial;

- (OneBytesBuilder*) mergeFrom:(OneBytes*) other;
- (OneBytesBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (OneBytesBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasData;
- (NSData*) data;
- (OneBytesBuilder*) setData:(NSData*) value;
- (OneBytesBuilder*) clearData;
@end

@interface MoreBytes : PBGeneratedMessage {
@private
  NSMutableArray * dataArray;
}
@property (readonly, strong) PBArray * data;
- (NSData*)dataAtIndex:(NSUInteger)index;

+ (MoreBytes*) defaultInstance;
- (MoreBytes*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (MoreBytesBuilder*) builder;
+ (MoreBytesBuilder*) builder;
+ (MoreBytesBuilder*) builderWithPrototype:(MoreBytes*) prototype;
- (MoreBytesBuilder*) toBuilder;

+ (MoreBytes*) parseFromData:(NSData*) data;
+ (MoreBytes*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (MoreBytes*) parseFromInputStream:(NSInputStream*) input;
+ (MoreBytes*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (MoreBytes*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (MoreBytes*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface MoreBytesBuilder : PBGeneratedMessageBuilder {
@private
  MoreBytes* result;
}

- (MoreBytes*) defaultInstance;

- (MoreBytesBuilder*) clear;
- (MoreBytesBuilder*) clone;

- (MoreBytes*) build;
- (MoreBytes*) buildPartial;

- (MoreBytesBuilder*) mergeFrom:(MoreBytes*) other;
- (MoreBytesBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (MoreBytesBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (NSMutableArray *)data;
- (NSData*)dataAtIndex:(NSUInteger)index;
- (MoreBytesBuilder *)addData:(NSData*)value;
- (MoreBytesBuilder *)setDataArray:(NSArray *)array;
- (MoreBytesBuilder *)clearData;
@end

@interface Int32Message : PBGeneratedMessage {
@private
  BOOL hasData_:1;
  SInt32 data;
}
- (BOOL) hasData;
@property (readonly) SInt32 data;

+ (Int32Message*) defaultInstance;
- (Int32Message*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (Int32MessageBuilder*) builder;
+ (Int32MessageBuilder*) builder;
+ (Int32MessageBuilder*) builderWithPrototype:(Int32Message*) prototype;
- (Int32MessageBuilder*) toBuilder;

+ (Int32Message*) parseFromData:(NSData*) data;
+ (Int32Message*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (Int32Message*) parseFromInputStream:(NSInputStream*) input;
+ (Int32Message*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (Int32Message*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (Int32Message*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface Int32MessageBuilder : PBGeneratedMessageBuilder {
@private
  Int32Message* result;
}

- (Int32Message*) defaultInstance;

- (Int32MessageBuilder*) clear;
- (Int32MessageBuilder*) clone;

- (Int32Message*) build;
- (Int32Message*) buildPartial;

- (Int32MessageBuilder*) mergeFrom:(Int32Message*) other;
- (Int32MessageBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (Int32MessageBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasData;
- (SInt32) data;
- (Int32MessageBuilder*) setData:(SInt32) value;
- (Int32MessageBuilder*) clearData;
@end

@interface Uint32Message : PBGeneratedMessage {
@private
  BOOL hasData_:1;
  UInt32 data;
}
- (BOOL) hasData;
@property (readonly) UInt32 data;

+ (Uint32Message*) defaultInstance;
- (Uint32Message*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (Uint32MessageBuilder*) builder;
+ (Uint32MessageBuilder*) builder;
+ (Uint32MessageBuilder*) builderWithPrototype:(Uint32Message*) prototype;
- (Uint32MessageBuilder*) toBuilder;

+ (Uint32Message*) parseFromData:(NSData*) data;
+ (Uint32Message*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (Uint32Message*) parseFromInputStream:(NSInputStream*) input;
+ (Uint32Message*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (Uint32Message*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (Uint32Message*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface Uint32MessageBuilder : PBGeneratedMessageBuilder {
@private
  Uint32Message* result;
}

- (Uint32Message*) defaultInstance;

- (Uint32MessageBuilder*) clear;
- (Uint32MessageBuilder*) clone;

- (Uint32Message*) build;
- (Uint32Message*) buildPartial;

- (Uint32MessageBuilder*) mergeFrom:(Uint32Message*) other;
- (Uint32MessageBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (Uint32MessageBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasData;
- (UInt32) data;
- (Uint32MessageBuilder*) setData:(UInt32) value;
- (Uint32MessageBuilder*) clearData;
@end

@interface Int64Message : PBGeneratedMessage {
@private
  BOOL hasData_:1;
  SInt64 data;
}
- (BOOL) hasData;
@property (readonly) SInt64 data;

+ (Int64Message*) defaultInstance;
- (Int64Message*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (Int64MessageBuilder*) builder;
+ (Int64MessageBuilder*) builder;
+ (Int64MessageBuilder*) builderWithPrototype:(Int64Message*) prototype;
- (Int64MessageBuilder*) toBuilder;

+ (Int64Message*) parseFromData:(NSData*) data;
+ (Int64Message*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (Int64Message*) parseFromInputStream:(NSInputStream*) input;
+ (Int64Message*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (Int64Message*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (Int64Message*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface Int64MessageBuilder : PBGeneratedMessageBuilder {
@private
  Int64Message* result;
}

- (Int64Message*) defaultInstance;

- (Int64MessageBuilder*) clear;
- (Int64MessageBuilder*) clone;

- (Int64Message*) build;
- (Int64Message*) buildPartial;

- (Int64MessageBuilder*) mergeFrom:(Int64Message*) other;
- (Int64MessageBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (Int64MessageBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasData;
- (SInt64) data;
- (Int64MessageBuilder*) setData:(SInt64) value;
- (Int64MessageBuilder*) clearData;
@end

@interface Uint64Message : PBGeneratedMessage {
@private
  BOOL hasData_:1;
  UInt64 data;
}
- (BOOL) hasData;
@property (readonly) UInt64 data;

+ (Uint64Message*) defaultInstance;
- (Uint64Message*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (Uint64MessageBuilder*) builder;
+ (Uint64MessageBuilder*) builder;
+ (Uint64MessageBuilder*) builderWithPrototype:(Uint64Message*) prototype;
- (Uint64MessageBuilder*) toBuilder;

+ (Uint64Message*) parseFromData:(NSData*) data;
+ (Uint64Message*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (Uint64Message*) parseFromInputStream:(NSInputStream*) input;
+ (Uint64Message*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (Uint64Message*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (Uint64Message*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface Uint64MessageBuilder : PBGeneratedMessageBuilder {
@private
  Uint64Message* result;
}

- (Uint64Message*) defaultInstance;

- (Uint64MessageBuilder*) clear;
- (Uint64MessageBuilder*) clone;

- (Uint64Message*) build;
- (Uint64Message*) buildPartial;

- (Uint64MessageBuilder*) mergeFrom:(Uint64Message*) other;
- (Uint64MessageBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (Uint64MessageBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasData;
- (UInt64) data;
- (Uint64MessageBuilder*) setData:(UInt64) value;
- (Uint64MessageBuilder*) clearData;
@end

@interface BoolMessage : PBGeneratedMessage {
@private
  BOOL hasData_:1;
  BOOL data_:1;
}
- (BOOL) hasData;
- (BOOL) data;

+ (BoolMessage*) defaultInstance;
- (BoolMessage*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (BoolMessageBuilder*) builder;
+ (BoolMessageBuilder*) builder;
+ (BoolMessageBuilder*) builderWithPrototype:(BoolMessage*) prototype;
- (BoolMessageBuilder*) toBuilder;

+ (BoolMessage*) parseFromData:(NSData*) data;
+ (BoolMessage*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (BoolMessage*) parseFromInputStream:(NSInputStream*) input;
+ (BoolMessage*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (BoolMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (BoolMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface BoolMessageBuilder : PBGeneratedMessageBuilder {
@private
  BoolMessage* result;
}

- (BoolMessage*) defaultInstance;

- (BoolMessageBuilder*) clear;
- (BoolMessageBuilder*) clone;

- (BoolMessage*) build;
- (BoolMessage*) buildPartial;

- (BoolMessageBuilder*) mergeFrom:(BoolMessage*) other;
- (BoolMessageBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (BoolMessageBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasData;
- (BOOL) data;
- (BoolMessageBuilder*) setData:(BOOL) value;
- (BoolMessageBuilder*) clearData;
@end

@interface TestOneof : PBGeneratedMessage {
@private
  BOOL hasFooInt_:1;
  BOOL hasFooString_:1;
  BOOL hasFooGroup_:1;
  BOOL hasFooMessage_:1;
  SInt32 fooInt;
  NSString* fooString;
  TestOneofFooGroup* fooGroup;
  TestAllTypes* fooMessage;
}
- (BOOL) hasFooInt;
- (BOOL) hasFooString;
- (BOOL) hasFooMessage;
- (BOOL) hasFooGroup;
@property (readonly) SInt32 fooInt;
@property (readonly, strong) NSString* fooString;
@property (readonly, strong) TestAllTypes* fooMessage;
@property (readonly, strong) TestOneofFooGroup* fooGroup;

+ (TestOneof*) defaultInstance;
- (TestOneof*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (TestOneofBuilder*) builder;
+ (TestOneofBuilder*) builder;
+ (TestOneofBuilder*) builderWithPrototype:(TestOneof*) prototype;
- (TestOneofBuilder*) toBuilder;

+ (TestOneof*) parseFromData:(NSData*) data;
+ (TestOneof*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TestOneof*) parseFromInputStream:(NSInputStream*) input;
+ (TestOneof*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TestOneof*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (TestOneof*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface TestOneofFooGroup : PBGeneratedMessage {
@private
  BOOL hasA_:1;
  BOOL hasB_:1;
  SInt32 a;
  NSString* b;
}
- (BOOL) hasA;
- (BOOL) hasB;
@property (readonly) SInt32 a;
@property (readonly, strong) NSString* b;

+ (TestOneofFooGroup*) defaultInstance;
- (TestOneofFooGroup*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (TestOneofFooGroupBuilder*) builder;
+ (TestOneofFooGroupBuilder*) builder;
+ (TestOneofFooGroupBuilder*) builderWithPrototype:(TestOneofFooGroup*) prototype;
- (TestOneofFooGroupBuilder*) toBuilder;

+ (TestOneofFooGroup*) parseFromData:(NSData*) data;
+ (TestOneofFooGroup*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TestOneofFooGroup*) parseFromInputStream:(NSInputStream*) input;
+ (TestOneofFooGroup*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TestOneofFooGroup*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (TestOneofFooGroup*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface TestOneofFooGroupBuilder : PBGeneratedMessageBuilder {
@private
  TestOneofFooGroup* result;
}

- (TestOneofFooGroup*) defaultInstance;

- (TestOneofFooGroupBuilder*) clear;
- (TestOneofFooGroupBuilder*) clone;

- (TestOneofFooGroup*) build;
- (TestOneofFooGroup*) buildPartial;

- (TestOneofFooGroupBuilder*) mergeFrom:(TestOneofFooGroup*) other;
- (TestOneofFooGroupBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (TestOneofFooGroupBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasA;
- (SInt32) a;
- (TestOneofFooGroupBuilder*) setA:(SInt32) value;
- (TestOneofFooGroupBuilder*) clearA;

- (BOOL) hasB;
- (NSString*) b;
- (TestOneofFooGroupBuilder*) setB:(NSString*) value;
- (TestOneofFooGroupBuilder*) clearB;
@end

@interface TestOneofBuilder : PBGeneratedMessageBuilder {
@private
  TestOneof* result;
}

- (TestOneof*) defaultInstance;

- (TestOneofBuilder*) clear;
- (TestOneofBuilder*) clone;

- (TestOneof*) build;
- (TestOneof*) buildPartial;

- (TestOneofBuilder*) mergeFrom:(TestOneof*) other;
- (TestOneofBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (TestOneofBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasFooInt;
- (SInt32) fooInt;
- (TestOneofBuilder*) setFooInt:(SInt32) value;
- (TestOneofBuilder*) clearFooInt;

- (BOOL) hasFooString;
- (NSString*) fooString;
- (TestOneofBuilder*) setFooString:(NSString*) value;
- (TestOneofBuilder*) clearFooString;

- (BOOL) hasFooMessage;
- (TestAllTypes*) fooMessage;
- (TestOneofBuilder*) setFooMessage:(TestAllTypes*) value;
- (TestOneofBuilder*) setFooMessageBuilder:(TestAllTypesBuilder*) builderForValue;
- (TestOneofBuilder*) mergeFooMessage:(TestAllTypes*) value;
- (TestOneofBuilder*) clearFooMessage;

- (BOOL) hasFooGroup;
- (TestOneofFooGroup*) fooGroup;
- (TestOneofBuilder*) setFooGroup:(TestOneofFooGroup*) value;
- (TestOneofBuilder*) setFooGroupBuilder:(TestOneofFooGroupBuilder*) builderForValue;
- (TestOneofBuilder*) mergeFooGroup:(TestOneofFooGroup*) value;
- (TestOneofBuilder*) clearFooGroup;
@end

@interface TestOneofBackwardsCompatible : PBGeneratedMessage {
@private
  BOOL hasFooInt_:1;
  BOOL hasFooString_:1;
  BOOL hasFooGroup_:1;
  BOOL hasFooMessage_:1;
  SInt32 fooInt;
  NSString* fooString;
  TestOneofBackwardsCompatibleFooGroup* fooGroup;
  TestAllTypes* fooMessage;
}
- (BOOL) hasFooInt;
- (BOOL) hasFooString;
- (BOOL) hasFooMessage;
- (BOOL) hasFooGroup;
@property (readonly) SInt32 fooInt;
@property (readonly, strong) NSString* fooString;
@property (readonly, strong) TestAllTypes* fooMessage;
@property (readonly, strong) TestOneofBackwardsCompatibleFooGroup* fooGroup;

+ (TestOneofBackwardsCompatible*) defaultInstance;
- (TestOneofBackwardsCompatible*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (TestOneofBackwardsCompatibleBuilder*) builder;
+ (TestOneofBackwardsCompatibleBuilder*) builder;
+ (TestOneofBackwardsCompatibleBuilder*) builderWithPrototype:(TestOneofBackwardsCompatible*) prototype;
- (TestOneofBackwardsCompatibleBuilder*) toBuilder;

+ (TestOneofBackwardsCompatible*) parseFromData:(NSData*) data;
+ (TestOneofBackwardsCompatible*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TestOneofBackwardsCompatible*) parseFromInputStream:(NSInputStream*) input;
+ (TestOneofBackwardsCompatible*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TestOneofBackwardsCompatible*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (TestOneofBackwardsCompatible*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface TestOneofBackwardsCompatibleFooGroup : PBGeneratedMessage {
@private
  BOOL hasA_:1;
  BOOL hasB_:1;
  SInt32 a;
  NSString* b;
}
- (BOOL) hasA;
- (BOOL) hasB;
@property (readonly) SInt32 a;
@property (readonly, strong) NSString* b;

+ (TestOneofBackwardsCompatibleFooGroup*) defaultInstance;
- (TestOneofBackwardsCompatibleFooGroup*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (TestOneofBackwardsCompatibleFooGroupBuilder*) builder;
+ (TestOneofBackwardsCompatibleFooGroupBuilder*) builder;
+ (TestOneofBackwardsCompatibleFooGroupBuilder*) builderWithPrototype:(TestOneofBackwardsCompatibleFooGroup*) prototype;
- (TestOneofBackwardsCompatibleFooGroupBuilder*) toBuilder;

+ (TestOneofBackwardsCompatibleFooGroup*) parseFromData:(NSData*) data;
+ (TestOneofBackwardsCompatibleFooGroup*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TestOneofBackwardsCompatibleFooGroup*) parseFromInputStream:(NSInputStream*) input;
+ (TestOneofBackwardsCompatibleFooGroup*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TestOneofBackwardsCompatibleFooGroup*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (TestOneofBackwardsCompatibleFooGroup*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface TestOneofBackwardsCompatibleFooGroupBuilder : PBGeneratedMessageBuilder {
@private
  TestOneofBackwardsCompatibleFooGroup* result;
}

- (TestOneofBackwardsCompatibleFooGroup*) defaultInstance;

- (TestOneofBackwardsCompatibleFooGroupBuilder*) clear;
- (TestOneofBackwardsCompatibleFooGroupBuilder*) clone;

- (TestOneofBackwardsCompatibleFooGroup*) build;
- (TestOneofBackwardsCompatibleFooGroup*) buildPartial;

- (TestOneofBackwardsCompatibleFooGroupBuilder*) mergeFrom:(TestOneofBackwardsCompatibleFooGroup*) other;
- (TestOneofBackwardsCompatibleFooGroupBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (TestOneofBackwardsCompatibleFooGroupBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasA;
- (SInt32) a;
- (TestOneofBackwardsCompatibleFooGroupBuilder*) setA:(SInt32) value;
- (TestOneofBackwardsCompatibleFooGroupBuilder*) clearA;

- (BOOL) hasB;
- (NSString*) b;
- (TestOneofBackwardsCompatibleFooGroupBuilder*) setB:(NSString*) value;
- (TestOneofBackwardsCompatibleFooGroupBuilder*) clearB;
@end

@interface TestOneofBackwardsCompatibleBuilder : PBGeneratedMessageBuilder {
@private
  TestOneofBackwardsCompatible* result;
}

- (TestOneofBackwardsCompatible*) defaultInstance;

- (TestOneofBackwardsCompatibleBuilder*) clear;
- (TestOneofBackwardsCompatibleBuilder*) clone;

- (TestOneofBackwardsCompatible*) build;
- (TestOneofBackwardsCompatible*) buildPartial;

- (TestOneofBackwardsCompatibleBuilder*) mergeFrom:(TestOneofBackwardsCompatible*) other;
- (TestOneofBackwardsCompatibleBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (TestOneofBackwardsCompatibleBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasFooInt;
- (SInt32) fooInt;
- (TestOneofBackwardsCompatibleBuilder*) setFooInt:(SInt32) value;
- (TestOneofBackwardsCompatibleBuilder*) clearFooInt;

- (BOOL) hasFooString;
- (NSString*) fooString;
- (TestOneofBackwardsCompatibleBuilder*) setFooString:(NSString*) value;
- (TestOneofBackwardsCompatibleBuilder*) clearFooString;

- (BOOL) hasFooMessage;
- (TestAllTypes*) fooMessage;
- (TestOneofBackwardsCompatibleBuilder*) setFooMessage:(TestAllTypes*) value;
- (TestOneofBackwardsCompatibleBuilder*) setFooMessageBuilder:(TestAllTypesBuilder*) builderForValue;
- (TestOneofBackwardsCompatibleBuilder*) mergeFooMessage:(TestAllTypes*) value;
- (TestOneofBackwardsCompatibleBuilder*) clearFooMessage;

- (BOOL) hasFooGroup;
- (TestOneofBackwardsCompatibleFooGroup*) fooGroup;
- (TestOneofBackwardsCompatibleBuilder*) setFooGroup:(TestOneofBackwardsCompatibleFooGroup*) value;
- (TestOneofBackwardsCompatibleBuilder*) setFooGroupBuilder:(TestOneofBackwardsCompatibleFooGroupBuilder*) builderForValue;
- (TestOneofBackwardsCompatibleBuilder*) mergeFooGroup:(TestOneofBackwardsCompatibleFooGroup*) value;
- (TestOneofBackwardsCompatibleBuilder*) clearFooGroup;
@end

@interface TestOneof2 : PBGeneratedMessage {
@private
  BOOL hasFooInt_:1;
  BOOL hasBarInt_:1;
  BOOL hasBazInt_:1;
  BOOL hasFooString_:1;
  BOOL hasFooCord_:1;
  BOOL hasFooStringPiece_:1;
  BOOL hasBarString_:1;
  BOOL hasBarCord_:1;
  BOOL hasBarStringPiece_:1;
  BOOL hasBazString_:1;
  BOOL hasFooGroup_:1;
  BOOL hasFooMessage_:1;
  BOOL hasFooLazyMessage_:1;
  BOOL hasFooBytes_:1;
  BOOL hasBarBytes_:1;
  BOOL hasFooEnum_:1;
  BOOL hasBarEnum_:1;
  SInt32 fooInt;
  SInt32 barInt;
  SInt32 bazInt;
  NSString* fooString;
  NSString* fooCord;
  NSString* fooStringPiece;
  NSString* barString;
  NSString* barCord;
  NSString* barStringPiece;
  NSString* bazString;
  TestOneof2FooGroup* fooGroup;
  TestOneof2NestedMessage* fooMessage;
  TestOneof2NestedMessage* fooLazyMessage;
  NSData* fooBytes;
  NSData* barBytes;
  TestOneof2NestedEnum fooEnum;
  TestOneof2NestedEnum barEnum;
}
- (BOOL) hasFooInt;
- (BOOL) hasFooString;
- (BOOL) hasFooCord;
- (BOOL) hasFooStringPiece;
- (BOOL) hasFooBytes;
- (BOOL) hasFooEnum;
- (BOOL) hasFooMessage;
- (BOOL) hasFooGroup;
- (BOOL) hasFooLazyMessage;
- (BOOL) hasBarInt;
- (BOOL) hasBarString;
- (BOOL) hasBarCord;
- (BOOL) hasBarStringPiece;
- (BOOL) hasBarBytes;
- (BOOL) hasBarEnum;
- (BOOL) hasBazInt;
- (BOOL) hasBazString;
@property (readonly) SInt32 fooInt;
@property (readonly, strong) NSString* fooString;
@property (readonly, strong) NSString* fooCord;
@property (readonly, strong) NSString* fooStringPiece;
@property (readonly, strong) NSData* fooBytes;
@property (readonly) TestOneof2NestedEnum fooEnum;
@property (readonly, strong) TestOneof2NestedMessage* fooMessage;
@property (readonly, strong) TestOneof2FooGroup* fooGroup;
@property (readonly, strong) TestOneof2NestedMessage* fooLazyMessage;
@property (readonly) SInt32 barInt;
@property (readonly, strong) NSString* barString;
@property (readonly, strong) NSString* barCord;
@property (readonly, strong) NSString* barStringPiece;
@property (readonly, strong) NSData* barBytes;
@property (readonly) TestOneof2NestedEnum barEnum;
@property (readonly) SInt32 bazInt;
@property (readonly, strong) NSString* bazString;

+ (TestOneof2*) defaultInstance;
- (TestOneof2*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (TestOneof2Builder*) builder;
+ (TestOneof2Builder*) builder;
+ (TestOneof2Builder*) builderWithPrototype:(TestOneof2*) prototype;
- (TestOneof2Builder*) toBuilder;

+ (TestOneof2*) parseFromData:(NSData*) data;
+ (TestOneof2*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TestOneof2*) parseFromInputStream:(NSInputStream*) input;
+ (TestOneof2*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TestOneof2*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (TestOneof2*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface TestOneof2FooGroup : PBGeneratedMessage {
@private
  BOOL hasA_:1;
  BOOL hasB_:1;
  SInt32 a;
  NSString* b;
}
- (BOOL) hasA;
- (BOOL) hasB;
@property (readonly) SInt32 a;
@property (readonly, strong) NSString* b;

+ (TestOneof2FooGroup*) defaultInstance;
- (TestOneof2FooGroup*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (TestOneof2FooGroupBuilder*) builder;
+ (TestOneof2FooGroupBuilder*) builder;
+ (TestOneof2FooGroupBuilder*) builderWithPrototype:(TestOneof2FooGroup*) prototype;
- (TestOneof2FooGroupBuilder*) toBuilder;

+ (TestOneof2FooGroup*) parseFromData:(NSData*) data;
+ (TestOneof2FooGroup*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TestOneof2FooGroup*) parseFromInputStream:(NSInputStream*) input;
+ (TestOneof2FooGroup*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TestOneof2FooGroup*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (TestOneof2FooGroup*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface TestOneof2FooGroupBuilder : PBGeneratedMessageBuilder {
@private
  TestOneof2FooGroup* result;
}

- (TestOneof2FooGroup*) defaultInstance;

- (TestOneof2FooGroupBuilder*) clear;
- (TestOneof2FooGroupBuilder*) clone;

- (TestOneof2FooGroup*) build;
- (TestOneof2FooGroup*) buildPartial;

- (TestOneof2FooGroupBuilder*) mergeFrom:(TestOneof2FooGroup*) other;
- (TestOneof2FooGroupBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (TestOneof2FooGroupBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasA;
- (SInt32) a;
- (TestOneof2FooGroupBuilder*) setA:(SInt32) value;
- (TestOneof2FooGroupBuilder*) clearA;

- (BOOL) hasB;
- (NSString*) b;
- (TestOneof2FooGroupBuilder*) setB:(NSString*) value;
- (TestOneof2FooGroupBuilder*) clearB;
@end

@interface TestOneof2NestedMessage : PBGeneratedMessage {
@private
  BOOL hasQuxInt_:1;
  SInt64 quxInt;
  PBAppendableArray * corgeIntArray;
}
- (BOOL) hasQuxInt;
@property (readonly) SInt64 quxInt;
@property (readonly, strong) PBArray * corgeInt;
- (SInt32)corgeIntAtIndex:(NSUInteger)index;

+ (TestOneof2NestedMessage*) defaultInstance;
- (TestOneof2NestedMessage*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (TestOneof2NestedMessageBuilder*) builder;
+ (TestOneof2NestedMessageBuilder*) builder;
+ (TestOneof2NestedMessageBuilder*) builderWithPrototype:(TestOneof2NestedMessage*) prototype;
- (TestOneof2NestedMessageBuilder*) toBuilder;

+ (TestOneof2NestedMessage*) parseFromData:(NSData*) data;
+ (TestOneof2NestedMessage*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TestOneof2NestedMessage*) parseFromInputStream:(NSInputStream*) input;
+ (TestOneof2NestedMessage*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TestOneof2NestedMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (TestOneof2NestedMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface TestOneof2NestedMessageBuilder : PBGeneratedMessageBuilder {
@private
  TestOneof2NestedMessage* result;
}

- (TestOneof2NestedMessage*) defaultInstance;

- (TestOneof2NestedMessageBuilder*) clear;
- (TestOneof2NestedMessageBuilder*) clone;

- (TestOneof2NestedMessage*) build;
- (TestOneof2NestedMessage*) buildPartial;

- (TestOneof2NestedMessageBuilder*) mergeFrom:(TestOneof2NestedMessage*) other;
- (TestOneof2NestedMessageBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (TestOneof2NestedMessageBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasQuxInt;
- (SInt64) quxInt;
- (TestOneof2NestedMessageBuilder*) setQuxInt:(SInt64) value;
- (TestOneof2NestedMessageBuilder*) clearQuxInt;

- (PBAppendableArray *)corgeInt;
- (SInt32)corgeIntAtIndex:(NSUInteger)index;
- (TestOneof2NestedMessageBuilder *)addCorgeInt:(SInt32)value;
- (TestOneof2NestedMessageBuilder *)setCorgeIntArray:(NSArray *)array;
- (TestOneof2NestedMessageBuilder *)setCorgeIntValues:(const SInt32 *)values count:(NSUInteger)count;
- (TestOneof2NestedMessageBuilder *)clearCorgeInt;
@end

@interface TestOneof2Builder : PBGeneratedMessageBuilder {
@private
  TestOneof2* result;
}

- (TestOneof2*) defaultInstance;

- (TestOneof2Builder*) clear;
- (TestOneof2Builder*) clone;

- (TestOneof2*) build;
- (TestOneof2*) buildPartial;

- (TestOneof2Builder*) mergeFrom:(TestOneof2*) other;
- (TestOneof2Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (TestOneof2Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasFooInt;
- (SInt32) fooInt;
- (TestOneof2Builder*) setFooInt:(SInt32) value;
- (TestOneof2Builder*) clearFooInt;

- (BOOL) hasFooString;
- (NSString*) fooString;
- (TestOneof2Builder*) setFooString:(NSString*) value;
- (TestOneof2Builder*) clearFooString;

- (BOOL) hasFooCord;
- (NSString*) fooCord;
- (TestOneof2Builder*) setFooCord:(NSString*) value;
- (TestOneof2Builder*) clearFooCord;

- (BOOL) hasFooStringPiece;
- (NSString*) fooStringPiece;
- (TestOneof2Builder*) setFooStringPiece:(NSString*) value;
- (TestOneof2Builder*) clearFooStringPiece;

- (BOOL) hasFooBytes;
- (NSData*) fooBytes;
- (TestOneof2Builder*) setFooBytes:(NSData*) value;
- (TestOneof2Builder*) clearFooBytes;

- (BOOL) hasFooEnum;
- (TestOneof2NestedEnum) fooEnum;
- (TestOneof2Builder*) setFooEnum:(TestOneof2NestedEnum) value;
- (TestOneof2Builder*) clearFooEnum;

- (BOOL) hasFooMessage;
- (TestOneof2NestedMessage*) fooMessage;
- (TestOneof2Builder*) setFooMessage:(TestOneof2NestedMessage*) value;
- (TestOneof2Builder*) setFooMessageBuilder:(TestOneof2NestedMessageBuilder*) builderForValue;
- (TestOneof2Builder*) mergeFooMessage:(TestOneof2NestedMessage*) value;
- (TestOneof2Builder*) clearFooMessage;

- (BOOL) hasFooGroup;
- (TestOneof2FooGroup*) fooGroup;
- (TestOneof2Builder*) setFooGroup:(TestOneof2FooGroup*) value;
- (TestOneof2Builder*) setFooGroupBuilder:(TestOneof2FooGroupBuilder*) builderForValue;
- (TestOneof2Builder*) mergeFooGroup:(TestOneof2FooGroup*) value;
- (TestOneof2Builder*) clearFooGroup;

- (BOOL) hasFooLazyMessage;
- (TestOneof2NestedMessage*) fooLazyMessage;
- (TestOneof2Builder*) setFooLazyMessage:(TestOneof2NestedMessage*) value;
- (TestOneof2Builder*) setFooLazyMessageBuilder:(TestOneof2NestedMessageBuilder*) builderForValue;
- (TestOneof2Builder*) mergeFooLazyMessage:(TestOneof2NestedMessage*) value;
- (TestOneof2Builder*) clearFooLazyMessage;

- (BOOL) hasBarInt;
- (SInt32) barInt;
- (TestOneof2Builder*) setBarInt:(SInt32) value;
- (TestOneof2Builder*) clearBarInt;

- (BOOL) hasBarString;
- (NSString*) barString;
- (TestOneof2Builder*) setBarString:(NSString*) value;
- (TestOneof2Builder*) clearBarString;

- (BOOL) hasBarCord;
- (NSString*) barCord;
- (TestOneof2Builder*) setBarCord:(NSString*) value;
- (TestOneof2Builder*) clearBarCord;

- (BOOL) hasBarStringPiece;
- (NSString*) barStringPiece;
- (TestOneof2Builder*) setBarStringPiece:(NSString*) value;
- (TestOneof2Builder*) clearBarStringPiece;

- (BOOL) hasBarBytes;
- (NSData*) barBytes;
- (TestOneof2Builder*) setBarBytes:(NSData*) value;
- (TestOneof2Builder*) clearBarBytes;

- (BOOL) hasBarEnum;
- (TestOneof2NestedEnum) barEnum;
- (TestOneof2Builder*) setBarEnum:(TestOneof2NestedEnum) value;
- (TestOneof2Builder*) clearBarEnum;

- (BOOL) hasBazInt;
- (SInt32) bazInt;
- (TestOneof2Builder*) setBazInt:(SInt32) value;
- (TestOneof2Builder*) clearBazInt;

- (BOOL) hasBazString;
- (NSString*) bazString;
- (TestOneof2Builder*) setBazString:(NSString*) value;
- (TestOneof2Builder*) clearBazString;
@end

@interface TestRequiredOneof : PBGeneratedMessage {
@private
  BOOL hasFooInt_:1;
  BOOL hasFooString_:1;
  BOOL hasFooMessage_:1;
  SInt32 fooInt;
  NSString* fooString;
  TestRequiredOneofNestedMessage* fooMessage;
}
- (BOOL) hasFooInt;
- (BOOL) hasFooString;
- (BOOL) hasFooMessage;
@property (readonly) SInt32 fooInt;
@property (readonly, strong) NSString* fooString;
@property (readonly, strong) TestRequiredOneofNestedMessage* fooMessage;

+ (TestRequiredOneof*) defaultInstance;
- (TestRequiredOneof*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (TestRequiredOneofBuilder*) builder;
+ (TestRequiredOneofBuilder*) builder;
+ (TestRequiredOneofBuilder*) builderWithPrototype:(TestRequiredOneof*) prototype;
- (TestRequiredOneofBuilder*) toBuilder;

+ (TestRequiredOneof*) parseFromData:(NSData*) data;
+ (TestRequiredOneof*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TestRequiredOneof*) parseFromInputStream:(NSInputStream*) input;
+ (TestRequiredOneof*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TestRequiredOneof*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (TestRequiredOneof*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface TestRequiredOneofNestedMessage : PBGeneratedMessage {
@private
  BOOL hasRequiredDouble_:1;
  Float64 requiredDouble;
}
- (BOOL) hasRequiredDouble;
@property (readonly) Float64 requiredDouble;

+ (TestRequiredOneofNestedMessage*) defaultInstance;
- (TestRequiredOneofNestedMessage*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (TestRequiredOneofNestedMessageBuilder*) builder;
+ (TestRequiredOneofNestedMessageBuilder*) builder;
+ (TestRequiredOneofNestedMessageBuilder*) builderWithPrototype:(TestRequiredOneofNestedMessage*) prototype;
- (TestRequiredOneofNestedMessageBuilder*) toBuilder;

+ (TestRequiredOneofNestedMessage*) parseFromData:(NSData*) data;
+ (TestRequiredOneofNestedMessage*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TestRequiredOneofNestedMessage*) parseFromInputStream:(NSInputStream*) input;
+ (TestRequiredOneofNestedMessage*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TestRequiredOneofNestedMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (TestRequiredOneofNestedMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface TestRequiredOneofNestedMessageBuilder : PBGeneratedMessageBuilder {
@private
  TestRequiredOneofNestedMessage* result;
}

- (TestRequiredOneofNestedMessage*) defaultInstance;

- (TestRequiredOneofNestedMessageBuilder*) clear;
- (TestRequiredOneofNestedMessageBuilder*) clone;

- (TestRequiredOneofNestedMessage*) build;
- (TestRequiredOneofNestedMessage*) buildPartial;

- (TestRequiredOneofNestedMessageBuilder*) mergeFrom:(TestRequiredOneofNestedMessage*) other;
- (TestRequiredOneofNestedMessageBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (TestRequiredOneofNestedMessageBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasRequiredDouble;
- (Float64) requiredDouble;
- (TestRequiredOneofNestedMessageBuilder*) setRequiredDouble:(Float64) value;
- (TestRequiredOneofNestedMessageBuilder*) clearRequiredDouble;
@end

@interface TestRequiredOneofBuilder : PBGeneratedMessageBuilder {
@private
  TestRequiredOneof* result;
}

- (TestRequiredOneof*) defaultInstance;

- (TestRequiredOneofBuilder*) clear;
- (TestRequiredOneofBuilder*) clone;

- (TestRequiredOneof*) build;
- (TestRequiredOneof*) buildPartial;

- (TestRequiredOneofBuilder*) mergeFrom:(TestRequiredOneof*) other;
- (TestRequiredOneofBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (TestRequiredOneofBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasFooInt;
- (SInt32) fooInt;
- (TestRequiredOneofBuilder*) setFooInt:(SInt32) value;
- (TestRequiredOneofBuilder*) clearFooInt;

- (BOOL) hasFooString;
- (NSString*) fooString;
- (TestRequiredOneofBuilder*) setFooString:(NSString*) value;
- (TestRequiredOneofBuilder*) clearFooString;

- (BOOL) hasFooMessage;
- (TestRequiredOneofNestedMessage*) fooMessage;
- (TestRequiredOneofBuilder*) setFooMessage:(TestRequiredOneofNestedMessage*) value;
- (TestRequiredOneofBuilder*) setFooMessageBuilder:(TestRequiredOneofNestedMessageBuilder*) builderForValue;
- (TestRequiredOneofBuilder*) mergeFooMessage:(TestRequiredOneofNestedMessage*) value;
- (TestRequiredOneofBuilder*) clearFooMessage;
@end

@interface TestPackedTypes : PBGeneratedMessage {
@private
  PBAppendableArray * packedBoolArray;
  SInt32 packedBoolMemoizedSerializedSize;
  PBAppendableArray * packedDoubleArray;
  SInt32 packedDoubleMemoizedSerializedSize;
  PBAppendableArray * packedFloatArray;
  SInt32 packedFloatMemoizedSerializedSize;
  PBAppendableArray * packedInt64Array;
  SInt32 packedInt64MemoizedSerializedSize;
  PBAppendableArray * packedUint64Array;
  SInt32 packedUint64MemoizedSerializedSize;
  PBAppendableArray * packedInt32Array;
  SInt32 packedInt32MemoizedSerializedSize;
  PBAppendableArray * packedFixed64Array;
  SInt32 packedFixed64MemoizedSerializedSize;
  PBAppendableArray * packedFixed32Array;
  SInt32 packedFixed32MemoizedSerializedSize;
  PBAppendableArray * packedUint32Array;
  SInt32 packedUint32MemoizedSerializedSize;
  PBAppendableArray * packedEnumArray;
  SInt32 packedEnumMemoizedSerializedSize;
  PBAppendableArray * packedSfixed32Array;
  SInt32 packedSfixed32MemoizedSerializedSize;
  PBAppendableArray * packedSfixed64Array;
  SInt32 packedSfixed64MemoizedSerializedSize;
  PBAppendableArray * packedSint32Array;
  SInt32 packedSint32MemoizedSerializedSize;
  PBAppendableArray * packedSint64Array;
  SInt32 packedSint64MemoizedSerializedSize;
}
@property (readonly, strong) PBArray * packedInt32;
@property (readonly, strong) PBArray * packedInt64;
@property (readonly, strong) PBArray * packedUint32;
@property (readonly, strong) PBArray * packedUint64;
@property (readonly, strong) PBArray * packedSint32;
@property (readonly, strong) PBArray * packedSint64;
@property (readonly, strong) PBArray * packedFixed32;
@property (readonly, strong) PBArray * packedFixed64;
@property (readonly, strong) PBArray * packedSfixed32;
@property (readonly, strong) PBArray * packedSfixed64;
@property (readonly, strong) PBArray * packedFloat;
@property (readonly, strong) PBArray * packedDouble;
@property (readonly, strong) PBArray * packedBool;
@property (readonly, strong) PBArray * packedEnum;
- (SInt32)packedInt32AtIndex:(NSUInteger)index;
- (SInt64)packedInt64AtIndex:(NSUInteger)index;
- (UInt32)packedUint32AtIndex:(NSUInteger)index;
- (UInt64)packedUint64AtIndex:(NSUInteger)index;
- (SInt32)packedSint32AtIndex:(NSUInteger)index;
- (SInt64)packedSint64AtIndex:(NSUInteger)index;
- (UInt32)packedFixed32AtIndex:(NSUInteger)index;
- (UInt64)packedFixed64AtIndex:(NSUInteger)index;
- (SInt32)packedSfixed32AtIndex:(NSUInteger)index;
- (SInt64)packedSfixed64AtIndex:(NSUInteger)index;
- (Float32)packedFloatAtIndex:(NSUInteger)index;
- (Float64)packedDoubleAtIndex:(NSUInteger)index;
- (BOOL)packedBoolAtIndex:(NSUInteger)index;
- (ForeignEnum)packedEnumAtIndex:(NSUInteger)index;

+ (TestPackedTypes*) defaultInstance;
- (TestPackedTypes*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (TestPackedTypesBuilder*) builder;
+ (TestPackedTypesBuilder*) builder;
+ (TestPackedTypesBuilder*) builderWithPrototype:(TestPackedTypes*) prototype;
- (TestPackedTypesBuilder*) toBuilder;

+ (TestPackedTypes*) parseFromData:(NSData*) data;
+ (TestPackedTypes*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TestPackedTypes*) parseFromInputStream:(NSInputStream*) input;
+ (TestPackedTypes*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TestPackedTypes*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (TestPackedTypes*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface TestPackedTypesBuilder : PBGeneratedMessageBuilder {
@private
  TestPackedTypes* result;
}

- (TestPackedTypes*) defaultInstance;

- (TestPackedTypesBuilder*) clear;
- (TestPackedTypesBuilder*) clone;

- (TestPackedTypes*) build;
- (TestPackedTypes*) buildPartial;

- (TestPackedTypesBuilder*) mergeFrom:(TestPackedTypes*) other;
- (TestPackedTypesBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (TestPackedTypesBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (PBAppendableArray *)packedInt32;
- (SInt32)packedInt32AtIndex:(NSUInteger)index;
- (TestPackedTypesBuilder *)addPackedInt32:(SInt32)value;
- (TestPackedTypesBuilder *)setPackedInt32Array:(NSArray *)array;
- (TestPackedTypesBuilder *)setPackedInt32Values:(const SInt32 *)values count:(NSUInteger)count;
- (TestPackedTypesBuilder *)clearPackedInt32;

- (PBAppendableArray *)packedInt64;
- (SInt64)packedInt64AtIndex:(NSUInteger)index;
- (TestPackedTypesBuilder *)addPackedInt64:(SInt64)value;
- (TestPackedTypesBuilder *)setPackedInt64Array:(NSArray *)array;
- (TestPackedTypesBuilder *)setPackedInt64Values:(const SInt64 *)values count:(NSUInteger)count;
- (TestPackedTypesBuilder *)clearPackedInt64;

- (PBAppendableArray *)packedUint32;
- (UInt32)packedUint32AtIndex:(NSUInteger)index;
- (TestPackedTypesBuilder *)addPackedUint32:(UInt32)value;
- (TestPackedTypesBuilder *)setPackedUint32Array:(NSArray *)array;
- (TestPackedTypesBuilder *)setPackedUint32Values:(const UInt32 *)values count:(NSUInteger)count;
- (TestPackedTypesBuilder *)clearPackedUint32;

- (PBAppendableArray *)packedUint64;
- (UInt64)packedUint64AtIndex:(NSUInteger)index;
- (TestPackedTypesBuilder *)addPackedUint64:(UInt64)value;
- (TestPackedTypesBuilder *)setPackedUint64Array:(NSArray *)array;
- (TestPackedTypesBuilder *)setPackedUint64Values:(const UInt64 *)values count:(NSUInteger)count;
- (TestPackedTypesBuilder *)clearPackedUint64;

- (PBAppendableArray *)packedSint32;
- (SInt32)packedSint32AtIndex:(NSUInteger)index;
- (TestPackedTypesBuilder *)addPackedSint32:(SInt32)value;
- (TestPackedTypesBuilder *)setPackedSint32Array:(NSArray *)array;
- (TestPackedTypesBuilder *)setPackedSint32Values:(const SInt32 *)values count:(NSUInteger)count;
- (TestPackedTypesBuilder *)clearPackedSint32;

- (PBAppendableArray *)packedSint64;
- (SInt64)packedSint64AtIndex:(NSUInteger)index;
- (TestPackedTypesBuilder *)addPackedSint64:(SInt64)value;
- (TestPackedTypesBuilder *)setPackedSint64Array:(NSArray *)array;
- (TestPackedTypesBuilder *)setPackedSint64Values:(const SInt64 *)values count:(NSUInteger)count;
- (TestPackedTypesBuilder *)clearPackedSint64;

- (PBAppendableArray *)packedFixed32;
- (UInt32)packedFixed32AtIndex:(NSUInteger)index;
- (TestPackedTypesBuilder *)addPackedFixed32:(UInt32)value;
- (TestPackedTypesBuilder *)setPackedFixed32Array:(NSArray *)array;
- (TestPackedTypesBuilder *)setPackedFixed32Values:(const UInt32 *)values count:(NSUInteger)count;
- (TestPackedTypesBuilder *)clearPackedFixed32;

- (PBAppendableArray *)packedFixed64;
- (UInt64)packedFixed64AtIndex:(NSUInteger)index;
- (TestPackedTypesBuilder *)addPackedFixed64:(UInt64)value;
- (TestPackedTypesBuilder *)setPackedFixed64Array:(NSArray *)array;
- (TestPackedTypesBuilder *)setPackedFixed64Values:(const UInt64 *)values count:(NSUInteger)count;
- (TestPackedTypesBuilder *)clearPackedFixed64;

- (PBAppendableArray *)packedSfixed32;
- (SInt32)packedSfixed32AtIndex:(NSUInteger)index;
- (TestPackedTypesBuilder *)addPackedSfixed32:(SInt32)value;
- (TestPackedTypesBuilder *)setPackedSfixed32Array:(NSArray *)array;
- (TestPackedTypesBuilder *)setPackedSfixed32Values:(const SInt32 *)values count:(NSUInteger)count;
- (TestPackedTypesBuilder *)clearPackedSfixed32;

- (PBAppendableArray *)packedSfixed64;
- (SInt64)packedSfixed64AtIndex:(NSUInteger)index;
- (TestPackedTypesBuilder *)addPackedSfixed64:(SInt64)value;
- (TestPackedTypesBuilder *)setPackedSfixed64Array:(NSArray *)array;
- (TestPackedTypesBuilder *)setPackedSfixed64Values:(const SInt64 *)values count:(NSUInteger)count;
- (TestPackedTypesBuilder *)clearPackedSfixed64;

- (PBAppendableArray *)packedFloat;
- (Float32)packedFloatAtIndex:(NSUInteger)index;
- (TestPackedTypesBuilder *)addPackedFloat:(Float32)value;
- (TestPackedTypesBuilder *)setPackedFloatArray:(NSArray *)array;
- (TestPackedTypesBuilder *)setPackedFloatValues:(const Float32 *)values count:(NSUInteger)count;
- (TestPackedTypesBuilder *)clearPackedFloat;

- (PBAppendableArray *)packedDouble;
- (Float64)packedDoubleAtIndex:(NSUInteger)index;
- (TestPackedTypesBuilder *)addPackedDouble:(Float64)value;
- (TestPackedTypesBuilder *)setPackedDoubleArray:(NSArray *)array;
- (TestPackedTypesBuilder *)setPackedDoubleValues:(const Float64 *)values count:(NSUInteger)count;
- (TestPackedTypesBuilder *)clearPackedDouble;

- (PBAppendableArray *)packedBool;
- (BOOL)packedBoolAtIndex:(NSUInteger)index;
- (TestPackedTypesBuilder *)addPackedBool:(BOOL)value;
- (TestPackedTypesBuilder *)setPackedBoolArray:(NSArray *)array;
- (TestPackedTypesBuilder *)setPackedBoolValues:(const BOOL *)values count:(NSUInteger)count;
- (TestPackedTypesBuilder *)clearPackedBool;

- (PBAppendableArray *)packedEnum;
- (ForeignEnum)packedEnumAtIndex:(NSUInteger)index;
- (TestPackedTypesBuilder *)addPackedEnum:(ForeignEnum)value;
- (TestPackedTypesBuilder *)setPackedEnumArray:(NSArray *)array;
- (TestPackedTypesBuilder *)setPackedEnumValues:(const ForeignEnum *)values count:(NSUInteger)count;
- (TestPackedTypesBuilder *)clearPackedEnum;
@end

@interface TestUnpackedTypes : PBGeneratedMessage {
@private
  PBAppendableArray * unpackedBoolArray;
  PBAppendableArray * unpackedDoubleArray;
  PBAppendableArray * unpackedFloatArray;
  PBAppendableArray * unpackedInt64Array;
  PBAppendableArray * unpackedUint64Array;
  PBAppendableArray * unpackedInt32Array;
  PBAppendableArray * unpackedFixed64Array;
  PBAppendableArray * unpackedFixed32Array;
  PBAppendableArray * unpackedUint32Array;
  PBAppendableArray * unpackedEnumArray;
  PBAppendableArray * unpackedSfixed32Array;
  PBAppendableArray * unpackedSfixed64Array;
  PBAppendableArray * unpackedSint32Array;
  PBAppendableArray * unpackedSint64Array;
}
@property (readonly, strong) PBArray * unpackedInt32;
@property (readonly, strong) PBArray * unpackedInt64;
@property (readonly, strong) PBArray * unpackedUint32;
@property (readonly, strong) PBArray * unpackedUint64;
@property (readonly, strong) PBArray * unpackedSint32;
@property (readonly, strong) PBArray * unpackedSint64;
@property (readonly, strong) PBArray * unpackedFixed32;
@property (readonly, strong) PBArray * unpackedFixed64;
@property (readonly, strong) PBArray * unpackedSfixed32;
@property (readonly, strong) PBArray * unpackedSfixed64;
@property (readonly, strong) PBArray * unpackedFloat;
@property (readonly, strong) PBArray * unpackedDouble;
@property (readonly, strong) PBArray * unpackedBool;
@property (readonly, strong) PBArray * unpackedEnum;
- (SInt32)unpackedInt32AtIndex:(NSUInteger)index;
- (SInt64)unpackedInt64AtIndex:(NSUInteger)index;
- (UInt32)unpackedUint32AtIndex:(NSUInteger)index;
- (UInt64)unpackedUint64AtIndex:(NSUInteger)index;
- (SInt32)unpackedSint32AtIndex:(NSUInteger)index;
- (SInt64)unpackedSint64AtIndex:(NSUInteger)index;
- (UInt32)unpackedFixed32AtIndex:(NSUInteger)index;
- (UInt64)unpackedFixed64AtIndex:(NSUInteger)index;
- (SInt32)unpackedSfixed32AtIndex:(NSUInteger)index;
- (SInt64)unpackedSfixed64AtIndex:(NSUInteger)index;
- (Float32)unpackedFloatAtIndex:(NSUInteger)index;
- (Float64)unpackedDoubleAtIndex:(NSUInteger)index;
- (BOOL)unpackedBoolAtIndex:(NSUInteger)index;
- (ForeignEnum)unpackedEnumAtIndex:(NSUInteger)index;

+ (TestUnpackedTypes*) defaultInstance;
- (TestUnpackedTypes*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (TestUnpackedTypesBuilder*) builder;
+ (TestUnpackedTypesBuilder*) builder;
+ (TestUnpackedTypesBuilder*) builderWithPrototype:(TestUnpackedTypes*) prototype;
- (TestUnpackedTypesBuilder*) toBuilder;

+ (TestUnpackedTypes*) parseFromData:(NSData*) data;
+ (TestUnpackedTypes*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TestUnpackedTypes*) parseFromInputStream:(NSInputStream*) input;
+ (TestUnpackedTypes*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TestUnpackedTypes*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (TestUnpackedTypes*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface TestUnpackedTypesBuilder : PBGeneratedMessageBuilder {
@private
  TestUnpackedTypes* result;
}

- (TestUnpackedTypes*) defaultInstance;

- (TestUnpackedTypesBuilder*) clear;
- (TestUnpackedTypesBuilder*) clone;

- (TestUnpackedTypes*) build;
- (TestUnpackedTypes*) buildPartial;

- (TestUnpackedTypesBuilder*) mergeFrom:(TestUnpackedTypes*) other;
- (TestUnpackedTypesBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (TestUnpackedTypesBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (PBAppendableArray *)unpackedInt32;
- (SInt32)unpackedInt32AtIndex:(NSUInteger)index;
- (TestUnpackedTypesBuilder *)addUnpackedInt32:(SInt32)value;
- (TestUnpackedTypesBuilder *)setUnpackedInt32Array:(NSArray *)array;
- (TestUnpackedTypesBuilder *)setUnpackedInt32Values:(const SInt32 *)values count:(NSUInteger)count;
- (TestUnpackedTypesBuilder *)clearUnpackedInt32;

- (PBAppendableArray *)unpackedInt64;
- (SInt64)unpackedInt64AtIndex:(NSUInteger)index;
- (TestUnpackedTypesBuilder *)addUnpackedInt64:(SInt64)value;
- (TestUnpackedTypesBuilder *)setUnpackedInt64Array:(NSArray *)array;
- (TestUnpackedTypesBuilder *)setUnpackedInt64Values:(const SInt64 *)values count:(NSUInteger)count;
- (TestUnpackedTypesBuilder *)clearUnpackedInt64;

- (PBAppendableArray *)unpackedUint32;
- (UInt32)unpackedUint32AtIndex:(NSUInteger)index;
- (TestUnpackedTypesBuilder *)addUnpackedUint32:(UInt32)value;
- (TestUnpackedTypesBuilder *)setUnpackedUint32Array:(NSArray *)array;
- (TestUnpackedTypesBuilder *)setUnpackedUint32Values:(const UInt32 *)values count:(NSUInteger)count;
- (TestUnpackedTypesBuilder *)clearUnpackedUint32;

- (PBAppendableArray *)unpackedUint64;
- (UInt64)unpackedUint64AtIndex:(NSUInteger)index;
- (TestUnpackedTypesBuilder *)addUnpackedUint64:(UInt64)value;
- (TestUnpackedTypesBuilder *)setUnpackedUint64Array:(NSArray *)array;
- (TestUnpackedTypesBuilder *)setUnpackedUint64Values:(const UInt64 *)values count:(NSUInteger)count;
- (TestUnpackedTypesBuilder *)clearUnpackedUint64;

- (PBAppendableArray *)unpackedSint32;
- (SInt32)unpackedSint32AtIndex:(NSUInteger)index;
- (TestUnpackedTypesBuilder *)addUnpackedSint32:(SInt32)value;
- (TestUnpackedTypesBuilder *)setUnpackedSint32Array:(NSArray *)array;
- (TestUnpackedTypesBuilder *)setUnpackedSint32Values:(const SInt32 *)values count:(NSUInteger)count;
- (TestUnpackedTypesBuilder *)clearUnpackedSint32;

- (PBAppendableArray *)unpackedSint64;
- (SInt64)unpackedSint64AtIndex:(NSUInteger)index;
- (TestUnpackedTypesBuilder *)addUnpackedSint64:(SInt64)value;
- (TestUnpackedTypesBuilder *)setUnpackedSint64Array:(NSArray *)array;
- (TestUnpackedTypesBuilder *)setUnpackedSint64Values:(const SInt64 *)values count:(NSUInteger)count;
- (TestUnpackedTypesBuilder *)clearUnpackedSint64;

- (PBAppendableArray *)unpackedFixed32;
- (UInt32)unpackedFixed32AtIndex:(NSUInteger)index;
- (TestUnpackedTypesBuilder *)addUnpackedFixed32:(UInt32)value;
- (TestUnpackedTypesBuilder *)setUnpackedFixed32Array:(NSArray *)array;
- (TestUnpackedTypesBuilder *)setUnpackedFixed32Values:(const UInt32 *)values count:(NSUInteger)count;
- (TestUnpackedTypesBuilder *)clearUnpackedFixed32;

- (PBAppendableArray *)unpackedFixed64;
- (UInt64)unpackedFixed64AtIndex:(NSUInteger)index;
- (TestUnpackedTypesBuilder *)addUnpackedFixed64:(UInt64)value;
- (TestUnpackedTypesBuilder *)setUnpackedFixed64Array:(NSArray *)array;
- (TestUnpackedTypesBuilder *)setUnpackedFixed64Values:(const UInt64 *)values count:(NSUInteger)count;
- (TestUnpackedTypesBuilder *)clearUnpackedFixed64;

- (PBAppendableArray *)unpackedSfixed32;
- (SInt32)unpackedSfixed32AtIndex:(NSUInteger)index;
- (TestUnpackedTypesBuilder *)addUnpackedSfixed32:(SInt32)value;
- (TestUnpackedTypesBuilder *)setUnpackedSfixed32Array:(NSArray *)array;
- (TestUnpackedTypesBuilder *)setUnpackedSfixed32Values:(const SInt32 *)values count:(NSUInteger)count;
- (TestUnpackedTypesBuilder *)clearUnpackedSfixed32;

- (PBAppendableArray *)unpackedSfixed64;
- (SInt64)unpackedSfixed64AtIndex:(NSUInteger)index;
- (TestUnpackedTypesBuilder *)addUnpackedSfixed64:(SInt64)value;
- (TestUnpackedTypesBuilder *)setUnpackedSfixed64Array:(NSArray *)array;
- (TestUnpackedTypesBuilder *)setUnpackedSfixed64Values:(const SInt64 *)values count:(NSUInteger)count;
- (TestUnpackedTypesBuilder *)clearUnpackedSfixed64;

- (PBAppendableArray *)unpackedFloat;
- (Float32)unpackedFloatAtIndex:(NSUInteger)index;
- (TestUnpackedTypesBuilder *)addUnpackedFloat:(Float32)value;
- (TestUnpackedTypesBuilder *)setUnpackedFloatArray:(NSArray *)array;
- (TestUnpackedTypesBuilder *)setUnpackedFloatValues:(const Float32 *)values count:(NSUInteger)count;
- (TestUnpackedTypesBuilder *)clearUnpackedFloat;

- (PBAppendableArray *)unpackedDouble;
- (Float64)unpackedDoubleAtIndex:(NSUInteger)index;
- (TestUnpackedTypesBuilder *)addUnpackedDouble:(Float64)value;
- (TestUnpackedTypesBuilder *)setUnpackedDoubleArray:(NSArray *)array;
- (TestUnpackedTypesBuilder *)setUnpackedDoubleValues:(const Float64 *)values count:(NSUInteger)count;
- (TestUnpackedTypesBuilder *)clearUnpackedDouble;

- (PBAppendableArray *)unpackedBool;
- (BOOL)unpackedBoolAtIndex:(NSUInteger)index;
- (TestUnpackedTypesBuilder *)addUnpackedBool:(BOOL)value;
- (TestUnpackedTypesBuilder *)setUnpackedBoolArray:(NSArray *)array;
- (TestUnpackedTypesBuilder *)setUnpackedBoolValues:(const BOOL *)values count:(NSUInteger)count;
- (TestUnpackedTypesBuilder *)clearUnpackedBool;

- (PBAppendableArray *)unpackedEnum;
- (ForeignEnum)unpackedEnumAtIndex:(NSUInteger)index;
- (TestUnpackedTypesBuilder *)addUnpackedEnum:(ForeignEnum)value;
- (TestUnpackedTypesBuilder *)setUnpackedEnumArray:(NSArray *)array;
- (TestUnpackedTypesBuilder *)setUnpackedEnumValues:(const ForeignEnum *)values count:(NSUInteger)count;
- (TestUnpackedTypesBuilder *)clearUnpackedEnum;
@end

@interface TestPackedExtensions : PBExtendableMessage {
@private
}

+ (TestPackedExtensions*) defaultInstance;
- (TestPackedExtensions*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (TestPackedExtensionsBuilder*) builder;
+ (TestPackedExtensionsBuilder*) builder;
+ (TestPackedExtensionsBuilder*) builderWithPrototype:(TestPackedExtensions*) prototype;
- (TestPackedExtensionsBuilder*) toBuilder;

+ (TestPackedExtensions*) parseFromData:(NSData*) data;
+ (TestPackedExtensions*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TestPackedExtensions*) parseFromInputStream:(NSInputStream*) input;
+ (TestPackedExtensions*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TestPackedExtensions*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (TestPackedExtensions*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface TestPackedExtensionsBuilder : PBExtendableMessageBuilder {
@private
  TestPackedExtensions* result;
}

- (TestPackedExtensions*) defaultInstance;

- (TestPackedExtensionsBuilder*) clear;
- (TestPackedExtensionsBuilder*) clone;

- (TestPackedExtensions*) build;
- (TestPackedExtensions*) buildPartial;

- (TestPackedExtensionsBuilder*) mergeFrom:(TestPackedExtensions*) other;
- (TestPackedExtensionsBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (TestPackedExtensionsBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface TestUnpackedExtensions : PBExtendableMessage {
@private
}

+ (TestUnpackedExtensions*) defaultInstance;
- (TestUnpackedExtensions*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (TestUnpackedExtensionsBuilder*) builder;
+ (TestUnpackedExtensionsBuilder*) builder;
+ (TestUnpackedExtensionsBuilder*) builderWithPrototype:(TestUnpackedExtensions*) prototype;
- (TestUnpackedExtensionsBuilder*) toBuilder;

+ (TestUnpackedExtensions*) parseFromData:(NSData*) data;
+ (TestUnpackedExtensions*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TestUnpackedExtensions*) parseFromInputStream:(NSInputStream*) input;
+ (TestUnpackedExtensions*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TestUnpackedExtensions*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (TestUnpackedExtensions*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface TestUnpackedExtensionsBuilder : PBExtendableMessageBuilder {
@private
  TestUnpackedExtensions* result;
}

- (TestUnpackedExtensions*) defaultInstance;

- (TestUnpackedExtensionsBuilder*) clear;
- (TestUnpackedExtensionsBuilder*) clone;

- (TestUnpackedExtensions*) build;
- (TestUnpackedExtensions*) buildPartial;

- (TestUnpackedExtensionsBuilder*) mergeFrom:(TestUnpackedExtensions*) other;
- (TestUnpackedExtensionsBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (TestUnpackedExtensionsBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface TestDynamicExtensions : PBGeneratedMessage {
@private
  BOOL hasScalarExtension_:1;
  BOOL hasMessageExtension_:1;
  BOOL hasDynamicMessageExtension_:1;
  BOOL hasEnumExtension_:1;
  BOOL hasDynamicEnumExtension_:1;
  UInt32 scalarExtension;
  ForeignMessage* messageExtension;
  TestDynamicExtensionsDynamicMessageType* dynamicMessageExtension;
  ForeignEnum enumExtension;
  TestDynamicExtensionsDynamicEnumType dynamicEnumExtension;
  NSMutableArray * repeatedExtensionArray;
  PBAppendableArray * packedExtensionArray;
  SInt32 packedExtensionMemoizedSerializedSize;
}
- (BOOL) hasScalarExtension;
- (BOOL) hasEnumExtension;
- (BOOL) hasDynamicEnumExtension;
- (BOOL) hasMessageExtension;
- (BOOL) hasDynamicMessageExtension;
@property (readonly) UInt32 scalarExtension;
@property (readonly) ForeignEnum enumExtension;
@property (readonly) TestDynamicExtensionsDynamicEnumType dynamicEnumExtension;
@property (readonly, strong) ForeignMessage* messageExtension;
@property (readonly, strong) TestDynamicExtensionsDynamicMessageType* dynamicMessageExtension;
@property (readonly, strong) PBArray * repeatedExtension;
@property (readonly, strong) PBArray * packedExtension;
- (NSString*)repeatedExtensionAtIndex:(NSUInteger)index;
- (SInt32)packedExtensionAtIndex:(NSUInteger)index;

+ (TestDynamicExtensions*) defaultInstance;
- (TestDynamicExtensions*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (TestDynamicExtensionsBuilder*) builder;
+ (TestDynamicExtensionsBuilder*) builder;
+ (TestDynamicExtensionsBuilder*) builderWithPrototype:(TestDynamicExtensions*) prototype;
- (TestDynamicExtensionsBuilder*) toBuilder;

+ (TestDynamicExtensions*) parseFromData:(NSData*) data;
+ (TestDynamicExtensions*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TestDynamicExtensions*) parseFromInputStream:(NSInputStream*) input;
+ (TestDynamicExtensions*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TestDynamicExtensions*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (TestDynamicExtensions*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface TestDynamicExtensionsDynamicMessageType : PBGeneratedMessage {
@private
  BOOL hasDynamicField_:1;
  SInt32 dynamicField;
}
- (BOOL) hasDynamicField;
@property (readonly) SInt32 dynamicField;

+ (TestDynamicExtensionsDynamicMessageType*) defaultInstance;
- (TestDynamicExtensionsDynamicMessageType*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (TestDynamicExtensionsDynamicMessageTypeBuilder*) builder;
+ (TestDynamicExtensionsDynamicMessageTypeBuilder*) builder;
+ (TestDynamicExtensionsDynamicMessageTypeBuilder*) builderWithPrototype:(TestDynamicExtensionsDynamicMessageType*) prototype;
- (TestDynamicExtensionsDynamicMessageTypeBuilder*) toBuilder;

+ (TestDynamicExtensionsDynamicMessageType*) parseFromData:(NSData*) data;
+ (TestDynamicExtensionsDynamicMessageType*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TestDynamicExtensionsDynamicMessageType*) parseFromInputStream:(NSInputStream*) input;
+ (TestDynamicExtensionsDynamicMessageType*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TestDynamicExtensionsDynamicMessageType*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (TestDynamicExtensionsDynamicMessageType*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface TestDynamicExtensionsDynamicMessageTypeBuilder : PBGeneratedMessageBuilder {
@private
  TestDynamicExtensionsDynamicMessageType* result;
}

- (TestDynamicExtensionsDynamicMessageType*) defaultInstance;

- (TestDynamicExtensionsDynamicMessageTypeBuilder*) clear;
- (TestDynamicExtensionsDynamicMessageTypeBuilder*) clone;

- (TestDynamicExtensionsDynamicMessageType*) build;
- (TestDynamicExtensionsDynamicMessageType*) buildPartial;

- (TestDynamicExtensionsDynamicMessageTypeBuilder*) mergeFrom:(TestDynamicExtensionsDynamicMessageType*) other;
- (TestDynamicExtensionsDynamicMessageTypeBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (TestDynamicExtensionsDynamicMessageTypeBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasDynamicField;
- (SInt32) dynamicField;
- (TestDynamicExtensionsDynamicMessageTypeBuilder*) setDynamicField:(SInt32) value;
- (TestDynamicExtensionsDynamicMessageTypeBuilder*) clearDynamicField;
@end

@interface TestDynamicExtensionsBuilder : PBGeneratedMessageBuilder {
@private
  TestDynamicExtensions* result;
}

- (TestDynamicExtensions*) defaultInstance;

- (TestDynamicExtensionsBuilder*) clear;
- (TestDynamicExtensionsBuilder*) clone;

- (TestDynamicExtensions*) build;
- (TestDynamicExtensions*) buildPartial;

- (TestDynamicExtensionsBuilder*) mergeFrom:(TestDynamicExtensions*) other;
- (TestDynamicExtensionsBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (TestDynamicExtensionsBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasScalarExtension;
- (UInt32) scalarExtension;
- (TestDynamicExtensionsBuilder*) setScalarExtension:(UInt32) value;
- (TestDynamicExtensionsBuilder*) clearScalarExtension;

- (BOOL) hasEnumExtension;
- (ForeignEnum) enumExtension;
- (TestDynamicExtensionsBuilder*) setEnumExtension:(ForeignEnum) value;
- (TestDynamicExtensionsBuilder*) clearEnumExtension;

- (BOOL) hasDynamicEnumExtension;
- (TestDynamicExtensionsDynamicEnumType) dynamicEnumExtension;
- (TestDynamicExtensionsBuilder*) setDynamicEnumExtension:(TestDynamicExtensionsDynamicEnumType) value;
- (TestDynamicExtensionsBuilder*) clearDynamicEnumExtension;

- (BOOL) hasMessageExtension;
- (ForeignMessage*) messageExtension;
- (TestDynamicExtensionsBuilder*) setMessageExtension:(ForeignMessage*) value;
- (TestDynamicExtensionsBuilder*) setMessageExtensionBuilder:(ForeignMessageBuilder*) builderForValue;
- (TestDynamicExtensionsBuilder*) mergeMessageExtension:(ForeignMessage*) value;
- (TestDynamicExtensionsBuilder*) clearMessageExtension;

- (BOOL) hasDynamicMessageExtension;
- (TestDynamicExtensionsDynamicMessageType*) dynamicMessageExtension;
- (TestDynamicExtensionsBuilder*) setDynamicMessageExtension:(TestDynamicExtensionsDynamicMessageType*) value;
- (TestDynamicExtensionsBuilder*) setDynamicMessageExtensionBuilder:(TestDynamicExtensionsDynamicMessageTypeBuilder*) builderForValue;
- (TestDynamicExtensionsBuilder*) mergeDynamicMessageExtension:(TestDynamicExtensionsDynamicMessageType*) value;
- (TestDynamicExtensionsBuilder*) clearDynamicMessageExtension;

- (NSMutableArray *)repeatedExtension;
- (NSString*)repeatedExtensionAtIndex:(NSUInteger)index;
- (TestDynamicExtensionsBuilder *)addRepeatedExtension:(NSString*)value;
- (TestDynamicExtensionsBuilder *)setRepeatedExtensionArray:(NSArray *)array;
- (TestDynamicExtensionsBuilder *)clearRepeatedExtension;

- (PBAppendableArray *)packedExtension;
- (SInt32)packedExtensionAtIndex:(NSUInteger)index;
- (TestDynamicExtensionsBuilder *)addPackedExtension:(SInt32)value;
- (TestDynamicExtensionsBuilder *)setPackedExtensionArray:(NSArray *)array;
- (TestDynamicExtensionsBuilder *)setPackedExtensionValues:(const SInt32 *)values count:(NSUInteger)count;
- (TestDynamicExtensionsBuilder *)clearPackedExtension;
@end

@interface TestRepeatedScalarDifferentTagSizes : PBGeneratedMessage {
@private
  PBAppendableArray * repeatedFloatArray;
  PBAppendableArray * repeatedInt64Array;
  PBAppendableArray * repeatedUint64Array;
  PBAppendableArray * repeatedInt32Array;
  PBAppendableArray * repeatedFixed64Array;
  PBAppendableArray * repeatedFixed32Array;
}
@property (readonly, strong) PBArray * repeatedFixed32;
@property (readonly, strong) PBArray * repeatedInt32;
@property (readonly, strong) PBArray * repeatedFixed64;
@property (readonly, strong) PBArray * repeatedInt64;
@property (readonly, strong) PBArray * repeatedFloat;
@property (readonly, strong) PBArray * repeatedUint64;
- (UInt32)repeatedFixed32AtIndex:(NSUInteger)index;
- (SInt32)repeatedInt32AtIndex:(NSUInteger)index;
- (UInt64)repeatedFixed64AtIndex:(NSUInteger)index;
- (SInt64)repeatedInt64AtIndex:(NSUInteger)index;
- (Float32)repeatedFloatAtIndex:(NSUInteger)index;
- (UInt64)repeatedUint64AtIndex:(NSUInteger)index;

+ (TestRepeatedScalarDifferentTagSizes*) defaultInstance;
- (TestRepeatedScalarDifferentTagSizes*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (TestRepeatedScalarDifferentTagSizesBuilder*) builder;
+ (TestRepeatedScalarDifferentTagSizesBuilder*) builder;
+ (TestRepeatedScalarDifferentTagSizesBuilder*) builderWithPrototype:(TestRepeatedScalarDifferentTagSizes*) prototype;
- (TestRepeatedScalarDifferentTagSizesBuilder*) toBuilder;

+ (TestRepeatedScalarDifferentTagSizes*) parseFromData:(NSData*) data;
+ (TestRepeatedScalarDifferentTagSizes*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TestRepeatedScalarDifferentTagSizes*) parseFromInputStream:(NSInputStream*) input;
+ (TestRepeatedScalarDifferentTagSizes*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TestRepeatedScalarDifferentTagSizes*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (TestRepeatedScalarDifferentTagSizes*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface TestRepeatedScalarDifferentTagSizesBuilder : PBGeneratedMessageBuilder {
@private
  TestRepeatedScalarDifferentTagSizes* result;
}

- (TestRepeatedScalarDifferentTagSizes*) defaultInstance;

- (TestRepeatedScalarDifferentTagSizesBuilder*) clear;
- (TestRepeatedScalarDifferentTagSizesBuilder*) clone;

- (TestRepeatedScalarDifferentTagSizes*) build;
- (TestRepeatedScalarDifferentTagSizes*) buildPartial;

- (TestRepeatedScalarDifferentTagSizesBuilder*) mergeFrom:(TestRepeatedScalarDifferentTagSizes*) other;
- (TestRepeatedScalarDifferentTagSizesBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (TestRepeatedScalarDifferentTagSizesBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (PBAppendableArray *)repeatedFixed32;
- (UInt32)repeatedFixed32AtIndex:(NSUInteger)index;
- (TestRepeatedScalarDifferentTagSizesBuilder *)addRepeatedFixed32:(UInt32)value;
- (TestRepeatedScalarDifferentTagSizesBuilder *)setRepeatedFixed32Array:(NSArray *)array;
- (TestRepeatedScalarDifferentTagSizesBuilder *)setRepeatedFixed32Values:(const UInt32 *)values count:(NSUInteger)count;
- (TestRepeatedScalarDifferentTagSizesBuilder *)clearRepeatedFixed32;

- (PBAppendableArray *)repeatedInt32;
- (SInt32)repeatedInt32AtIndex:(NSUInteger)index;
- (TestRepeatedScalarDifferentTagSizesBuilder *)addRepeatedInt32:(SInt32)value;
- (TestRepeatedScalarDifferentTagSizesBuilder *)setRepeatedInt32Array:(NSArray *)array;
- (TestRepeatedScalarDifferentTagSizesBuilder *)setRepeatedInt32Values:(const SInt32 *)values count:(NSUInteger)count;
- (TestRepeatedScalarDifferentTagSizesBuilder *)clearRepeatedInt32;

- (PBAppendableArray *)repeatedFixed64;
- (UInt64)repeatedFixed64AtIndex:(NSUInteger)index;
- (TestRepeatedScalarDifferentTagSizesBuilder *)addRepeatedFixed64:(UInt64)value;
- (TestRepeatedScalarDifferentTagSizesBuilder *)setRepeatedFixed64Array:(NSArray *)array;
- (TestRepeatedScalarDifferentTagSizesBuilder *)setRepeatedFixed64Values:(const UInt64 *)values count:(NSUInteger)count;
- (TestRepeatedScalarDifferentTagSizesBuilder *)clearRepeatedFixed64;

- (PBAppendableArray *)repeatedInt64;
- (SInt64)repeatedInt64AtIndex:(NSUInteger)index;
- (TestRepeatedScalarDifferentTagSizesBuilder *)addRepeatedInt64:(SInt64)value;
- (TestRepeatedScalarDifferentTagSizesBuilder *)setRepeatedInt64Array:(NSArray *)array;
- (TestRepeatedScalarDifferentTagSizesBuilder *)setRepeatedInt64Values:(const SInt64 *)values count:(NSUInteger)count;
- (TestRepeatedScalarDifferentTagSizesBuilder *)clearRepeatedInt64;

- (PBAppendableArray *)repeatedFloat;
- (Float32)repeatedFloatAtIndex:(NSUInteger)index;
- (TestRepeatedScalarDifferentTagSizesBuilder *)addRepeatedFloat:(Float32)value;
- (TestRepeatedScalarDifferentTagSizesBuilder *)setRepeatedFloatArray:(NSArray *)array;
- (TestRepeatedScalarDifferentTagSizesBuilder *)setRepeatedFloatValues:(const Float32 *)values count:(NSUInteger)count;
- (TestRepeatedScalarDifferentTagSizesBuilder *)clearRepeatedFloat;

- (PBAppendableArray *)repeatedUint64;
- (UInt64)repeatedUint64AtIndex:(NSUInteger)index;
- (TestRepeatedScalarDifferentTagSizesBuilder *)addRepeatedUint64:(UInt64)value;
- (TestRepeatedScalarDifferentTagSizesBuilder *)setRepeatedUint64Array:(NSArray *)array;
- (TestRepeatedScalarDifferentTagSizesBuilder *)setRepeatedUint64Values:(const UInt64 *)values count:(NSUInteger)count;
- (TestRepeatedScalarDifferentTagSizesBuilder *)clearRepeatedUint64;
@end

@interface TestParsingMerge : PBExtendableMessage {
@private
  BOOL hasOptionalGroup_:1;
  BOOL hasRequiredAllTypes_:1;
  BOOL hasOptionalAllTypes_:1;
  TestParsingMergeOptionalGroup* optionalGroup;
  TestAllTypes* requiredAllTypes;
  TestAllTypes* optionalAllTypes;
  NSMutableArray * repeatedGroupArray;
  NSMutableArray * repeatedAllTypesArray;
}
- (BOOL) hasRequiredAllTypes;
- (BOOL) hasOptionalAllTypes;
- (BOOL) hasOptionalGroup;
@property (readonly, strong) TestAllTypes* requiredAllTypes;
@property (readonly, strong) TestAllTypes* optionalAllTypes;
@property (readonly, strong) NSArray * repeatedAllTypes;
@property (readonly, strong) TestParsingMergeOptionalGroup* optionalGroup;
@property (readonly, strong) NSArray * repeatedGroup;
- (TestAllTypes*)repeatedAllTypesAtIndex:(NSUInteger)index;
- (TestParsingMergeRepeatedGroup*)repeatedGroupAtIndex:(NSUInteger)index;

+ (TestParsingMerge*) defaultInstance;
- (TestParsingMerge*) defaultInstance;

+ (id<PBExtensionField>) optionalExt;
+ (id<PBExtensionField>) repeatedExt;
- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (TestParsingMergeBuilder*) builder;
+ (TestParsingMergeBuilder*) builder;
+ (TestParsingMergeBuilder*) builderWithPrototype:(TestParsingMerge*) prototype;
- (TestParsingMergeBuilder*) toBuilder;

+ (TestParsingMerge*) parseFromData:(NSData*) data;
+ (TestParsingMerge*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TestParsingMerge*) parseFromInputStream:(NSInputStream*) input;
+ (TestParsingMerge*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TestParsingMerge*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (TestParsingMerge*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface TestParsingMergeRepeatedFieldsGenerator : PBGeneratedMessage {
@private
  NSMutableArray * group1Array;
  NSMutableArray * group2Array;
  NSMutableArray * field1Array;
  NSMutableArray * field2Array;
  NSMutableArray * field3Array;
  NSMutableArray * ext1Array;
  NSMutableArray * ext2Array;
}
@property (readonly, strong) NSArray * field1;
@property (readonly, strong) NSArray * field2;
@property (readonly, strong) NSArray * field3;
@property (readonly, strong) NSArray * group1;
@property (readonly, strong) NSArray * group2;
@property (readonly, strong) NSArray * ext1;
@property (readonly, strong) NSArray * ext2;
- (TestAllTypes*)field1AtIndex:(NSUInteger)index;
- (TestAllTypes*)field2AtIndex:(NSUInteger)index;
- (TestAllTypes*)field3AtIndex:(NSUInteger)index;
- (TestParsingMergeRepeatedFieldsGeneratorGroup1*)group1AtIndex:(NSUInteger)index;
- (TestParsingMergeRepeatedFieldsGeneratorGroup2*)group2AtIndex:(NSUInteger)index;
- (TestAllTypes*)ext1AtIndex:(NSUInteger)index;
- (TestAllTypes*)ext2AtIndex:(NSUInteger)index;

+ (TestParsingMergeRepeatedFieldsGenerator*) defaultInstance;
- (TestParsingMergeRepeatedFieldsGenerator*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (TestParsingMergeRepeatedFieldsGeneratorBuilder*) builder;
+ (TestParsingMergeRepeatedFieldsGeneratorBuilder*) builder;
+ (TestParsingMergeRepeatedFieldsGeneratorBuilder*) builderWithPrototype:(TestParsingMergeRepeatedFieldsGenerator*) prototype;
- (TestParsingMergeRepeatedFieldsGeneratorBuilder*) toBuilder;

+ (TestParsingMergeRepeatedFieldsGenerator*) parseFromData:(NSData*) data;
+ (TestParsingMergeRepeatedFieldsGenerator*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TestParsingMergeRepeatedFieldsGenerator*) parseFromInputStream:(NSInputStream*) input;
+ (TestParsingMergeRepeatedFieldsGenerator*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TestParsingMergeRepeatedFieldsGenerator*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (TestParsingMergeRepeatedFieldsGenerator*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface TestParsingMergeRepeatedFieldsGeneratorGroup1 : PBGeneratedMessage {
@private
  BOOL hasField1_:1;
  TestAllTypes* field1;
}
- (BOOL) hasField1;
@property (readonly, strong) TestAllTypes* field1;

+ (TestParsingMergeRepeatedFieldsGeneratorGroup1*) defaultInstance;
- (TestParsingMergeRepeatedFieldsGeneratorGroup1*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (TestParsingMergeRepeatedFieldsGeneratorGroup1Builder*) builder;
+ (TestParsingMergeRepeatedFieldsGeneratorGroup1Builder*) builder;
+ (TestParsingMergeRepeatedFieldsGeneratorGroup1Builder*) builderWithPrototype:(TestParsingMergeRepeatedFieldsGeneratorGroup1*) prototype;
- (TestParsingMergeRepeatedFieldsGeneratorGroup1Builder*) toBuilder;

+ (TestParsingMergeRepeatedFieldsGeneratorGroup1*) parseFromData:(NSData*) data;
+ (TestParsingMergeRepeatedFieldsGeneratorGroup1*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TestParsingMergeRepeatedFieldsGeneratorGroup1*) parseFromInputStream:(NSInputStream*) input;
+ (TestParsingMergeRepeatedFieldsGeneratorGroup1*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TestParsingMergeRepeatedFieldsGeneratorGroup1*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (TestParsingMergeRepeatedFieldsGeneratorGroup1*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface TestParsingMergeRepeatedFieldsGeneratorGroup1Builder : PBGeneratedMessageBuilder {
@private
  TestParsingMergeRepeatedFieldsGeneratorGroup1* result;
}

- (TestParsingMergeRepeatedFieldsGeneratorGroup1*) defaultInstance;

- (TestParsingMergeRepeatedFieldsGeneratorGroup1Builder*) clear;
- (TestParsingMergeRepeatedFieldsGeneratorGroup1Builder*) clone;

- (TestParsingMergeRepeatedFieldsGeneratorGroup1*) build;
- (TestParsingMergeRepeatedFieldsGeneratorGroup1*) buildPartial;

- (TestParsingMergeRepeatedFieldsGeneratorGroup1Builder*) mergeFrom:(TestParsingMergeRepeatedFieldsGeneratorGroup1*) other;
- (TestParsingMergeRepeatedFieldsGeneratorGroup1Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (TestParsingMergeRepeatedFieldsGeneratorGroup1Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasField1;
- (TestAllTypes*) field1;
- (TestParsingMergeRepeatedFieldsGeneratorGroup1Builder*) setField1:(TestAllTypes*) value;
- (TestParsingMergeRepeatedFieldsGeneratorGroup1Builder*) setField1Builder:(TestAllTypesBuilder*) builderForValue;
- (TestParsingMergeRepeatedFieldsGeneratorGroup1Builder*) mergeField1:(TestAllTypes*) value;
- (TestParsingMergeRepeatedFieldsGeneratorGroup1Builder*) clearField1;
@end

@interface TestParsingMergeRepeatedFieldsGeneratorGroup2 : PBGeneratedMessage {
@private
  BOOL hasField1_:1;
  TestAllTypes* field1;
}
- (BOOL) hasField1;
@property (readonly, strong) TestAllTypes* field1;

+ (TestParsingMergeRepeatedFieldsGeneratorGroup2*) defaultInstance;
- (TestParsingMergeRepeatedFieldsGeneratorGroup2*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (TestParsingMergeRepeatedFieldsGeneratorGroup2Builder*) builder;
+ (TestParsingMergeRepeatedFieldsGeneratorGroup2Builder*) builder;
+ (TestParsingMergeRepeatedFieldsGeneratorGroup2Builder*) builderWithPrototype:(TestParsingMergeRepeatedFieldsGeneratorGroup2*) prototype;
- (TestParsingMergeRepeatedFieldsGeneratorGroup2Builder*) toBuilder;

+ (TestParsingMergeRepeatedFieldsGeneratorGroup2*) parseFromData:(NSData*) data;
+ (TestParsingMergeRepeatedFieldsGeneratorGroup2*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TestParsingMergeRepeatedFieldsGeneratorGroup2*) parseFromInputStream:(NSInputStream*) input;
+ (TestParsingMergeRepeatedFieldsGeneratorGroup2*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TestParsingMergeRepeatedFieldsGeneratorGroup2*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (TestParsingMergeRepeatedFieldsGeneratorGroup2*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface TestParsingMergeRepeatedFieldsGeneratorGroup2Builder : PBGeneratedMessageBuilder {
@private
  TestParsingMergeRepeatedFieldsGeneratorGroup2* result;
}

- (TestParsingMergeRepeatedFieldsGeneratorGroup2*) defaultInstance;

- (TestParsingMergeRepeatedFieldsGeneratorGroup2Builder*) clear;
- (TestParsingMergeRepeatedFieldsGeneratorGroup2Builder*) clone;

- (TestParsingMergeRepeatedFieldsGeneratorGroup2*) build;
- (TestParsingMergeRepeatedFieldsGeneratorGroup2*) buildPartial;

- (TestParsingMergeRepeatedFieldsGeneratorGroup2Builder*) mergeFrom:(TestParsingMergeRepeatedFieldsGeneratorGroup2*) other;
- (TestParsingMergeRepeatedFieldsGeneratorGroup2Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (TestParsingMergeRepeatedFieldsGeneratorGroup2Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasField1;
- (TestAllTypes*) field1;
- (TestParsingMergeRepeatedFieldsGeneratorGroup2Builder*) setField1:(TestAllTypes*) value;
- (TestParsingMergeRepeatedFieldsGeneratorGroup2Builder*) setField1Builder:(TestAllTypesBuilder*) builderForValue;
- (TestParsingMergeRepeatedFieldsGeneratorGroup2Builder*) mergeField1:(TestAllTypes*) value;
- (TestParsingMergeRepeatedFieldsGeneratorGroup2Builder*) clearField1;
@end

@interface TestParsingMergeRepeatedFieldsGeneratorBuilder : PBGeneratedMessageBuilder {
@private
  TestParsingMergeRepeatedFieldsGenerator* result;
}

- (TestParsingMergeRepeatedFieldsGenerator*) defaultInstance;

- (TestParsingMergeRepeatedFieldsGeneratorBuilder*) clear;
- (TestParsingMergeRepeatedFieldsGeneratorBuilder*) clone;

- (TestParsingMergeRepeatedFieldsGenerator*) build;
- (TestParsingMergeRepeatedFieldsGenerator*) buildPartial;

- (TestParsingMergeRepeatedFieldsGeneratorBuilder*) mergeFrom:(TestParsingMergeRepeatedFieldsGenerator*) other;
- (TestParsingMergeRepeatedFieldsGeneratorBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (TestParsingMergeRepeatedFieldsGeneratorBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (NSMutableArray *)field1;
- (TestAllTypes*)field1AtIndex:(NSUInteger)index;
- (TestParsingMergeRepeatedFieldsGeneratorBuilder *)addField1:(TestAllTypes*)value;
- (TestParsingMergeRepeatedFieldsGeneratorBuilder *)setField1Array:(NSArray *)array;
- (TestParsingMergeRepeatedFieldsGeneratorBuilder *)clearField1;

- (NSMutableArray *)field2;
- (TestAllTypes*)field2AtIndex:(NSUInteger)index;
- (TestParsingMergeRepeatedFieldsGeneratorBuilder *)addField2:(TestAllTypes*)value;
- (TestParsingMergeRepeatedFieldsGeneratorBuilder *)setField2Array:(NSArray *)array;
- (TestParsingMergeRepeatedFieldsGeneratorBuilder *)clearField2;

- (NSMutableArray *)field3;
- (TestAllTypes*)field3AtIndex:(NSUInteger)index;
- (TestParsingMergeRepeatedFieldsGeneratorBuilder *)addField3:(TestAllTypes*)value;
- (TestParsingMergeRepeatedFieldsGeneratorBuilder *)setField3Array:(NSArray *)array;
- (TestParsingMergeRepeatedFieldsGeneratorBuilder *)clearField3;

- (NSMutableArray *)group1;
- (TestParsingMergeRepeatedFieldsGeneratorGroup1*)group1AtIndex:(NSUInteger)index;
- (TestParsingMergeRepeatedFieldsGeneratorBuilder *)addGroup1:(TestParsingMergeRepeatedFieldsGeneratorGroup1*)value;
- (TestParsingMergeRepeatedFieldsGeneratorBuilder *)setGroup1Array:(NSArray *)array;
- (TestParsingMergeRepeatedFieldsGeneratorBuilder *)clearGroup1;

- (NSMutableArray *)group2;
- (TestParsingMergeRepeatedFieldsGeneratorGroup2*)group2AtIndex:(NSUInteger)index;
- (TestParsingMergeRepeatedFieldsGeneratorBuilder *)addGroup2:(TestParsingMergeRepeatedFieldsGeneratorGroup2*)value;
- (TestParsingMergeRepeatedFieldsGeneratorBuilder *)setGroup2Array:(NSArray *)array;
- (TestParsingMergeRepeatedFieldsGeneratorBuilder *)clearGroup2;

- (NSMutableArray *)ext1;
- (TestAllTypes*)ext1AtIndex:(NSUInteger)index;
- (TestParsingMergeRepeatedFieldsGeneratorBuilder *)addExt1:(TestAllTypes*)value;
- (TestParsingMergeRepeatedFieldsGeneratorBuilder *)setExt1Array:(NSArray *)array;
- (TestParsingMergeRepeatedFieldsGeneratorBuilder *)clearExt1;

- (NSMutableArray *)ext2;
- (TestAllTypes*)ext2AtIndex:(NSUInteger)index;
- (TestParsingMergeRepeatedFieldsGeneratorBuilder *)addExt2:(TestAllTypes*)value;
- (TestParsingMergeRepeatedFieldsGeneratorBuilder *)setExt2Array:(NSArray *)array;
- (TestParsingMergeRepeatedFieldsGeneratorBuilder *)clearExt2;
@end

@interface TestParsingMergeOptionalGroup : PBGeneratedMessage {
@private
  BOOL hasOptionalGroupAllTypes_:1;
  TestAllTypes* optionalGroupAllTypes;
}
- (BOOL) hasOptionalGroupAllTypes;
@property (readonly, strong) TestAllTypes* optionalGroupAllTypes;

+ (TestParsingMergeOptionalGroup*) defaultInstance;
- (TestParsingMergeOptionalGroup*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (TestParsingMergeOptionalGroupBuilder*) builder;
+ (TestParsingMergeOptionalGroupBuilder*) builder;
+ (TestParsingMergeOptionalGroupBuilder*) builderWithPrototype:(TestParsingMergeOptionalGroup*) prototype;
- (TestParsingMergeOptionalGroupBuilder*) toBuilder;

+ (TestParsingMergeOptionalGroup*) parseFromData:(NSData*) data;
+ (TestParsingMergeOptionalGroup*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TestParsingMergeOptionalGroup*) parseFromInputStream:(NSInputStream*) input;
+ (TestParsingMergeOptionalGroup*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TestParsingMergeOptionalGroup*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (TestParsingMergeOptionalGroup*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface TestParsingMergeOptionalGroupBuilder : PBGeneratedMessageBuilder {
@private
  TestParsingMergeOptionalGroup* result;
}

- (TestParsingMergeOptionalGroup*) defaultInstance;

- (TestParsingMergeOptionalGroupBuilder*) clear;
- (TestParsingMergeOptionalGroupBuilder*) clone;

- (TestParsingMergeOptionalGroup*) build;
- (TestParsingMergeOptionalGroup*) buildPartial;

- (TestParsingMergeOptionalGroupBuilder*) mergeFrom:(TestParsingMergeOptionalGroup*) other;
- (TestParsingMergeOptionalGroupBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (TestParsingMergeOptionalGroupBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasOptionalGroupAllTypes;
- (TestAllTypes*) optionalGroupAllTypes;
- (TestParsingMergeOptionalGroupBuilder*) setOptionalGroupAllTypes:(TestAllTypes*) value;
- (TestParsingMergeOptionalGroupBuilder*) setOptionalGroupAllTypesBuilder:(TestAllTypesBuilder*) builderForValue;
- (TestParsingMergeOptionalGroupBuilder*) mergeOptionalGroupAllTypes:(TestAllTypes*) value;
- (TestParsingMergeOptionalGroupBuilder*) clearOptionalGroupAllTypes;
@end

@interface TestParsingMergeRepeatedGroup : PBGeneratedMessage {
@private
  BOOL hasRepeatedGroupAllTypes_:1;
  TestAllTypes* repeatedGroupAllTypes;
}
- (BOOL) hasRepeatedGroupAllTypes;
@property (readonly, strong) TestAllTypes* repeatedGroupAllTypes;

+ (TestParsingMergeRepeatedGroup*) defaultInstance;
- (TestParsingMergeRepeatedGroup*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (TestParsingMergeRepeatedGroupBuilder*) builder;
+ (TestParsingMergeRepeatedGroupBuilder*) builder;
+ (TestParsingMergeRepeatedGroupBuilder*) builderWithPrototype:(TestParsingMergeRepeatedGroup*) prototype;
- (TestParsingMergeRepeatedGroupBuilder*) toBuilder;

+ (TestParsingMergeRepeatedGroup*) parseFromData:(NSData*) data;
+ (TestParsingMergeRepeatedGroup*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TestParsingMergeRepeatedGroup*) parseFromInputStream:(NSInputStream*) input;
+ (TestParsingMergeRepeatedGroup*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TestParsingMergeRepeatedGroup*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (TestParsingMergeRepeatedGroup*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface TestParsingMergeRepeatedGroupBuilder : PBGeneratedMessageBuilder {
@private
  TestParsingMergeRepeatedGroup* result;
}

- (TestParsingMergeRepeatedGroup*) defaultInstance;

- (TestParsingMergeRepeatedGroupBuilder*) clear;
- (TestParsingMergeRepeatedGroupBuilder*) clone;

- (TestParsingMergeRepeatedGroup*) build;
- (TestParsingMergeRepeatedGroup*) buildPartial;

- (TestParsingMergeRepeatedGroupBuilder*) mergeFrom:(TestParsingMergeRepeatedGroup*) other;
- (TestParsingMergeRepeatedGroupBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (TestParsingMergeRepeatedGroupBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasRepeatedGroupAllTypes;
- (TestAllTypes*) repeatedGroupAllTypes;
- (TestParsingMergeRepeatedGroupBuilder*) setRepeatedGroupAllTypes:(TestAllTypes*) value;
- (TestParsingMergeRepeatedGroupBuilder*) setRepeatedGroupAllTypesBuilder:(TestAllTypesBuilder*) builderForValue;
- (TestParsingMergeRepeatedGroupBuilder*) mergeRepeatedGroupAllTypes:(TestAllTypes*) value;
- (TestParsingMergeRepeatedGroupBuilder*) clearRepeatedGroupAllTypes;
@end

@interface TestParsingMergeBuilder : PBExtendableMessageBuilder {
@private
  TestParsingMerge* result;
}

- (TestParsingMerge*) defaultInstance;

- (TestParsingMergeBuilder*) clear;
- (TestParsingMergeBuilder*) clone;

- (TestParsingMerge*) build;
- (TestParsingMerge*) buildPartial;

- (TestParsingMergeBuilder*) mergeFrom:(TestParsingMerge*) other;
- (TestParsingMergeBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (TestParsingMergeBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasRequiredAllTypes;
- (TestAllTypes*) requiredAllTypes;
- (TestParsingMergeBuilder*) setRequiredAllTypes:(TestAllTypes*) value;
- (TestParsingMergeBuilder*) setRequiredAllTypesBuilder:(TestAllTypesBuilder*) builderForValue;
- (TestParsingMergeBuilder*) mergeRequiredAllTypes:(TestAllTypes*) value;
- (TestParsingMergeBuilder*) clearRequiredAllTypes;

- (BOOL) hasOptionalAllTypes;
- (TestAllTypes*) optionalAllTypes;
- (TestParsingMergeBuilder*) setOptionalAllTypes:(TestAllTypes*) value;
- (TestParsingMergeBuilder*) setOptionalAllTypesBuilder:(TestAllTypesBuilder*) builderForValue;
- (TestParsingMergeBuilder*) mergeOptionalAllTypes:(TestAllTypes*) value;
- (TestParsingMergeBuilder*) clearOptionalAllTypes;

- (NSMutableArray *)repeatedAllTypes;
- (TestAllTypes*)repeatedAllTypesAtIndex:(NSUInteger)index;
- (TestParsingMergeBuilder *)addRepeatedAllTypes:(TestAllTypes*)value;
- (TestParsingMergeBuilder *)setRepeatedAllTypesArray:(NSArray *)array;
- (TestParsingMergeBuilder *)clearRepeatedAllTypes;

- (BOOL) hasOptionalGroup;
- (TestParsingMergeOptionalGroup*) optionalGroup;
- (TestParsingMergeBuilder*) setOptionalGroup:(TestParsingMergeOptionalGroup*) value;
- (TestParsingMergeBuilder*) setOptionalGroupBuilder:(TestParsingMergeOptionalGroupBuilder*) builderForValue;
- (TestParsingMergeBuilder*) mergeOptionalGroup:(TestParsingMergeOptionalGroup*) value;
- (TestParsingMergeBuilder*) clearOptionalGroup;

- (NSMutableArray *)repeatedGroup;
- (TestParsingMergeRepeatedGroup*)repeatedGroupAtIndex:(NSUInteger)index;
- (TestParsingMergeBuilder *)addRepeatedGroup:(TestParsingMergeRepeatedGroup*)value;
- (TestParsingMergeBuilder *)setRepeatedGroupArray:(NSArray *)array;
- (TestParsingMergeBuilder *)clearRepeatedGroup;
@end

@interface TestCommentInjectionMessage : PBGeneratedMessage {
@private
  BOOL hasA_:1;
  NSString* a;
}
- (BOOL) hasA;
@property (readonly, strong) NSString* a;

+ (TestCommentInjectionMessage*) defaultInstance;
- (TestCommentInjectionMessage*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (TestCommentInjectionMessageBuilder*) builder;
+ (TestCommentInjectionMessageBuilder*) builder;
+ (TestCommentInjectionMessageBuilder*) builderWithPrototype:(TestCommentInjectionMessage*) prototype;
- (TestCommentInjectionMessageBuilder*) toBuilder;

+ (TestCommentInjectionMessage*) parseFromData:(NSData*) data;
+ (TestCommentInjectionMessage*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TestCommentInjectionMessage*) parseFromInputStream:(NSInputStream*) input;
+ (TestCommentInjectionMessage*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TestCommentInjectionMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (TestCommentInjectionMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface TestCommentInjectionMessageBuilder : PBGeneratedMessageBuilder {
@private
  TestCommentInjectionMessage* result;
}

- (TestCommentInjectionMessage*) defaultInstance;

- (TestCommentInjectionMessageBuilder*) clear;
- (TestCommentInjectionMessageBuilder*) clone;

- (TestCommentInjectionMessage*) build;
- (TestCommentInjectionMessage*) buildPartial;

- (TestCommentInjectionMessageBuilder*) mergeFrom:(TestCommentInjectionMessage*) other;
- (TestCommentInjectionMessageBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (TestCommentInjectionMessageBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasA;
- (NSString*) a;
- (TestCommentInjectionMessageBuilder*) setA:(NSString*) value;
- (TestCommentInjectionMessageBuilder*) clearA;
@end

@interface FooRequest : PBGeneratedMessage {
@private
}

+ (FooRequest*) defaultInstance;
- (FooRequest*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (FooRequestBuilder*) builder;
+ (FooRequestBuilder*) builder;
+ (FooRequestBuilder*) builderWithPrototype:(FooRequest*) prototype;
- (FooRequestBuilder*) toBuilder;

+ (FooRequest*) parseFromData:(NSData*) data;
+ (FooRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (FooRequest*) parseFromInputStream:(NSInputStream*) input;
+ (FooRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (FooRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (FooRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface FooRequestBuilder : PBGeneratedMessageBuilder {
@private
  FooRequest* result;
}

- (FooRequest*) defaultInstance;

- (FooRequestBuilder*) clear;
- (FooRequestBuilder*) clone;

- (FooRequest*) build;
- (FooRequest*) buildPartial;

- (FooRequestBuilder*) mergeFrom:(FooRequest*) other;
- (FooRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (FooRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface FooResponse : PBGeneratedMessage {
@private
}

+ (FooResponse*) defaultInstance;
- (FooResponse*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (FooResponseBuilder*) builder;
+ (FooResponseBuilder*) builder;
+ (FooResponseBuilder*) builderWithPrototype:(FooResponse*) prototype;
- (FooResponseBuilder*) toBuilder;

+ (FooResponse*) parseFromData:(NSData*) data;
+ (FooResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (FooResponse*) parseFromInputStream:(NSInputStream*) input;
+ (FooResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (FooResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (FooResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface FooResponseBuilder : PBGeneratedMessageBuilder {
@private
  FooResponse* result;
}

- (FooResponse*) defaultInstance;

- (FooResponseBuilder*) clear;
- (FooResponseBuilder*) clone;

- (FooResponse*) build;
- (FooResponse*) buildPartial;

- (FooResponseBuilder*) mergeFrom:(FooResponse*) other;
- (FooResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (FooResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface FooClientMessage : PBGeneratedMessage {
@private
}

+ (FooClientMessage*) defaultInstance;
- (FooClientMessage*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (FooClientMessageBuilder*) builder;
+ (FooClientMessageBuilder*) builder;
+ (FooClientMessageBuilder*) builderWithPrototype:(FooClientMessage*) prototype;
- (FooClientMessageBuilder*) toBuilder;

+ (FooClientMessage*) parseFromData:(NSData*) data;
+ (FooClientMessage*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (FooClientMessage*) parseFromInputStream:(NSInputStream*) input;
+ (FooClientMessage*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (FooClientMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (FooClientMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface FooClientMessageBuilder : PBGeneratedMessageBuilder {
@private
  FooClientMessage* result;
}

- (FooClientMessage*) defaultInstance;

- (FooClientMessageBuilder*) clear;
- (FooClientMessageBuilder*) clone;

- (FooClientMessage*) build;
- (FooClientMessage*) buildPartial;

- (FooClientMessageBuilder*) mergeFrom:(FooClientMessage*) other;
- (FooClientMessageBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (FooClientMessageBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface FooServerMessage : PBGeneratedMessage {
@private
}

+ (FooServerMessage*) defaultInstance;
- (FooServerMessage*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (FooServerMessageBuilder*) builder;
+ (FooServerMessageBuilder*) builder;
+ (FooServerMessageBuilder*) builderWithPrototype:(FooServerMessage*) prototype;
- (FooServerMessageBuilder*) toBuilder;

+ (FooServerMessage*) parseFromData:(NSData*) data;
+ (FooServerMessage*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (FooServerMessage*) parseFromInputStream:(NSInputStream*) input;
+ (FooServerMessage*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (FooServerMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (FooServerMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface FooServerMessageBuilder : PBGeneratedMessageBuilder {
@private
  FooServerMessage* result;
}

- (FooServerMessage*) defaultInstance;

- (FooServerMessageBuilder*) clear;
- (FooServerMessageBuilder*) clone;

- (FooServerMessage*) build;
- (FooServerMessage*) buildPartial;

- (FooServerMessageBuilder*) mergeFrom:(FooServerMessage*) other;
- (FooServerMessageBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (FooServerMessageBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface BarRequest : PBGeneratedMessage {
@private
}

+ (BarRequest*) defaultInstance;
- (BarRequest*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (BarRequestBuilder*) builder;
+ (BarRequestBuilder*) builder;
+ (BarRequestBuilder*) builderWithPrototype:(BarRequest*) prototype;
- (BarRequestBuilder*) toBuilder;

+ (BarRequest*) parseFromData:(NSData*) data;
+ (BarRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (BarRequest*) parseFromInputStream:(NSInputStream*) input;
+ (BarRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (BarRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (BarRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface BarRequestBuilder : PBGeneratedMessageBuilder {
@private
  BarRequest* result;
}

- (BarRequest*) defaultInstance;

- (BarRequestBuilder*) clear;
- (BarRequestBuilder*) clone;

- (BarRequest*) build;
- (BarRequest*) buildPartial;

- (BarRequestBuilder*) mergeFrom:(BarRequest*) other;
- (BarRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (BarRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface BarResponse : PBGeneratedMessage {
@private
}

+ (BarResponse*) defaultInstance;
- (BarResponse*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (BarResponseBuilder*) builder;
+ (BarResponseBuilder*) builder;
+ (BarResponseBuilder*) builderWithPrototype:(BarResponse*) prototype;
- (BarResponseBuilder*) toBuilder;

+ (BarResponse*) parseFromData:(NSData*) data;
+ (BarResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (BarResponse*) parseFromInputStream:(NSInputStream*) input;
+ (BarResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (BarResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (BarResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface BarResponseBuilder : PBGeneratedMessageBuilder {
@private
  BarResponse* result;
}

- (BarResponse*) defaultInstance;

- (BarResponseBuilder*) clear;
- (BarResponseBuilder*) clone;

- (BarResponse*) build;
- (BarResponse*) buildPartial;

- (BarResponseBuilder*) mergeFrom:(BarResponse*) other;
- (BarResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (BarResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end


// @@protoc_insertion_point(global_scope)
