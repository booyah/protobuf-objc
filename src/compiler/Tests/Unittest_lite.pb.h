// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "ProtocolBuffers.h"

#import "Unittest_import_lite.pb.h"
// @@protoc_insertion_point(imports)

@class ForeignMessageLite;
@class ForeignMessageLiteBuilder;
@class ImportMessageLite;
@class ImportMessageLiteBuilder;
@class OptionalGroup_extension_lite;
@class OptionalGroup_extension_liteBuilder;
@class PublicImportMessageLite;
@class PublicImportMessageLiteBuilder;
@class RepeatedGroup_extension_lite;
@class RepeatedGroup_extension_liteBuilder;
@class TestAllExtensionsLite;
@class TestAllExtensionsLiteBuilder;
@class TestAllTypesLite;
@class TestAllTypesLiteBuilder;
@class TestAllTypesLiteNestedMessage;
@class TestAllTypesLiteNestedMessageBuilder;
@class TestAllTypesLiteOptionalGroup;
@class TestAllTypesLiteOptionalGroupBuilder;
@class TestAllTypesLiteRepeatedGroup;
@class TestAllTypesLiteRepeatedGroupBuilder;
@class TestDeprecatedLite;
@class TestDeprecatedLiteBuilder;
@class TestEmptyMessageLite;
@class TestEmptyMessageLiteBuilder;
@class TestEmptyMessageWithExtensionsLite;
@class TestEmptyMessageWithExtensionsLiteBuilder;
@class TestNestedExtensionLite;
@class TestNestedExtensionLiteBuilder;
@class TestPackedExtensionsLite;
@class TestPackedExtensionsLiteBuilder;
@class TestPackedTypesLite;
@class TestPackedTypesLiteBuilder;
@class TestParsingMergeLite;
@class TestParsingMergeLiteBuilder;
@class TestParsingMergeLiteOptionalGroup;
@class TestParsingMergeLiteOptionalGroupBuilder;
@class TestParsingMergeLiteRepeatedFieldsGenerator;
@class TestParsingMergeLiteRepeatedFieldsGeneratorBuilder;
@class TestParsingMergeLiteRepeatedFieldsGeneratorGroup1;
@class TestParsingMergeLiteRepeatedFieldsGeneratorGroup1Builder;
@class TestParsingMergeLiteRepeatedFieldsGeneratorGroup2;
@class TestParsingMergeLiteRepeatedFieldsGeneratorGroup2Builder;
@class TestParsingMergeLiteRepeatedGroup;
@class TestParsingMergeLiteRepeatedGroupBuilder;
#ifndef __has_feature
  #define __has_feature(x) 0 // Compatibility with non-clang compilers.
#endif // __has_feature

#ifndef NS_RETURNS_NOT_RETAINED
  #if __has_feature(attribute_ns_returns_not_retained)
    #define NS_RETURNS_NOT_RETAINED __attribute__((ns_returns_not_retained))
  #else
    #define NS_RETURNS_NOT_RETAINED
  #endif
#endif

typedef enum {
  ForeignEnumLiteForeignLiteFoo = 4,
  ForeignEnumLiteForeignLiteBar = 5,
  ForeignEnumLiteForeignLiteBaz = 6,
} ForeignEnumLite;

BOOL ForeignEnumLiteIsValidValue(ForeignEnumLite value);

typedef enum {
  TestAllTypesLiteNestedEnumFoo = 1,
  TestAllTypesLiteNestedEnumBar = 2,
  TestAllTypesLiteNestedEnumBaz = 3,
} TestAllTypesLiteNestedEnum;

BOOL TestAllTypesLiteNestedEnumIsValidValue(TestAllTypesLiteNestedEnum value);


@interface UnittestLiteRoot : NSObject {
}
+ (PBExtensionRegistry*) extensionRegistry;
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry;
+ (id<PBExtensionField>) optionalInt32ExtensionLite;
+ (id<PBExtensionField>) optionalInt64ExtensionLite;
+ (id<PBExtensionField>) optionalUint32ExtensionLite;
+ (id<PBExtensionField>) optionalUint64ExtensionLite;
+ (id<PBExtensionField>) optionalSint32ExtensionLite;
+ (id<PBExtensionField>) optionalSint64ExtensionLite;
+ (id<PBExtensionField>) optionalFixed32ExtensionLite;
+ (id<PBExtensionField>) optionalFixed64ExtensionLite;
+ (id<PBExtensionField>) optionalSfixed32ExtensionLite;
+ (id<PBExtensionField>) optionalSfixed64ExtensionLite;
+ (id<PBExtensionField>) optionalFloatExtensionLite;
+ (id<PBExtensionField>) optionalDoubleExtensionLite;
+ (id<PBExtensionField>) optionalBoolExtensionLite;
+ (id<PBExtensionField>) optionalStringExtensionLite;
+ (id<PBExtensionField>) optionalBytesExtensionLite;
+ (id<PBExtensionField>) optionalGroupExtensionLite;
+ (id<PBExtensionField>) optionalNestedMessageExtensionLite;
+ (id<PBExtensionField>) optionalForeignMessageExtensionLite;
+ (id<PBExtensionField>) optionalImportMessageExtensionLite;
+ (id<PBExtensionField>) optionalNestedEnumExtensionLite;
+ (id<PBExtensionField>) optionalForeignEnumExtensionLite;
+ (id<PBExtensionField>) optionalImportEnumExtensionLite;
+ (id<PBExtensionField>) optionalStringPieceExtensionLite;
+ (id<PBExtensionField>) optionalCordExtensionLite;
+ (id<PBExtensionField>) optionalPublicImportMessageExtensionLite;
+ (id<PBExtensionField>) optionalLazyMessageExtensionLite;
+ (id<PBExtensionField>) repeatedInt32ExtensionLite;
+ (id<PBExtensionField>) repeatedInt64ExtensionLite;
+ (id<PBExtensionField>) repeatedUint32ExtensionLite;
+ (id<PBExtensionField>) repeatedUint64ExtensionLite;
+ (id<PBExtensionField>) repeatedSint32ExtensionLite;
+ (id<PBExtensionField>) repeatedSint64ExtensionLite;
+ (id<PBExtensionField>) repeatedFixed32ExtensionLite;
+ (id<PBExtensionField>) repeatedFixed64ExtensionLite;
+ (id<PBExtensionField>) repeatedSfixed32ExtensionLite;
+ (id<PBExtensionField>) repeatedSfixed64ExtensionLite;
+ (id<PBExtensionField>) repeatedFloatExtensionLite;
+ (id<PBExtensionField>) repeatedDoubleExtensionLite;
+ (id<PBExtensionField>) repeatedBoolExtensionLite;
+ (id<PBExtensionField>) repeatedStringExtensionLite;
+ (id<PBExtensionField>) repeatedBytesExtensionLite;
+ (id<PBExtensionField>) repeatedGroupExtensionLite;
+ (id<PBExtensionField>) repeatedNestedMessageExtensionLite;
+ (id<PBExtensionField>) repeatedForeignMessageExtensionLite;
+ (id<PBExtensionField>) repeatedImportMessageExtensionLite;
+ (id<PBExtensionField>) repeatedNestedEnumExtensionLite;
+ (id<PBExtensionField>) repeatedForeignEnumExtensionLite;
+ (id<PBExtensionField>) repeatedImportEnumExtensionLite;
+ (id<PBExtensionField>) repeatedStringPieceExtensionLite;
+ (id<PBExtensionField>) repeatedCordExtensionLite;
+ (id<PBExtensionField>) repeatedLazyMessageExtensionLite;
+ (id<PBExtensionField>) defaultInt32ExtensionLite;
+ (id<PBExtensionField>) defaultInt64ExtensionLite;
+ (id<PBExtensionField>) defaultUint32ExtensionLite;
+ (id<PBExtensionField>) defaultUint64ExtensionLite;
+ (id<PBExtensionField>) defaultSint32ExtensionLite;
+ (id<PBExtensionField>) defaultSint64ExtensionLite;
+ (id<PBExtensionField>) defaultFixed32ExtensionLite;
+ (id<PBExtensionField>) defaultFixed64ExtensionLite;
+ (id<PBExtensionField>) defaultSfixed32ExtensionLite;
+ (id<PBExtensionField>) defaultSfixed64ExtensionLite;
+ (id<PBExtensionField>) defaultFloatExtensionLite;
+ (id<PBExtensionField>) defaultDoubleExtensionLite;
+ (id<PBExtensionField>) defaultBoolExtensionLite;
+ (id<PBExtensionField>) defaultStringExtensionLite;
+ (id<PBExtensionField>) defaultBytesExtensionLite;
+ (id<PBExtensionField>) defaultNestedEnumExtensionLite;
+ (id<PBExtensionField>) defaultForeignEnumExtensionLite;
+ (id<PBExtensionField>) defaultImportEnumExtensionLite;
+ (id<PBExtensionField>) defaultStringPieceExtensionLite;
+ (id<PBExtensionField>) defaultCordExtensionLite;
+ (id<PBExtensionField>) oneofUint32ExtensionLite;
+ (id<PBExtensionField>) oneofNestedMessageExtensionLite;
+ (id<PBExtensionField>) oneofStringExtensionLite;
+ (id<PBExtensionField>) oneofBytesExtensionLite;
+ (id<PBExtensionField>) packedInt32ExtensionLite;
+ (id<PBExtensionField>) packedInt64ExtensionLite;
+ (id<PBExtensionField>) packedUint32ExtensionLite;
+ (id<PBExtensionField>) packedUint64ExtensionLite;
+ (id<PBExtensionField>) packedSint32ExtensionLite;
+ (id<PBExtensionField>) packedSint64ExtensionLite;
+ (id<PBExtensionField>) packedFixed32ExtensionLite;
+ (id<PBExtensionField>) packedFixed64ExtensionLite;
+ (id<PBExtensionField>) packedSfixed32ExtensionLite;
+ (id<PBExtensionField>) packedSfixed64ExtensionLite;
+ (id<PBExtensionField>) packedFloatExtensionLite;
+ (id<PBExtensionField>) packedDoubleExtensionLite;
+ (id<PBExtensionField>) packedBoolExtensionLite;
+ (id<PBExtensionField>) packedEnumExtensionLite;
@end

@interface TestAllTypesLite : PBGeneratedMessage {
@private
  BOOL hasOptionalBool_:1;
  BOOL hasDefaultBool_:1;
  BOOL hasOptionalDouble_:1;
  BOOL hasDefaultDouble_:1;
  BOOL hasOptionalFloat_:1;
  BOOL hasDefaultFloat_:1;
  BOOL hasOptionalInt64_:1;
  BOOL hasDefaultInt64_:1;
  BOOL hasOptionalUint64_:1;
  BOOL hasDefaultUint64_:1;
  BOOL hasOptionalInt32_:1;
  BOOL hasDefaultInt32_:1;
  BOOL hasOptionalFixed64_:1;
  BOOL hasDefaultFixed64_:1;
  BOOL hasOptionalFixed32_:1;
  BOOL hasDefaultFixed32_:1;
  BOOL hasOneofString_:1;
  BOOL hasDefaultCord_:1;
  BOOL hasDefaultStringPiece_:1;
  BOOL hasDefaultString_:1;
  BOOL hasOptionalString_:1;
  BOOL hasOptionalStringPiece_:1;
  BOOL hasOptionalCord_:1;
  BOOL hasOptionalGroup_:1;
  BOOL hasOneofNestedMessage_:1;
  BOOL hasOptionalNestedMessage_:1;
  BOOL hasOptionalForeignMessage_:1;
  BOOL hasOptionalImportMessage_:1;
  BOOL hasOptionalPublicImportMessage_:1;
  BOOL hasOptionalLazyMessage_:1;
  BOOL hasOneofBytes_:1;
  BOOL hasDefaultBytes_:1;
  BOOL hasOptionalBytes_:1;
  BOOL hasDefaultUint32_:1;
  BOOL hasOptionalUint32_:1;
  BOOL hasOneofUint32_:1;
  BOOL hasDefaultImportEnum_:1;
  BOOL hasDefaultForeignEnum_:1;
  BOOL hasDefaultNestedEnum_:1;
  BOOL hasOptionalNestedEnum_:1;
  BOOL hasOptionalForeignEnum_:1;
  BOOL hasOptionalImportEnum_:1;
  BOOL hasOptionalSfixed32_:1;
  BOOL hasDefaultSfixed32_:1;
  BOOL hasOptionalSfixed64_:1;
  BOOL hasDefaultSfixed64_:1;
  BOOL hasOptionalSint32_:1;
  BOOL hasDefaultSint32_:1;
  BOOL hasOptionalSint64_:1;
  BOOL hasDefaultSint64_:1;
  BOOL optionalBool_:1;
  BOOL defaultBool_:1;
  Float64 optionalDouble;
  Float64 defaultDouble;
  Float32 optionalFloat;
  Float32 defaultFloat;
  SInt64 optionalInt64;
  SInt64 defaultInt64;
  UInt64 optionalUint64;
  UInt64 defaultUint64;
  SInt32 optionalInt32;
  SInt32 defaultInt32;
  UInt64 optionalFixed64;
  UInt64 defaultFixed64;
  UInt32 optionalFixed32;
  UInt32 defaultFixed32;
  NSString* oneofString;
  NSString* defaultCord;
  NSString* defaultStringPiece;
  NSString* defaultString;
  NSString* optionalString;
  NSString* optionalStringPiece;
  NSString* optionalCord;
  TestAllTypesLiteOptionalGroup* optionalGroup;
  TestAllTypesLiteNestedMessage* oneofNestedMessage;
  TestAllTypesLiteNestedMessage* optionalNestedMessage;
  ForeignMessageLite* optionalForeignMessage;
  ImportMessageLite* optionalImportMessage;
  PublicImportMessageLite* optionalPublicImportMessage;
  TestAllTypesLiteNestedMessage* optionalLazyMessage;
  NSData* oneofBytes;
  NSData* defaultBytes;
  NSData* optionalBytes;
  UInt32 defaultUint32;
  UInt32 optionalUint32;
  UInt32 oneofUint32;
  ImportEnumLite defaultImportEnum;
  ForeignEnumLite defaultForeignEnum;
  TestAllTypesLiteNestedEnum defaultNestedEnum;
  TestAllTypesLiteNestedEnum optionalNestedEnum;
  ForeignEnumLite optionalForeignEnum;
  ImportEnumLite optionalImportEnum;
  SInt32 optionalSfixed32;
  SInt32 defaultSfixed32;
  SInt64 optionalSfixed64;
  SInt64 defaultSfixed64;
  SInt32 optionalSint32;
  SInt32 defaultSint32;
  SInt64 optionalSint64;
  SInt64 defaultSint64;
  PBAppendableArray * repeatedBoolArray;
  PBAppendableArray * repeatedDoubleArray;
  PBAppendableArray * repeatedFloatArray;
  PBAppendableArray * repeatedInt64Array;
  PBAppendableArray * repeatedUint64Array;
  PBAppendableArray * repeatedInt32Array;
  PBAppendableArray * repeatedFixed64Array;
  PBAppendableArray * repeatedFixed32Array;
  NSMutableArray * repeatedCordArray;
  NSMutableArray * repeatedStringPieceArray;
  NSMutableArray * repeatedStringArray;
  NSMutableArray * repeatedGroupArray;
  NSMutableArray * repeatedLazyMessageArray;
  NSMutableArray * repeatedImportMessageArray;
  NSMutableArray * repeatedForeignMessageArray;
  NSMutableArray * repeatedNestedMessageArray;
  NSMutableArray * repeatedBytesArray;
  PBAppendableArray * repeatedUint32Array;
  PBAppendableArray * repeatedImportEnumArray;
  PBAppendableArray * repeatedForeignEnumArray;
  PBAppendableArray * repeatedNestedEnumArray;
  PBAppendableArray * repeatedSfixed32Array;
  PBAppendableArray * repeatedSfixed64Array;
  PBAppendableArray * repeatedSint32Array;
  PBAppendableArray * repeatedSint64Array;
}
- (BOOL) hasOptionalInt32;
- (BOOL) hasOptionalInt64;
- (BOOL) hasOptionalUint32;
- (BOOL) hasOptionalUint64;
- (BOOL) hasOptionalSint32;
- (BOOL) hasOptionalSint64;
- (BOOL) hasOptionalFixed32;
- (BOOL) hasOptionalFixed64;
- (BOOL) hasOptionalSfixed32;
- (BOOL) hasOptionalSfixed64;
- (BOOL) hasOptionalFloat;
- (BOOL) hasOptionalDouble;
- (BOOL) hasOptionalBool;
- (BOOL) hasOptionalString;
- (BOOL) hasOptionalBytes;
- (BOOL) hasOptionalGroup;
- (BOOL) hasOptionalNestedMessage;
- (BOOL) hasOptionalForeignMessage;
- (BOOL) hasOptionalImportMessage;
- (BOOL) hasOptionalNestedEnum;
- (BOOL) hasOptionalForeignEnum;
- (BOOL) hasOptionalImportEnum;
- (BOOL) hasOptionalStringPiece;
- (BOOL) hasOptionalCord;
- (BOOL) hasOptionalPublicImportMessage;
- (BOOL) hasOptionalLazyMessage;
- (BOOL) hasDefaultInt32;
- (BOOL) hasDefaultInt64;
- (BOOL) hasDefaultUint32;
- (BOOL) hasDefaultUint64;
- (BOOL) hasDefaultSint32;
- (BOOL) hasDefaultSint64;
- (BOOL) hasDefaultFixed32;
- (BOOL) hasDefaultFixed64;
- (BOOL) hasDefaultSfixed32;
- (BOOL) hasDefaultSfixed64;
- (BOOL) hasDefaultFloat;
- (BOOL) hasDefaultDouble;
- (BOOL) hasDefaultBool;
- (BOOL) hasDefaultString;
- (BOOL) hasDefaultBytes;
- (BOOL) hasDefaultNestedEnum;
- (BOOL) hasDefaultForeignEnum;
- (BOOL) hasDefaultImportEnum;
- (BOOL) hasDefaultStringPiece;
- (BOOL) hasDefaultCord;
- (BOOL) hasOneofUint32;
- (BOOL) hasOneofNestedMessage;
- (BOOL) hasOneofString;
- (BOOL) hasOneofBytes;
@property (readonly) SInt32 optionalInt32;
@property (readonly) SInt64 optionalInt64;
@property (readonly) UInt32 optionalUint32;
@property (readonly) UInt64 optionalUint64;
@property (readonly) SInt32 optionalSint32;
@property (readonly) SInt64 optionalSint64;
@property (readonly) UInt32 optionalFixed32;
@property (readonly) UInt64 optionalFixed64;
@property (readonly) SInt32 optionalSfixed32;
@property (readonly) SInt64 optionalSfixed64;
@property (readonly) Float32 optionalFloat;
@property (readonly) Float64 optionalDouble;
- (BOOL) optionalBool;
@property (readonly, strong) NSString* optionalString;
@property (readonly, strong) NSData* optionalBytes;
@property (readonly, strong) TestAllTypesLiteOptionalGroup* optionalGroup;
@property (readonly, strong) TestAllTypesLiteNestedMessage* optionalNestedMessage;
@property (readonly, strong) ForeignMessageLite* optionalForeignMessage;
@property (readonly, strong) ImportMessageLite* optionalImportMessage;
@property (readonly) TestAllTypesLiteNestedEnum optionalNestedEnum;
@property (readonly) ForeignEnumLite optionalForeignEnum;
@property (readonly) ImportEnumLite optionalImportEnum;
@property (readonly, strong) NSString* optionalStringPiece;
@property (readonly, strong) NSString* optionalCord;
@property (readonly, strong) PublicImportMessageLite* optionalPublicImportMessage;
@property (readonly, strong) TestAllTypesLiteNestedMessage* optionalLazyMessage;
@property (readonly, strong) PBArray * repeatedInt32;
@property (readonly, strong) PBArray * repeatedInt64;
@property (readonly, strong) PBArray * repeatedUint32;
@property (readonly, strong) PBArray * repeatedUint64;
@property (readonly, strong) PBArray * repeatedSint32;
@property (readonly, strong) PBArray * repeatedSint64;
@property (readonly, strong) PBArray * repeatedFixed32;
@property (readonly, strong) PBArray * repeatedFixed64;
@property (readonly, strong) PBArray * repeatedSfixed32;
@property (readonly, strong) PBArray * repeatedSfixed64;
@property (readonly, strong) PBArray * repeatedFloat;
@property (readonly, strong) PBArray * repeatedDouble;
@property (readonly, strong) PBArray * repeatedBool;
@property (readonly, strong) PBArray * repeatedString;
@property (readonly, strong) PBArray * repeatedBytes;
@property (readonly, strong) NSArray * repeatedGroup;
@property (readonly, strong) NSArray * repeatedNestedMessage;
@property (readonly, strong) NSArray * repeatedForeignMessage;
@property (readonly, strong) NSArray * repeatedImportMessage;
@property (readonly, strong) PBArray * repeatedNestedEnum;
@property (readonly, strong) PBArray * repeatedForeignEnum;
@property (readonly, strong) PBArray * repeatedImportEnum;
@property (readonly, strong) PBArray * repeatedStringPiece;
@property (readonly, strong) PBArray * repeatedCord;
@property (readonly, strong) NSArray * repeatedLazyMessage;
@property (readonly) SInt32 defaultInt32;
@property (readonly) SInt64 defaultInt64;
@property (readonly) UInt32 defaultUint32;
@property (readonly) UInt64 defaultUint64;
@property (readonly) SInt32 defaultSint32;
@property (readonly) SInt64 defaultSint64;
@property (readonly) UInt32 defaultFixed32;
@property (readonly) UInt64 defaultFixed64;
@property (readonly) SInt32 defaultSfixed32;
@property (readonly) SInt64 defaultSfixed64;
@property (readonly) Float32 defaultFloat;
@property (readonly) Float64 defaultDouble;
- (BOOL) defaultBool;
@property (readonly, strong) NSString* defaultString;
@property (readonly, strong) NSData* defaultBytes;
@property (readonly) TestAllTypesLiteNestedEnum defaultNestedEnum;
@property (readonly) ForeignEnumLite defaultForeignEnum;
@property (readonly) ImportEnumLite defaultImportEnum;
@property (readonly, strong) NSString* defaultStringPiece;
@property (readonly, strong) NSString* defaultCord;
@property (readonly) UInt32 oneofUint32;
@property (readonly, strong) TestAllTypesLiteNestedMessage* oneofNestedMessage;
@property (readonly, strong) NSString* oneofString;
@property (readonly, strong) NSData* oneofBytes;
- (SInt32)repeatedInt32AtIndex:(NSUInteger)index;
- (SInt64)repeatedInt64AtIndex:(NSUInteger)index;
- (UInt32)repeatedUint32AtIndex:(NSUInteger)index;
- (UInt64)repeatedUint64AtIndex:(NSUInteger)index;
- (SInt32)repeatedSint32AtIndex:(NSUInteger)index;
- (SInt64)repeatedSint64AtIndex:(NSUInteger)index;
- (UInt32)repeatedFixed32AtIndex:(NSUInteger)index;
- (UInt64)repeatedFixed64AtIndex:(NSUInteger)index;
- (SInt32)repeatedSfixed32AtIndex:(NSUInteger)index;
- (SInt64)repeatedSfixed64AtIndex:(NSUInteger)index;
- (Float32)repeatedFloatAtIndex:(NSUInteger)index;
- (Float64)repeatedDoubleAtIndex:(NSUInteger)index;
- (BOOL)repeatedBoolAtIndex:(NSUInteger)index;
- (NSString*)repeatedStringAtIndex:(NSUInteger)index;
- (NSData*)repeatedBytesAtIndex:(NSUInteger)index;
- (TestAllTypesLiteRepeatedGroup*)repeatedGroupAtIndex:(NSUInteger)index;
- (TestAllTypesLiteNestedMessage*)repeatedNestedMessageAtIndex:(NSUInteger)index;
- (ForeignMessageLite*)repeatedForeignMessageAtIndex:(NSUInteger)index;
- (ImportMessageLite*)repeatedImportMessageAtIndex:(NSUInteger)index;
- (TestAllTypesLiteNestedEnum)repeatedNestedEnumAtIndex:(NSUInteger)index;
- (ForeignEnumLite)repeatedForeignEnumAtIndex:(NSUInteger)index;
- (ImportEnumLite)repeatedImportEnumAtIndex:(NSUInteger)index;
- (NSString*)repeatedStringPieceAtIndex:(NSUInteger)index;
- (NSString*)repeatedCordAtIndex:(NSUInteger)index;
- (TestAllTypesLiteNestedMessage*)repeatedLazyMessageAtIndex:(NSUInteger)index;

+ (TestAllTypesLite*) defaultInstance;
- (TestAllTypesLite*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (TestAllTypesLiteBuilder*) builder;
+ (TestAllTypesLiteBuilder*) builder;
+ (TestAllTypesLiteBuilder*) builderWithPrototype:(TestAllTypesLite*) prototype;
- (TestAllTypesLiteBuilder*) toBuilder;

+ (TestAllTypesLite*) parseFromData:(NSData*) data;
+ (TestAllTypesLite*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TestAllTypesLite*) parseFromInputStream:(NSInputStream*) input;
+ (TestAllTypesLite*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TestAllTypesLite*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (TestAllTypesLite*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface TestAllTypesLiteNestedMessage : PBGeneratedMessage {
@private
  BOOL hasBb_:1;
  SInt32 bb;
}
- (BOOL) hasBb;
@property (readonly) SInt32 bb;

+ (TestAllTypesLiteNestedMessage*) defaultInstance;
- (TestAllTypesLiteNestedMessage*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (TestAllTypesLiteNestedMessageBuilder*) builder;
+ (TestAllTypesLiteNestedMessageBuilder*) builder;
+ (TestAllTypesLiteNestedMessageBuilder*) builderWithPrototype:(TestAllTypesLiteNestedMessage*) prototype;
- (TestAllTypesLiteNestedMessageBuilder*) toBuilder;

+ (TestAllTypesLiteNestedMessage*) parseFromData:(NSData*) data;
+ (TestAllTypesLiteNestedMessage*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TestAllTypesLiteNestedMessage*) parseFromInputStream:(NSInputStream*) input;
+ (TestAllTypesLiteNestedMessage*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TestAllTypesLiteNestedMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (TestAllTypesLiteNestedMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface TestAllTypesLiteNestedMessageBuilder : PBGeneratedMessageBuilder {
@private
  TestAllTypesLiteNestedMessage* result;
}

- (TestAllTypesLiteNestedMessage*) defaultInstance;

- (TestAllTypesLiteNestedMessageBuilder*) clear;
- (TestAllTypesLiteNestedMessageBuilder*) clone;

- (TestAllTypesLiteNestedMessage*) build;
- (TestAllTypesLiteNestedMessage*) buildPartial;

- (TestAllTypesLiteNestedMessageBuilder*) mergeFrom:(TestAllTypesLiteNestedMessage*) other;
- (TestAllTypesLiteNestedMessageBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (TestAllTypesLiteNestedMessageBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasBb;
- (SInt32) bb;
- (TestAllTypesLiteNestedMessageBuilder*) setBb:(SInt32) value;
- (TestAllTypesLiteNestedMessageBuilder*) clearBb;
@end

@interface TestAllTypesLiteOptionalGroup : PBGeneratedMessage {
@private
  BOOL hasA_:1;
  SInt32 a;
}
- (BOOL) hasA;
@property (readonly) SInt32 a;

+ (TestAllTypesLiteOptionalGroup*) defaultInstance;
- (TestAllTypesLiteOptionalGroup*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (TestAllTypesLiteOptionalGroupBuilder*) builder;
+ (TestAllTypesLiteOptionalGroupBuilder*) builder;
+ (TestAllTypesLiteOptionalGroupBuilder*) builderWithPrototype:(TestAllTypesLiteOptionalGroup*) prototype;
- (TestAllTypesLiteOptionalGroupBuilder*) toBuilder;

+ (TestAllTypesLiteOptionalGroup*) parseFromData:(NSData*) data;
+ (TestAllTypesLiteOptionalGroup*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TestAllTypesLiteOptionalGroup*) parseFromInputStream:(NSInputStream*) input;
+ (TestAllTypesLiteOptionalGroup*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TestAllTypesLiteOptionalGroup*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (TestAllTypesLiteOptionalGroup*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface TestAllTypesLiteOptionalGroupBuilder : PBGeneratedMessageBuilder {
@private
  TestAllTypesLiteOptionalGroup* result;
}

- (TestAllTypesLiteOptionalGroup*) defaultInstance;

- (TestAllTypesLiteOptionalGroupBuilder*) clear;
- (TestAllTypesLiteOptionalGroupBuilder*) clone;

- (TestAllTypesLiteOptionalGroup*) build;
- (TestAllTypesLiteOptionalGroup*) buildPartial;

- (TestAllTypesLiteOptionalGroupBuilder*) mergeFrom:(TestAllTypesLiteOptionalGroup*) other;
- (TestAllTypesLiteOptionalGroupBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (TestAllTypesLiteOptionalGroupBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasA;
- (SInt32) a;
- (TestAllTypesLiteOptionalGroupBuilder*) setA:(SInt32) value;
- (TestAllTypesLiteOptionalGroupBuilder*) clearA;
@end

@interface TestAllTypesLiteRepeatedGroup : PBGeneratedMessage {
@private
  BOOL hasA_:1;
  SInt32 a;
}
- (BOOL) hasA;
@property (readonly) SInt32 a;

+ (TestAllTypesLiteRepeatedGroup*) defaultInstance;
- (TestAllTypesLiteRepeatedGroup*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (TestAllTypesLiteRepeatedGroupBuilder*) builder;
+ (TestAllTypesLiteRepeatedGroupBuilder*) builder;
+ (TestAllTypesLiteRepeatedGroupBuilder*) builderWithPrototype:(TestAllTypesLiteRepeatedGroup*) prototype;
- (TestAllTypesLiteRepeatedGroupBuilder*) toBuilder;

+ (TestAllTypesLiteRepeatedGroup*) parseFromData:(NSData*) data;
+ (TestAllTypesLiteRepeatedGroup*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TestAllTypesLiteRepeatedGroup*) parseFromInputStream:(NSInputStream*) input;
+ (TestAllTypesLiteRepeatedGroup*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TestAllTypesLiteRepeatedGroup*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (TestAllTypesLiteRepeatedGroup*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface TestAllTypesLiteRepeatedGroupBuilder : PBGeneratedMessageBuilder {
@private
  TestAllTypesLiteRepeatedGroup* result;
}

- (TestAllTypesLiteRepeatedGroup*) defaultInstance;

- (TestAllTypesLiteRepeatedGroupBuilder*) clear;
- (TestAllTypesLiteRepeatedGroupBuilder*) clone;

- (TestAllTypesLiteRepeatedGroup*) build;
- (TestAllTypesLiteRepeatedGroup*) buildPartial;

- (TestAllTypesLiteRepeatedGroupBuilder*) mergeFrom:(TestAllTypesLiteRepeatedGroup*) other;
- (TestAllTypesLiteRepeatedGroupBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (TestAllTypesLiteRepeatedGroupBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasA;
- (SInt32) a;
- (TestAllTypesLiteRepeatedGroupBuilder*) setA:(SInt32) value;
- (TestAllTypesLiteRepeatedGroupBuilder*) clearA;
@end

@interface TestAllTypesLiteBuilder : PBGeneratedMessageBuilder {
@private
  TestAllTypesLite* result;
}

- (TestAllTypesLite*) defaultInstance;

- (TestAllTypesLiteBuilder*) clear;
- (TestAllTypesLiteBuilder*) clone;

- (TestAllTypesLite*) build;
- (TestAllTypesLite*) buildPartial;

- (TestAllTypesLiteBuilder*) mergeFrom:(TestAllTypesLite*) other;
- (TestAllTypesLiteBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (TestAllTypesLiteBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasOptionalInt32;
- (SInt32) optionalInt32;
- (TestAllTypesLiteBuilder*) setOptionalInt32:(SInt32) value;
- (TestAllTypesLiteBuilder*) clearOptionalInt32;

- (BOOL) hasOptionalInt64;
- (SInt64) optionalInt64;
- (TestAllTypesLiteBuilder*) setOptionalInt64:(SInt64) value;
- (TestAllTypesLiteBuilder*) clearOptionalInt64;

- (BOOL) hasOptionalUint32;
- (UInt32) optionalUint32;
- (TestAllTypesLiteBuilder*) setOptionalUint32:(UInt32) value;
- (TestAllTypesLiteBuilder*) clearOptionalUint32;

- (BOOL) hasOptionalUint64;
- (UInt64) optionalUint64;
- (TestAllTypesLiteBuilder*) setOptionalUint64:(UInt64) value;
- (TestAllTypesLiteBuilder*) clearOptionalUint64;

- (BOOL) hasOptionalSint32;
- (SInt32) optionalSint32;
- (TestAllTypesLiteBuilder*) setOptionalSint32:(SInt32) value;
- (TestAllTypesLiteBuilder*) clearOptionalSint32;

- (BOOL) hasOptionalSint64;
- (SInt64) optionalSint64;
- (TestAllTypesLiteBuilder*) setOptionalSint64:(SInt64) value;
- (TestAllTypesLiteBuilder*) clearOptionalSint64;

- (BOOL) hasOptionalFixed32;
- (UInt32) optionalFixed32;
- (TestAllTypesLiteBuilder*) setOptionalFixed32:(UInt32) value;
- (TestAllTypesLiteBuilder*) clearOptionalFixed32;

- (BOOL) hasOptionalFixed64;
- (UInt64) optionalFixed64;
- (TestAllTypesLiteBuilder*) setOptionalFixed64:(UInt64) value;
- (TestAllTypesLiteBuilder*) clearOptionalFixed64;

- (BOOL) hasOptionalSfixed32;
- (SInt32) optionalSfixed32;
- (TestAllTypesLiteBuilder*) setOptionalSfixed32:(SInt32) value;
- (TestAllTypesLiteBuilder*) clearOptionalSfixed32;

- (BOOL) hasOptionalSfixed64;
- (SInt64) optionalSfixed64;
- (TestAllTypesLiteBuilder*) setOptionalSfixed64:(SInt64) value;
- (TestAllTypesLiteBuilder*) clearOptionalSfixed64;

- (BOOL) hasOptionalFloat;
- (Float32) optionalFloat;
- (TestAllTypesLiteBuilder*) setOptionalFloat:(Float32) value;
- (TestAllTypesLiteBuilder*) clearOptionalFloat;

- (BOOL) hasOptionalDouble;
- (Float64) optionalDouble;
- (TestAllTypesLiteBuilder*) setOptionalDouble:(Float64) value;
- (TestAllTypesLiteBuilder*) clearOptionalDouble;

- (BOOL) hasOptionalBool;
- (BOOL) optionalBool;
- (TestAllTypesLiteBuilder*) setOptionalBool:(BOOL) value;
- (TestAllTypesLiteBuilder*) clearOptionalBool;

- (BOOL) hasOptionalString;
- (NSString*) optionalString;
- (TestAllTypesLiteBuilder*) setOptionalString:(NSString*) value;
- (TestAllTypesLiteBuilder*) clearOptionalString;

- (BOOL) hasOptionalBytes;
- (NSData*) optionalBytes;
- (TestAllTypesLiteBuilder*) setOptionalBytes:(NSData*) value;
- (TestAllTypesLiteBuilder*) clearOptionalBytes;

- (BOOL) hasOptionalGroup;
- (TestAllTypesLiteOptionalGroup*) optionalGroup;
- (TestAllTypesLiteBuilder*) setOptionalGroup:(TestAllTypesLiteOptionalGroup*) value;
- (TestAllTypesLiteBuilder*) setOptionalGroupBuilder:(TestAllTypesLiteOptionalGroupBuilder*) builderForValue;
- (TestAllTypesLiteBuilder*) mergeOptionalGroup:(TestAllTypesLiteOptionalGroup*) value;
- (TestAllTypesLiteBuilder*) clearOptionalGroup;

- (BOOL) hasOptionalNestedMessage;
- (TestAllTypesLiteNestedMessage*) optionalNestedMessage;
- (TestAllTypesLiteBuilder*) setOptionalNestedMessage:(TestAllTypesLiteNestedMessage*) value;
- (TestAllTypesLiteBuilder*) setOptionalNestedMessageBuilder:(TestAllTypesLiteNestedMessageBuilder*) builderForValue;
- (TestAllTypesLiteBuilder*) mergeOptionalNestedMessage:(TestAllTypesLiteNestedMessage*) value;
- (TestAllTypesLiteBuilder*) clearOptionalNestedMessage;

- (BOOL) hasOptionalForeignMessage;
- (ForeignMessageLite*) optionalForeignMessage;
- (TestAllTypesLiteBuilder*) setOptionalForeignMessage:(ForeignMessageLite*) value;
- (TestAllTypesLiteBuilder*) setOptionalForeignMessageBuilder:(ForeignMessageLiteBuilder*) builderForValue;
- (TestAllTypesLiteBuilder*) mergeOptionalForeignMessage:(ForeignMessageLite*) value;
- (TestAllTypesLiteBuilder*) clearOptionalForeignMessage;

- (BOOL) hasOptionalImportMessage;
- (ImportMessageLite*) optionalImportMessage;
- (TestAllTypesLiteBuilder*) setOptionalImportMessage:(ImportMessageLite*) value;
- (TestAllTypesLiteBuilder*) setOptionalImportMessageBuilder:(ImportMessageLiteBuilder*) builderForValue;
- (TestAllTypesLiteBuilder*) mergeOptionalImportMessage:(ImportMessageLite*) value;
- (TestAllTypesLiteBuilder*) clearOptionalImportMessage;

- (BOOL) hasOptionalNestedEnum;
- (TestAllTypesLiteNestedEnum) optionalNestedEnum;
- (TestAllTypesLiteBuilder*) setOptionalNestedEnum:(TestAllTypesLiteNestedEnum) value;
- (TestAllTypesLiteBuilder*) clearOptionalNestedEnum;

- (BOOL) hasOptionalForeignEnum;
- (ForeignEnumLite) optionalForeignEnum;
- (TestAllTypesLiteBuilder*) setOptionalForeignEnum:(ForeignEnumLite) value;
- (TestAllTypesLiteBuilder*) clearOptionalForeignEnum;

- (BOOL) hasOptionalImportEnum;
- (ImportEnumLite) optionalImportEnum;
- (TestAllTypesLiteBuilder*) setOptionalImportEnum:(ImportEnumLite) value;
- (TestAllTypesLiteBuilder*) clearOptionalImportEnum;

- (BOOL) hasOptionalStringPiece;
- (NSString*) optionalStringPiece;
- (TestAllTypesLiteBuilder*) setOptionalStringPiece:(NSString*) value;
- (TestAllTypesLiteBuilder*) clearOptionalStringPiece;

- (BOOL) hasOptionalCord;
- (NSString*) optionalCord;
- (TestAllTypesLiteBuilder*) setOptionalCord:(NSString*) value;
- (TestAllTypesLiteBuilder*) clearOptionalCord;

- (BOOL) hasOptionalPublicImportMessage;
- (PublicImportMessageLite*) optionalPublicImportMessage;
- (TestAllTypesLiteBuilder*) setOptionalPublicImportMessage:(PublicImportMessageLite*) value;
- (TestAllTypesLiteBuilder*) setOptionalPublicImportMessageBuilder:(PublicImportMessageLiteBuilder*) builderForValue;
- (TestAllTypesLiteBuilder*) mergeOptionalPublicImportMessage:(PublicImportMessageLite*) value;
- (TestAllTypesLiteBuilder*) clearOptionalPublicImportMessage;

- (BOOL) hasOptionalLazyMessage;
- (TestAllTypesLiteNestedMessage*) optionalLazyMessage;
- (TestAllTypesLiteBuilder*) setOptionalLazyMessage:(TestAllTypesLiteNestedMessage*) value;
- (TestAllTypesLiteBuilder*) setOptionalLazyMessageBuilder:(TestAllTypesLiteNestedMessageBuilder*) builderForValue;
- (TestAllTypesLiteBuilder*) mergeOptionalLazyMessage:(TestAllTypesLiteNestedMessage*) value;
- (TestAllTypesLiteBuilder*) clearOptionalLazyMessage;

- (PBAppendableArray *)repeatedInt32;
- (SInt32)repeatedInt32AtIndex:(NSUInteger)index;
- (TestAllTypesLiteBuilder *)addRepeatedInt32:(SInt32)value;
- (TestAllTypesLiteBuilder *)setRepeatedInt32Array:(NSArray *)array;
- (TestAllTypesLiteBuilder *)setRepeatedInt32Values:(const SInt32 *)values count:(NSUInteger)count;
- (TestAllTypesLiteBuilder *)clearRepeatedInt32;

- (PBAppendableArray *)repeatedInt64;
- (SInt64)repeatedInt64AtIndex:(NSUInteger)index;
- (TestAllTypesLiteBuilder *)addRepeatedInt64:(SInt64)value;
- (TestAllTypesLiteBuilder *)setRepeatedInt64Array:(NSArray *)array;
- (TestAllTypesLiteBuilder *)setRepeatedInt64Values:(const SInt64 *)values count:(NSUInteger)count;
- (TestAllTypesLiteBuilder *)clearRepeatedInt64;

- (PBAppendableArray *)repeatedUint32;
- (UInt32)repeatedUint32AtIndex:(NSUInteger)index;
- (TestAllTypesLiteBuilder *)addRepeatedUint32:(UInt32)value;
- (TestAllTypesLiteBuilder *)setRepeatedUint32Array:(NSArray *)array;
- (TestAllTypesLiteBuilder *)setRepeatedUint32Values:(const UInt32 *)values count:(NSUInteger)count;
- (TestAllTypesLiteBuilder *)clearRepeatedUint32;

- (PBAppendableArray *)repeatedUint64;
- (UInt64)repeatedUint64AtIndex:(NSUInteger)index;
- (TestAllTypesLiteBuilder *)addRepeatedUint64:(UInt64)value;
- (TestAllTypesLiteBuilder *)setRepeatedUint64Array:(NSArray *)array;
- (TestAllTypesLiteBuilder *)setRepeatedUint64Values:(const UInt64 *)values count:(NSUInteger)count;
- (TestAllTypesLiteBuilder *)clearRepeatedUint64;

- (PBAppendableArray *)repeatedSint32;
- (SInt32)repeatedSint32AtIndex:(NSUInteger)index;
- (TestAllTypesLiteBuilder *)addRepeatedSint32:(SInt32)value;
- (TestAllTypesLiteBuilder *)setRepeatedSint32Array:(NSArray *)array;
- (TestAllTypesLiteBuilder *)setRepeatedSint32Values:(const SInt32 *)values count:(NSUInteger)count;
- (TestAllTypesLiteBuilder *)clearRepeatedSint32;

- (PBAppendableArray *)repeatedSint64;
- (SInt64)repeatedSint64AtIndex:(NSUInteger)index;
- (TestAllTypesLiteBuilder *)addRepeatedSint64:(SInt64)value;
- (TestAllTypesLiteBuilder *)setRepeatedSint64Array:(NSArray *)array;
- (TestAllTypesLiteBuilder *)setRepeatedSint64Values:(const SInt64 *)values count:(NSUInteger)count;
- (TestAllTypesLiteBuilder *)clearRepeatedSint64;

- (PBAppendableArray *)repeatedFixed32;
- (UInt32)repeatedFixed32AtIndex:(NSUInteger)index;
- (TestAllTypesLiteBuilder *)addRepeatedFixed32:(UInt32)value;
- (TestAllTypesLiteBuilder *)setRepeatedFixed32Array:(NSArray *)array;
- (TestAllTypesLiteBuilder *)setRepeatedFixed32Values:(const UInt32 *)values count:(NSUInteger)count;
- (TestAllTypesLiteBuilder *)clearRepeatedFixed32;

- (PBAppendableArray *)repeatedFixed64;
- (UInt64)repeatedFixed64AtIndex:(NSUInteger)index;
- (TestAllTypesLiteBuilder *)addRepeatedFixed64:(UInt64)value;
- (TestAllTypesLiteBuilder *)setRepeatedFixed64Array:(NSArray *)array;
- (TestAllTypesLiteBuilder *)setRepeatedFixed64Values:(const UInt64 *)values count:(NSUInteger)count;
- (TestAllTypesLiteBuilder *)clearRepeatedFixed64;

- (PBAppendableArray *)repeatedSfixed32;
- (SInt32)repeatedSfixed32AtIndex:(NSUInteger)index;
- (TestAllTypesLiteBuilder *)addRepeatedSfixed32:(SInt32)value;
- (TestAllTypesLiteBuilder *)setRepeatedSfixed32Array:(NSArray *)array;
- (TestAllTypesLiteBuilder *)setRepeatedSfixed32Values:(const SInt32 *)values count:(NSUInteger)count;
- (TestAllTypesLiteBuilder *)clearRepeatedSfixed32;

- (PBAppendableArray *)repeatedSfixed64;
- (SInt64)repeatedSfixed64AtIndex:(NSUInteger)index;
- (TestAllTypesLiteBuilder *)addRepeatedSfixed64:(SInt64)value;
- (TestAllTypesLiteBuilder *)setRepeatedSfixed64Array:(NSArray *)array;
- (TestAllTypesLiteBuilder *)setRepeatedSfixed64Values:(const SInt64 *)values count:(NSUInteger)count;
- (TestAllTypesLiteBuilder *)clearRepeatedSfixed64;

- (PBAppendableArray *)repeatedFloat;
- (Float32)repeatedFloatAtIndex:(NSUInteger)index;
- (TestAllTypesLiteBuilder *)addRepeatedFloat:(Float32)value;
- (TestAllTypesLiteBuilder *)setRepeatedFloatArray:(NSArray *)array;
- (TestAllTypesLiteBuilder *)setRepeatedFloatValues:(const Float32 *)values count:(NSUInteger)count;
- (TestAllTypesLiteBuilder *)clearRepeatedFloat;

- (PBAppendableArray *)repeatedDouble;
- (Float64)repeatedDoubleAtIndex:(NSUInteger)index;
- (TestAllTypesLiteBuilder *)addRepeatedDouble:(Float64)value;
- (TestAllTypesLiteBuilder *)setRepeatedDoubleArray:(NSArray *)array;
- (TestAllTypesLiteBuilder *)setRepeatedDoubleValues:(const Float64 *)values count:(NSUInteger)count;
- (TestAllTypesLiteBuilder *)clearRepeatedDouble;

- (PBAppendableArray *)repeatedBool;
- (BOOL)repeatedBoolAtIndex:(NSUInteger)index;
- (TestAllTypesLiteBuilder *)addRepeatedBool:(BOOL)value;
- (TestAllTypesLiteBuilder *)setRepeatedBoolArray:(NSArray *)array;
- (TestAllTypesLiteBuilder *)setRepeatedBoolValues:(const BOOL *)values count:(NSUInteger)count;
- (TestAllTypesLiteBuilder *)clearRepeatedBool;

- (NSMutableArray *)repeatedString;
- (NSString*)repeatedStringAtIndex:(NSUInteger)index;
- (TestAllTypesLiteBuilder *)addRepeatedString:(NSString*)value;
- (TestAllTypesLiteBuilder *)setRepeatedStringArray:(NSArray *)array;
- (TestAllTypesLiteBuilder *)clearRepeatedString;

- (NSMutableArray *)repeatedBytes;
- (NSData*)repeatedBytesAtIndex:(NSUInteger)index;
- (TestAllTypesLiteBuilder *)addRepeatedBytes:(NSData*)value;
- (TestAllTypesLiteBuilder *)setRepeatedBytesArray:(NSArray *)array;
- (TestAllTypesLiteBuilder *)clearRepeatedBytes;

- (NSMutableArray *)repeatedGroup;
- (TestAllTypesLiteRepeatedGroup*)repeatedGroupAtIndex:(NSUInteger)index;
- (TestAllTypesLiteBuilder *)addRepeatedGroup:(TestAllTypesLiteRepeatedGroup*)value;
- (TestAllTypesLiteBuilder *)setRepeatedGroupArray:(NSArray *)array;
- (TestAllTypesLiteBuilder *)clearRepeatedGroup;

- (NSMutableArray *)repeatedNestedMessage;
- (TestAllTypesLiteNestedMessage*)repeatedNestedMessageAtIndex:(NSUInteger)index;
- (TestAllTypesLiteBuilder *)addRepeatedNestedMessage:(TestAllTypesLiteNestedMessage*)value;
- (TestAllTypesLiteBuilder *)setRepeatedNestedMessageArray:(NSArray *)array;
- (TestAllTypesLiteBuilder *)clearRepeatedNestedMessage;

- (NSMutableArray *)repeatedForeignMessage;
- (ForeignMessageLite*)repeatedForeignMessageAtIndex:(NSUInteger)index;
- (TestAllTypesLiteBuilder *)addRepeatedForeignMessage:(ForeignMessageLite*)value;
- (TestAllTypesLiteBuilder *)setRepeatedForeignMessageArray:(NSArray *)array;
- (TestAllTypesLiteBuilder *)clearRepeatedForeignMessage;

- (NSMutableArray *)repeatedImportMessage;
- (ImportMessageLite*)repeatedImportMessageAtIndex:(NSUInteger)index;
- (TestAllTypesLiteBuilder *)addRepeatedImportMessage:(ImportMessageLite*)value;
- (TestAllTypesLiteBuilder *)setRepeatedImportMessageArray:(NSArray *)array;
- (TestAllTypesLiteBuilder *)clearRepeatedImportMessage;

- (PBAppendableArray *)repeatedNestedEnum;
- (TestAllTypesLiteNestedEnum)repeatedNestedEnumAtIndex:(NSUInteger)index;
- (TestAllTypesLiteBuilder *)addRepeatedNestedEnum:(TestAllTypesLiteNestedEnum)value;
- (TestAllTypesLiteBuilder *)setRepeatedNestedEnumArray:(NSArray *)array;
- (TestAllTypesLiteBuilder *)setRepeatedNestedEnumValues:(const TestAllTypesLiteNestedEnum *)values count:(NSUInteger)count;
- (TestAllTypesLiteBuilder *)clearRepeatedNestedEnum;

- (PBAppendableArray *)repeatedForeignEnum;
- (ForeignEnumLite)repeatedForeignEnumAtIndex:(NSUInteger)index;
- (TestAllTypesLiteBuilder *)addRepeatedForeignEnum:(ForeignEnumLite)value;
- (TestAllTypesLiteBuilder *)setRepeatedForeignEnumArray:(NSArray *)array;
- (TestAllTypesLiteBuilder *)setRepeatedForeignEnumValues:(const ForeignEnumLite *)values count:(NSUInteger)count;
- (TestAllTypesLiteBuilder *)clearRepeatedForeignEnum;

- (PBAppendableArray *)repeatedImportEnum;
- (ImportEnumLite)repeatedImportEnumAtIndex:(NSUInteger)index;
- (TestAllTypesLiteBuilder *)addRepeatedImportEnum:(ImportEnumLite)value;
- (TestAllTypesLiteBuilder *)setRepeatedImportEnumArray:(NSArray *)array;
- (TestAllTypesLiteBuilder *)setRepeatedImportEnumValues:(const ImportEnumLite *)values count:(NSUInteger)count;
- (TestAllTypesLiteBuilder *)clearRepeatedImportEnum;

- (NSMutableArray *)repeatedStringPiece;
- (NSString*)repeatedStringPieceAtIndex:(NSUInteger)index;
- (TestAllTypesLiteBuilder *)addRepeatedStringPiece:(NSString*)value;
- (TestAllTypesLiteBuilder *)setRepeatedStringPieceArray:(NSArray *)array;
- (TestAllTypesLiteBuilder *)clearRepeatedStringPiece;

- (NSMutableArray *)repeatedCord;
- (NSString*)repeatedCordAtIndex:(NSUInteger)index;
- (TestAllTypesLiteBuilder *)addRepeatedCord:(NSString*)value;
- (TestAllTypesLiteBuilder *)setRepeatedCordArray:(NSArray *)array;
- (TestAllTypesLiteBuilder *)clearRepeatedCord;

- (NSMutableArray *)repeatedLazyMessage;
- (TestAllTypesLiteNestedMessage*)repeatedLazyMessageAtIndex:(NSUInteger)index;
- (TestAllTypesLiteBuilder *)addRepeatedLazyMessage:(TestAllTypesLiteNestedMessage*)value;
- (TestAllTypesLiteBuilder *)setRepeatedLazyMessageArray:(NSArray *)array;
- (TestAllTypesLiteBuilder *)clearRepeatedLazyMessage;

- (BOOL) hasDefaultInt32;
- (SInt32) defaultInt32;
- (TestAllTypesLiteBuilder*) setDefaultInt32:(SInt32) value;
- (TestAllTypesLiteBuilder*) clearDefaultInt32;

- (BOOL) hasDefaultInt64;
- (SInt64) defaultInt64;
- (TestAllTypesLiteBuilder*) setDefaultInt64:(SInt64) value;
- (TestAllTypesLiteBuilder*) clearDefaultInt64;

- (BOOL) hasDefaultUint32;
- (UInt32) defaultUint32;
- (TestAllTypesLiteBuilder*) setDefaultUint32:(UInt32) value;
- (TestAllTypesLiteBuilder*) clearDefaultUint32;

- (BOOL) hasDefaultUint64;
- (UInt64) defaultUint64;
- (TestAllTypesLiteBuilder*) setDefaultUint64:(UInt64) value;
- (TestAllTypesLiteBuilder*) clearDefaultUint64;

- (BOOL) hasDefaultSint32;
- (SInt32) defaultSint32;
- (TestAllTypesLiteBuilder*) setDefaultSint32:(SInt32) value;
- (TestAllTypesLiteBuilder*) clearDefaultSint32;

- (BOOL) hasDefaultSint64;
- (SInt64) defaultSint64;
- (TestAllTypesLiteBuilder*) setDefaultSint64:(SInt64) value;
- (TestAllTypesLiteBuilder*) clearDefaultSint64;

- (BOOL) hasDefaultFixed32;
- (UInt32) defaultFixed32;
- (TestAllTypesLiteBuilder*) setDefaultFixed32:(UInt32) value;
- (TestAllTypesLiteBuilder*) clearDefaultFixed32;

- (BOOL) hasDefaultFixed64;
- (UInt64) defaultFixed64;
- (TestAllTypesLiteBuilder*) setDefaultFixed64:(UInt64) value;
- (TestAllTypesLiteBuilder*) clearDefaultFixed64;

- (BOOL) hasDefaultSfixed32;
- (SInt32) defaultSfixed32;
- (TestAllTypesLiteBuilder*) setDefaultSfixed32:(SInt32) value;
- (TestAllTypesLiteBuilder*) clearDefaultSfixed32;

- (BOOL) hasDefaultSfixed64;
- (SInt64) defaultSfixed64;
- (TestAllTypesLiteBuilder*) setDefaultSfixed64:(SInt64) value;
- (TestAllTypesLiteBuilder*) clearDefaultSfixed64;

- (BOOL) hasDefaultFloat;
- (Float32) defaultFloat;
- (TestAllTypesLiteBuilder*) setDefaultFloat:(Float32) value;
- (TestAllTypesLiteBuilder*) clearDefaultFloat;

- (BOOL) hasDefaultDouble;
- (Float64) defaultDouble;
- (TestAllTypesLiteBuilder*) setDefaultDouble:(Float64) value;
- (TestAllTypesLiteBuilder*) clearDefaultDouble;

- (BOOL) hasDefaultBool;
- (BOOL) defaultBool;
- (TestAllTypesLiteBuilder*) setDefaultBool:(BOOL) value;
- (TestAllTypesLiteBuilder*) clearDefaultBool;

- (BOOL) hasDefaultString;
- (NSString*) defaultString;
- (TestAllTypesLiteBuilder*) setDefaultString:(NSString*) value;
- (TestAllTypesLiteBuilder*) clearDefaultString;

- (BOOL) hasDefaultBytes;
- (NSData*) defaultBytes;
- (TestAllTypesLiteBuilder*) setDefaultBytes:(NSData*) value;
- (TestAllTypesLiteBuilder*) clearDefaultBytes;

- (BOOL) hasDefaultNestedEnum;
- (TestAllTypesLiteNestedEnum) defaultNestedEnum;
- (TestAllTypesLiteBuilder*) setDefaultNestedEnum:(TestAllTypesLiteNestedEnum) value;
- (TestAllTypesLiteBuilder*) clearDefaultNestedEnum;

- (BOOL) hasDefaultForeignEnum;
- (ForeignEnumLite) defaultForeignEnum;
- (TestAllTypesLiteBuilder*) setDefaultForeignEnum:(ForeignEnumLite) value;
- (TestAllTypesLiteBuilder*) clearDefaultForeignEnum;

- (BOOL) hasDefaultImportEnum;
- (ImportEnumLite) defaultImportEnum;
- (TestAllTypesLiteBuilder*) setDefaultImportEnum:(ImportEnumLite) value;
- (TestAllTypesLiteBuilder*) clearDefaultImportEnum;

- (BOOL) hasDefaultStringPiece;
- (NSString*) defaultStringPiece;
- (TestAllTypesLiteBuilder*) setDefaultStringPiece:(NSString*) value;
- (TestAllTypesLiteBuilder*) clearDefaultStringPiece;

- (BOOL) hasDefaultCord;
- (NSString*) defaultCord;
- (TestAllTypesLiteBuilder*) setDefaultCord:(NSString*) value;
- (TestAllTypesLiteBuilder*) clearDefaultCord;

- (BOOL) hasOneofUint32;
- (UInt32) oneofUint32;
- (TestAllTypesLiteBuilder*) setOneofUint32:(UInt32) value;
- (TestAllTypesLiteBuilder*) clearOneofUint32;

- (BOOL) hasOneofNestedMessage;
- (TestAllTypesLiteNestedMessage*) oneofNestedMessage;
- (TestAllTypesLiteBuilder*) setOneofNestedMessage:(TestAllTypesLiteNestedMessage*) value;
- (TestAllTypesLiteBuilder*) setOneofNestedMessageBuilder:(TestAllTypesLiteNestedMessageBuilder*) builderForValue;
- (TestAllTypesLiteBuilder*) mergeOneofNestedMessage:(TestAllTypesLiteNestedMessage*) value;
- (TestAllTypesLiteBuilder*) clearOneofNestedMessage;

- (BOOL) hasOneofString;
- (NSString*) oneofString;
- (TestAllTypesLiteBuilder*) setOneofString:(NSString*) value;
- (TestAllTypesLiteBuilder*) clearOneofString;

- (BOOL) hasOneofBytes;
- (NSData*) oneofBytes;
- (TestAllTypesLiteBuilder*) setOneofBytes:(NSData*) value;
- (TestAllTypesLiteBuilder*) clearOneofBytes;
@end

@interface ForeignMessageLite : PBGeneratedMessage {
@private
  BOOL hasC_:1;
  SInt32 c;
}
- (BOOL) hasC;
@property (readonly) SInt32 c;

+ (ForeignMessageLite*) defaultInstance;
- (ForeignMessageLite*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (ForeignMessageLiteBuilder*) builder;
+ (ForeignMessageLiteBuilder*) builder;
+ (ForeignMessageLiteBuilder*) builderWithPrototype:(ForeignMessageLite*) prototype;
- (ForeignMessageLiteBuilder*) toBuilder;

+ (ForeignMessageLite*) parseFromData:(NSData*) data;
+ (ForeignMessageLite*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ForeignMessageLite*) parseFromInputStream:(NSInputStream*) input;
+ (ForeignMessageLite*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ForeignMessageLite*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (ForeignMessageLite*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface ForeignMessageLiteBuilder : PBGeneratedMessageBuilder {
@private
  ForeignMessageLite* result;
}

- (ForeignMessageLite*) defaultInstance;

- (ForeignMessageLiteBuilder*) clear;
- (ForeignMessageLiteBuilder*) clone;

- (ForeignMessageLite*) build;
- (ForeignMessageLite*) buildPartial;

- (ForeignMessageLiteBuilder*) mergeFrom:(ForeignMessageLite*) other;
- (ForeignMessageLiteBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (ForeignMessageLiteBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasC;
- (SInt32) c;
- (ForeignMessageLiteBuilder*) setC:(SInt32) value;
- (ForeignMessageLiteBuilder*) clearC;
@end

@interface TestPackedTypesLite : PBGeneratedMessage {
@private
  PBAppendableArray * packedBoolArray;
  SInt32 packedBoolMemoizedSerializedSize;
  PBAppendableArray * packedDoubleArray;
  SInt32 packedDoubleMemoizedSerializedSize;
  PBAppendableArray * packedFloatArray;
  SInt32 packedFloatMemoizedSerializedSize;
  PBAppendableArray * packedInt64Array;
  SInt32 packedInt64MemoizedSerializedSize;
  PBAppendableArray * packedUint64Array;
  SInt32 packedUint64MemoizedSerializedSize;
  PBAppendableArray * packedInt32Array;
  SInt32 packedInt32MemoizedSerializedSize;
  PBAppendableArray * packedFixed64Array;
  SInt32 packedFixed64MemoizedSerializedSize;
  PBAppendableArray * packedFixed32Array;
  SInt32 packedFixed32MemoizedSerializedSize;
  PBAppendableArray * packedUint32Array;
  SInt32 packedUint32MemoizedSerializedSize;
  PBAppendableArray * packedEnumArray;
  SInt32 packedEnumMemoizedSerializedSize;
  PBAppendableArray * packedSfixed32Array;
  SInt32 packedSfixed32MemoizedSerializedSize;
  PBAppendableArray * packedSfixed64Array;
  SInt32 packedSfixed64MemoizedSerializedSize;
  PBAppendableArray * packedSint32Array;
  SInt32 packedSint32MemoizedSerializedSize;
  PBAppendableArray * packedSint64Array;
  SInt32 packedSint64MemoizedSerializedSize;
}
@property (readonly, strong) PBArray * packedInt32;
@property (readonly, strong) PBArray * packedInt64;
@property (readonly, strong) PBArray * packedUint32;
@property (readonly, strong) PBArray * packedUint64;
@property (readonly, strong) PBArray * packedSint32;
@property (readonly, strong) PBArray * packedSint64;
@property (readonly, strong) PBArray * packedFixed32;
@property (readonly, strong) PBArray * packedFixed64;
@property (readonly, strong) PBArray * packedSfixed32;
@property (readonly, strong) PBArray * packedSfixed64;
@property (readonly, strong) PBArray * packedFloat;
@property (readonly, strong) PBArray * packedDouble;
@property (readonly, strong) PBArray * packedBool;
@property (readonly, strong) PBArray * packedEnum;
- (SInt32)packedInt32AtIndex:(NSUInteger)index;
- (SInt64)packedInt64AtIndex:(NSUInteger)index;
- (UInt32)packedUint32AtIndex:(NSUInteger)index;
- (UInt64)packedUint64AtIndex:(NSUInteger)index;
- (SInt32)packedSint32AtIndex:(NSUInteger)index;
- (SInt64)packedSint64AtIndex:(NSUInteger)index;
- (UInt32)packedFixed32AtIndex:(NSUInteger)index;
- (UInt64)packedFixed64AtIndex:(NSUInteger)index;
- (SInt32)packedSfixed32AtIndex:(NSUInteger)index;
- (SInt64)packedSfixed64AtIndex:(NSUInteger)index;
- (Float32)packedFloatAtIndex:(NSUInteger)index;
- (Float64)packedDoubleAtIndex:(NSUInteger)index;
- (BOOL)packedBoolAtIndex:(NSUInteger)index;
- (ForeignEnumLite)packedEnumAtIndex:(NSUInteger)index;

+ (TestPackedTypesLite*) defaultInstance;
- (TestPackedTypesLite*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (TestPackedTypesLiteBuilder*) builder;
+ (TestPackedTypesLiteBuilder*) builder;
+ (TestPackedTypesLiteBuilder*) builderWithPrototype:(TestPackedTypesLite*) prototype;
- (TestPackedTypesLiteBuilder*) toBuilder;

+ (TestPackedTypesLite*) parseFromData:(NSData*) data;
+ (TestPackedTypesLite*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TestPackedTypesLite*) parseFromInputStream:(NSInputStream*) input;
+ (TestPackedTypesLite*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TestPackedTypesLite*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (TestPackedTypesLite*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface TestPackedTypesLiteBuilder : PBGeneratedMessageBuilder {
@private
  TestPackedTypesLite* result;
}

- (TestPackedTypesLite*) defaultInstance;

- (TestPackedTypesLiteBuilder*) clear;
- (TestPackedTypesLiteBuilder*) clone;

- (TestPackedTypesLite*) build;
- (TestPackedTypesLite*) buildPartial;

- (TestPackedTypesLiteBuilder*) mergeFrom:(TestPackedTypesLite*) other;
- (TestPackedTypesLiteBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (TestPackedTypesLiteBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (PBAppendableArray *)packedInt32;
- (SInt32)packedInt32AtIndex:(NSUInteger)index;
- (TestPackedTypesLiteBuilder *)addPackedInt32:(SInt32)value;
- (TestPackedTypesLiteBuilder *)setPackedInt32Array:(NSArray *)array;
- (TestPackedTypesLiteBuilder *)setPackedInt32Values:(const SInt32 *)values count:(NSUInteger)count;
- (TestPackedTypesLiteBuilder *)clearPackedInt32;

- (PBAppendableArray *)packedInt64;
- (SInt64)packedInt64AtIndex:(NSUInteger)index;
- (TestPackedTypesLiteBuilder *)addPackedInt64:(SInt64)value;
- (TestPackedTypesLiteBuilder *)setPackedInt64Array:(NSArray *)array;
- (TestPackedTypesLiteBuilder *)setPackedInt64Values:(const SInt64 *)values count:(NSUInteger)count;
- (TestPackedTypesLiteBuilder *)clearPackedInt64;

- (PBAppendableArray *)packedUint32;
- (UInt32)packedUint32AtIndex:(NSUInteger)index;
- (TestPackedTypesLiteBuilder *)addPackedUint32:(UInt32)value;
- (TestPackedTypesLiteBuilder *)setPackedUint32Array:(NSArray *)array;
- (TestPackedTypesLiteBuilder *)setPackedUint32Values:(const UInt32 *)values count:(NSUInteger)count;
- (TestPackedTypesLiteBuilder *)clearPackedUint32;

- (PBAppendableArray *)packedUint64;
- (UInt64)packedUint64AtIndex:(NSUInteger)index;
- (TestPackedTypesLiteBuilder *)addPackedUint64:(UInt64)value;
- (TestPackedTypesLiteBuilder *)setPackedUint64Array:(NSArray *)array;
- (TestPackedTypesLiteBuilder *)setPackedUint64Values:(const UInt64 *)values count:(NSUInteger)count;
- (TestPackedTypesLiteBuilder *)clearPackedUint64;

- (PBAppendableArray *)packedSint32;
- (SInt32)packedSint32AtIndex:(NSUInteger)index;
- (TestPackedTypesLiteBuilder *)addPackedSint32:(SInt32)value;
- (TestPackedTypesLiteBuilder *)setPackedSint32Array:(NSArray *)array;
- (TestPackedTypesLiteBuilder *)setPackedSint32Values:(const SInt32 *)values count:(NSUInteger)count;
- (TestPackedTypesLiteBuilder *)clearPackedSint32;

- (PBAppendableArray *)packedSint64;
- (SInt64)packedSint64AtIndex:(NSUInteger)index;
- (TestPackedTypesLiteBuilder *)addPackedSint64:(SInt64)value;
- (TestPackedTypesLiteBuilder *)setPackedSint64Array:(NSArray *)array;
- (TestPackedTypesLiteBuilder *)setPackedSint64Values:(const SInt64 *)values count:(NSUInteger)count;
- (TestPackedTypesLiteBuilder *)clearPackedSint64;

- (PBAppendableArray *)packedFixed32;
- (UInt32)packedFixed32AtIndex:(NSUInteger)index;
- (TestPackedTypesLiteBuilder *)addPackedFixed32:(UInt32)value;
- (TestPackedTypesLiteBuilder *)setPackedFixed32Array:(NSArray *)array;
- (TestPackedTypesLiteBuilder *)setPackedFixed32Values:(const UInt32 *)values count:(NSUInteger)count;
- (TestPackedTypesLiteBuilder *)clearPackedFixed32;

- (PBAppendableArray *)packedFixed64;
- (UInt64)packedFixed64AtIndex:(NSUInteger)index;
- (TestPackedTypesLiteBuilder *)addPackedFixed64:(UInt64)value;
- (TestPackedTypesLiteBuilder *)setPackedFixed64Array:(NSArray *)array;
- (TestPackedTypesLiteBuilder *)setPackedFixed64Values:(const UInt64 *)values count:(NSUInteger)count;
- (TestPackedTypesLiteBuilder *)clearPackedFixed64;

- (PBAppendableArray *)packedSfixed32;
- (SInt32)packedSfixed32AtIndex:(NSUInteger)index;
- (TestPackedTypesLiteBuilder *)addPackedSfixed32:(SInt32)value;
- (TestPackedTypesLiteBuilder *)setPackedSfixed32Array:(NSArray *)array;
- (TestPackedTypesLiteBuilder *)setPackedSfixed32Values:(const SInt32 *)values count:(NSUInteger)count;
- (TestPackedTypesLiteBuilder *)clearPackedSfixed32;

- (PBAppendableArray *)packedSfixed64;
- (SInt64)packedSfixed64AtIndex:(NSUInteger)index;
- (TestPackedTypesLiteBuilder *)addPackedSfixed64:(SInt64)value;
- (TestPackedTypesLiteBuilder *)setPackedSfixed64Array:(NSArray *)array;
- (TestPackedTypesLiteBuilder *)setPackedSfixed64Values:(const SInt64 *)values count:(NSUInteger)count;
- (TestPackedTypesLiteBuilder *)clearPackedSfixed64;

- (PBAppendableArray *)packedFloat;
- (Float32)packedFloatAtIndex:(NSUInteger)index;
- (TestPackedTypesLiteBuilder *)addPackedFloat:(Float32)value;
- (TestPackedTypesLiteBuilder *)setPackedFloatArray:(NSArray *)array;
- (TestPackedTypesLiteBuilder *)setPackedFloatValues:(const Float32 *)values count:(NSUInteger)count;
- (TestPackedTypesLiteBuilder *)clearPackedFloat;

- (PBAppendableArray *)packedDouble;
- (Float64)packedDoubleAtIndex:(NSUInteger)index;
- (TestPackedTypesLiteBuilder *)addPackedDouble:(Float64)value;
- (TestPackedTypesLiteBuilder *)setPackedDoubleArray:(NSArray *)array;
- (TestPackedTypesLiteBuilder *)setPackedDoubleValues:(const Float64 *)values count:(NSUInteger)count;
- (TestPackedTypesLiteBuilder *)clearPackedDouble;

- (PBAppendableArray *)packedBool;
- (BOOL)packedBoolAtIndex:(NSUInteger)index;
- (TestPackedTypesLiteBuilder *)addPackedBool:(BOOL)value;
- (TestPackedTypesLiteBuilder *)setPackedBoolArray:(NSArray *)array;
- (TestPackedTypesLiteBuilder *)setPackedBoolValues:(const BOOL *)values count:(NSUInteger)count;
- (TestPackedTypesLiteBuilder *)clearPackedBool;

- (PBAppendableArray *)packedEnum;
- (ForeignEnumLite)packedEnumAtIndex:(NSUInteger)index;
- (TestPackedTypesLiteBuilder *)addPackedEnum:(ForeignEnumLite)value;
- (TestPackedTypesLiteBuilder *)setPackedEnumArray:(NSArray *)array;
- (TestPackedTypesLiteBuilder *)setPackedEnumValues:(const ForeignEnumLite *)values count:(NSUInteger)count;
- (TestPackedTypesLiteBuilder *)clearPackedEnum;
@end

@interface TestAllExtensionsLite : PBExtendableMessage {
@private
}

+ (TestAllExtensionsLite*) defaultInstance;
- (TestAllExtensionsLite*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (TestAllExtensionsLiteBuilder*) builder;
+ (TestAllExtensionsLiteBuilder*) builder;
+ (TestAllExtensionsLiteBuilder*) builderWithPrototype:(TestAllExtensionsLite*) prototype;
- (TestAllExtensionsLiteBuilder*) toBuilder;

+ (TestAllExtensionsLite*) parseFromData:(NSData*) data;
+ (TestAllExtensionsLite*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TestAllExtensionsLite*) parseFromInputStream:(NSInputStream*) input;
+ (TestAllExtensionsLite*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TestAllExtensionsLite*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (TestAllExtensionsLite*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface TestAllExtensionsLiteBuilder : PBExtendableMessageBuilder {
@private
  TestAllExtensionsLite* result;
}

- (TestAllExtensionsLite*) defaultInstance;

- (TestAllExtensionsLiteBuilder*) clear;
- (TestAllExtensionsLiteBuilder*) clone;

- (TestAllExtensionsLite*) build;
- (TestAllExtensionsLite*) buildPartial;

- (TestAllExtensionsLiteBuilder*) mergeFrom:(TestAllExtensionsLite*) other;
- (TestAllExtensionsLiteBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (TestAllExtensionsLiteBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface OptionalGroup_extension_lite : PBGeneratedMessage {
@private
  BOOL hasA_:1;
  SInt32 a;
}
- (BOOL) hasA;
@property (readonly) SInt32 a;

+ (OptionalGroup_extension_lite*) defaultInstance;
- (OptionalGroup_extension_lite*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (OptionalGroup_extension_liteBuilder*) builder;
+ (OptionalGroup_extension_liteBuilder*) builder;
+ (OptionalGroup_extension_liteBuilder*) builderWithPrototype:(OptionalGroup_extension_lite*) prototype;
- (OptionalGroup_extension_liteBuilder*) toBuilder;

+ (OptionalGroup_extension_lite*) parseFromData:(NSData*) data;
+ (OptionalGroup_extension_lite*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (OptionalGroup_extension_lite*) parseFromInputStream:(NSInputStream*) input;
+ (OptionalGroup_extension_lite*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (OptionalGroup_extension_lite*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (OptionalGroup_extension_lite*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface OptionalGroup_extension_liteBuilder : PBGeneratedMessageBuilder {
@private
  OptionalGroup_extension_lite* result;
}

- (OptionalGroup_extension_lite*) defaultInstance;

- (OptionalGroup_extension_liteBuilder*) clear;
- (OptionalGroup_extension_liteBuilder*) clone;

- (OptionalGroup_extension_lite*) build;
- (OptionalGroup_extension_lite*) buildPartial;

- (OptionalGroup_extension_liteBuilder*) mergeFrom:(OptionalGroup_extension_lite*) other;
- (OptionalGroup_extension_liteBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (OptionalGroup_extension_liteBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasA;
- (SInt32) a;
- (OptionalGroup_extension_liteBuilder*) setA:(SInt32) value;
- (OptionalGroup_extension_liteBuilder*) clearA;
@end

@interface RepeatedGroup_extension_lite : PBGeneratedMessage {
@private
  BOOL hasA_:1;
  SInt32 a;
}
- (BOOL) hasA;
@property (readonly) SInt32 a;

+ (RepeatedGroup_extension_lite*) defaultInstance;
- (RepeatedGroup_extension_lite*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (RepeatedGroup_extension_liteBuilder*) builder;
+ (RepeatedGroup_extension_liteBuilder*) builder;
+ (RepeatedGroup_extension_liteBuilder*) builderWithPrototype:(RepeatedGroup_extension_lite*) prototype;
- (RepeatedGroup_extension_liteBuilder*) toBuilder;

+ (RepeatedGroup_extension_lite*) parseFromData:(NSData*) data;
+ (RepeatedGroup_extension_lite*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (RepeatedGroup_extension_lite*) parseFromInputStream:(NSInputStream*) input;
+ (RepeatedGroup_extension_lite*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (RepeatedGroup_extension_lite*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (RepeatedGroup_extension_lite*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface RepeatedGroup_extension_liteBuilder : PBGeneratedMessageBuilder {
@private
  RepeatedGroup_extension_lite* result;
}

- (RepeatedGroup_extension_lite*) defaultInstance;

- (RepeatedGroup_extension_liteBuilder*) clear;
- (RepeatedGroup_extension_liteBuilder*) clone;

- (RepeatedGroup_extension_lite*) build;
- (RepeatedGroup_extension_lite*) buildPartial;

- (RepeatedGroup_extension_liteBuilder*) mergeFrom:(RepeatedGroup_extension_lite*) other;
- (RepeatedGroup_extension_liteBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (RepeatedGroup_extension_liteBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasA;
- (SInt32) a;
- (RepeatedGroup_extension_liteBuilder*) setA:(SInt32) value;
- (RepeatedGroup_extension_liteBuilder*) clearA;
@end

@interface TestPackedExtensionsLite : PBExtendableMessage {
@private
}

+ (TestPackedExtensionsLite*) defaultInstance;
- (TestPackedExtensionsLite*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (TestPackedExtensionsLiteBuilder*) builder;
+ (TestPackedExtensionsLiteBuilder*) builder;
+ (TestPackedExtensionsLiteBuilder*) builderWithPrototype:(TestPackedExtensionsLite*) prototype;
- (TestPackedExtensionsLiteBuilder*) toBuilder;

+ (TestPackedExtensionsLite*) parseFromData:(NSData*) data;
+ (TestPackedExtensionsLite*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TestPackedExtensionsLite*) parseFromInputStream:(NSInputStream*) input;
+ (TestPackedExtensionsLite*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TestPackedExtensionsLite*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (TestPackedExtensionsLite*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface TestPackedExtensionsLiteBuilder : PBExtendableMessageBuilder {
@private
  TestPackedExtensionsLite* result;
}

- (TestPackedExtensionsLite*) defaultInstance;

- (TestPackedExtensionsLiteBuilder*) clear;
- (TestPackedExtensionsLiteBuilder*) clone;

- (TestPackedExtensionsLite*) build;
- (TestPackedExtensionsLite*) buildPartial;

- (TestPackedExtensionsLiteBuilder*) mergeFrom:(TestPackedExtensionsLite*) other;
- (TestPackedExtensionsLiteBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (TestPackedExtensionsLiteBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface TestNestedExtensionLite : PBGeneratedMessage {
@private
}

+ (TestNestedExtensionLite*) defaultInstance;
- (TestNestedExtensionLite*) defaultInstance;

+ (id<PBExtensionField>) nestedExtension;
- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (TestNestedExtensionLiteBuilder*) builder;
+ (TestNestedExtensionLiteBuilder*) builder;
+ (TestNestedExtensionLiteBuilder*) builderWithPrototype:(TestNestedExtensionLite*) prototype;
- (TestNestedExtensionLiteBuilder*) toBuilder;

+ (TestNestedExtensionLite*) parseFromData:(NSData*) data;
+ (TestNestedExtensionLite*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TestNestedExtensionLite*) parseFromInputStream:(NSInputStream*) input;
+ (TestNestedExtensionLite*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TestNestedExtensionLite*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (TestNestedExtensionLite*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface TestNestedExtensionLiteBuilder : PBGeneratedMessageBuilder {
@private
  TestNestedExtensionLite* result;
}

- (TestNestedExtensionLite*) defaultInstance;

- (TestNestedExtensionLiteBuilder*) clear;
- (TestNestedExtensionLiteBuilder*) clone;

- (TestNestedExtensionLite*) build;
- (TestNestedExtensionLite*) buildPartial;

- (TestNestedExtensionLiteBuilder*) mergeFrom:(TestNestedExtensionLite*) other;
- (TestNestedExtensionLiteBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (TestNestedExtensionLiteBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface TestDeprecatedLite : PBGeneratedMessage {
@private
  BOOL hasDeprecatedField_:1;
  SInt32 deprecatedField;
}
- (BOOL) hasDeprecatedField;
@property (readonly) SInt32 deprecatedField;

+ (TestDeprecatedLite*) defaultInstance;
- (TestDeprecatedLite*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (TestDeprecatedLiteBuilder*) builder;
+ (TestDeprecatedLiteBuilder*) builder;
+ (TestDeprecatedLiteBuilder*) builderWithPrototype:(TestDeprecatedLite*) prototype;
- (TestDeprecatedLiteBuilder*) toBuilder;

+ (TestDeprecatedLite*) parseFromData:(NSData*) data;
+ (TestDeprecatedLite*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TestDeprecatedLite*) parseFromInputStream:(NSInputStream*) input;
+ (TestDeprecatedLite*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TestDeprecatedLite*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (TestDeprecatedLite*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface TestDeprecatedLiteBuilder : PBGeneratedMessageBuilder {
@private
  TestDeprecatedLite* result;
}

- (TestDeprecatedLite*) defaultInstance;

- (TestDeprecatedLiteBuilder*) clear;
- (TestDeprecatedLiteBuilder*) clone;

- (TestDeprecatedLite*) build;
- (TestDeprecatedLite*) buildPartial;

- (TestDeprecatedLiteBuilder*) mergeFrom:(TestDeprecatedLite*) other;
- (TestDeprecatedLiteBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (TestDeprecatedLiteBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasDeprecatedField;
- (SInt32) deprecatedField;
- (TestDeprecatedLiteBuilder*) setDeprecatedField:(SInt32) value;
- (TestDeprecatedLiteBuilder*) clearDeprecatedField;
@end

@interface TestParsingMergeLite : PBExtendableMessage {
@private
  BOOL hasOptionalGroup_:1;
  BOOL hasRequiredAllTypes_:1;
  BOOL hasOptionalAllTypes_:1;
  TestParsingMergeLiteOptionalGroup* optionalGroup;
  TestAllTypesLite* requiredAllTypes;
  TestAllTypesLite* optionalAllTypes;
  NSMutableArray * repeatedGroupArray;
  NSMutableArray * repeatedAllTypesArray;
}
- (BOOL) hasRequiredAllTypes;
- (BOOL) hasOptionalAllTypes;
- (BOOL) hasOptionalGroup;
@property (readonly, strong) TestAllTypesLite* requiredAllTypes;
@property (readonly, strong) TestAllTypesLite* optionalAllTypes;
@property (readonly, strong) NSArray * repeatedAllTypes;
@property (readonly, strong) TestParsingMergeLiteOptionalGroup* optionalGroup;
@property (readonly, strong) NSArray * repeatedGroup;
- (TestAllTypesLite*)repeatedAllTypesAtIndex:(NSUInteger)index;
- (TestParsingMergeLiteRepeatedGroup*)repeatedGroupAtIndex:(NSUInteger)index;

+ (TestParsingMergeLite*) defaultInstance;
- (TestParsingMergeLite*) defaultInstance;

+ (id<PBExtensionField>) optionalExt;
+ (id<PBExtensionField>) repeatedExt;
- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (TestParsingMergeLiteBuilder*) builder;
+ (TestParsingMergeLiteBuilder*) builder;
+ (TestParsingMergeLiteBuilder*) builderWithPrototype:(TestParsingMergeLite*) prototype;
- (TestParsingMergeLiteBuilder*) toBuilder;

+ (TestParsingMergeLite*) parseFromData:(NSData*) data;
+ (TestParsingMergeLite*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TestParsingMergeLite*) parseFromInputStream:(NSInputStream*) input;
+ (TestParsingMergeLite*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TestParsingMergeLite*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (TestParsingMergeLite*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface TestParsingMergeLiteRepeatedFieldsGenerator : PBGeneratedMessage {
@private
  NSMutableArray * group1Array;
  NSMutableArray * group2Array;
  NSMutableArray * field1Array;
  NSMutableArray * field2Array;
  NSMutableArray * field3Array;
  NSMutableArray * ext1Array;
  NSMutableArray * ext2Array;
}
@property (readonly, strong) NSArray * field1;
@property (readonly, strong) NSArray * field2;
@property (readonly, strong) NSArray * field3;
@property (readonly, strong) NSArray * group1;
@property (readonly, strong) NSArray * group2;
@property (readonly, strong) NSArray * ext1;
@property (readonly, strong) NSArray * ext2;
- (TestAllTypesLite*)field1AtIndex:(NSUInteger)index;
- (TestAllTypesLite*)field2AtIndex:(NSUInteger)index;
- (TestAllTypesLite*)field3AtIndex:(NSUInteger)index;
- (TestParsingMergeLiteRepeatedFieldsGeneratorGroup1*)group1AtIndex:(NSUInteger)index;
- (TestParsingMergeLiteRepeatedFieldsGeneratorGroup2*)group2AtIndex:(NSUInteger)index;
- (TestAllTypesLite*)ext1AtIndex:(NSUInteger)index;
- (TestAllTypesLite*)ext2AtIndex:(NSUInteger)index;

+ (TestParsingMergeLiteRepeatedFieldsGenerator*) defaultInstance;
- (TestParsingMergeLiteRepeatedFieldsGenerator*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (TestParsingMergeLiteRepeatedFieldsGeneratorBuilder*) builder;
+ (TestParsingMergeLiteRepeatedFieldsGeneratorBuilder*) builder;
+ (TestParsingMergeLiteRepeatedFieldsGeneratorBuilder*) builderWithPrototype:(TestParsingMergeLiteRepeatedFieldsGenerator*) prototype;
- (TestParsingMergeLiteRepeatedFieldsGeneratorBuilder*) toBuilder;

+ (TestParsingMergeLiteRepeatedFieldsGenerator*) parseFromData:(NSData*) data;
+ (TestParsingMergeLiteRepeatedFieldsGenerator*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TestParsingMergeLiteRepeatedFieldsGenerator*) parseFromInputStream:(NSInputStream*) input;
+ (TestParsingMergeLiteRepeatedFieldsGenerator*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TestParsingMergeLiteRepeatedFieldsGenerator*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (TestParsingMergeLiteRepeatedFieldsGenerator*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface TestParsingMergeLiteRepeatedFieldsGeneratorGroup1 : PBGeneratedMessage {
@private
  BOOL hasField1_:1;
  TestAllTypesLite* field1;
}
- (BOOL) hasField1;
@property (readonly, strong) TestAllTypesLite* field1;

+ (TestParsingMergeLiteRepeatedFieldsGeneratorGroup1*) defaultInstance;
- (TestParsingMergeLiteRepeatedFieldsGeneratorGroup1*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (TestParsingMergeLiteRepeatedFieldsGeneratorGroup1Builder*) builder;
+ (TestParsingMergeLiteRepeatedFieldsGeneratorGroup1Builder*) builder;
+ (TestParsingMergeLiteRepeatedFieldsGeneratorGroup1Builder*) builderWithPrototype:(TestParsingMergeLiteRepeatedFieldsGeneratorGroup1*) prototype;
- (TestParsingMergeLiteRepeatedFieldsGeneratorGroup1Builder*) toBuilder;

+ (TestParsingMergeLiteRepeatedFieldsGeneratorGroup1*) parseFromData:(NSData*) data;
+ (TestParsingMergeLiteRepeatedFieldsGeneratorGroup1*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TestParsingMergeLiteRepeatedFieldsGeneratorGroup1*) parseFromInputStream:(NSInputStream*) input;
+ (TestParsingMergeLiteRepeatedFieldsGeneratorGroup1*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TestParsingMergeLiteRepeatedFieldsGeneratorGroup1*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (TestParsingMergeLiteRepeatedFieldsGeneratorGroup1*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface TestParsingMergeLiteRepeatedFieldsGeneratorGroup1Builder : PBGeneratedMessageBuilder {
@private
  TestParsingMergeLiteRepeatedFieldsGeneratorGroup1* result;
}

- (TestParsingMergeLiteRepeatedFieldsGeneratorGroup1*) defaultInstance;

- (TestParsingMergeLiteRepeatedFieldsGeneratorGroup1Builder*) clear;
- (TestParsingMergeLiteRepeatedFieldsGeneratorGroup1Builder*) clone;

- (TestParsingMergeLiteRepeatedFieldsGeneratorGroup1*) build;
- (TestParsingMergeLiteRepeatedFieldsGeneratorGroup1*) buildPartial;

- (TestParsingMergeLiteRepeatedFieldsGeneratorGroup1Builder*) mergeFrom:(TestParsingMergeLiteRepeatedFieldsGeneratorGroup1*) other;
- (TestParsingMergeLiteRepeatedFieldsGeneratorGroup1Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (TestParsingMergeLiteRepeatedFieldsGeneratorGroup1Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasField1;
- (TestAllTypesLite*) field1;
- (TestParsingMergeLiteRepeatedFieldsGeneratorGroup1Builder*) setField1:(TestAllTypesLite*) value;
- (TestParsingMergeLiteRepeatedFieldsGeneratorGroup1Builder*) setField1Builder:(TestAllTypesLiteBuilder*) builderForValue;
- (TestParsingMergeLiteRepeatedFieldsGeneratorGroup1Builder*) mergeField1:(TestAllTypesLite*) value;
- (TestParsingMergeLiteRepeatedFieldsGeneratorGroup1Builder*) clearField1;
@end

@interface TestParsingMergeLiteRepeatedFieldsGeneratorGroup2 : PBGeneratedMessage {
@private
  BOOL hasField1_:1;
  TestAllTypesLite* field1;
}
- (BOOL) hasField1;
@property (readonly, strong) TestAllTypesLite* field1;

+ (TestParsingMergeLiteRepeatedFieldsGeneratorGroup2*) defaultInstance;
- (TestParsingMergeLiteRepeatedFieldsGeneratorGroup2*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (TestParsingMergeLiteRepeatedFieldsGeneratorGroup2Builder*) builder;
+ (TestParsingMergeLiteRepeatedFieldsGeneratorGroup2Builder*) builder;
+ (TestParsingMergeLiteRepeatedFieldsGeneratorGroup2Builder*) builderWithPrototype:(TestParsingMergeLiteRepeatedFieldsGeneratorGroup2*) prototype;
- (TestParsingMergeLiteRepeatedFieldsGeneratorGroup2Builder*) toBuilder;

+ (TestParsingMergeLiteRepeatedFieldsGeneratorGroup2*) parseFromData:(NSData*) data;
+ (TestParsingMergeLiteRepeatedFieldsGeneratorGroup2*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TestParsingMergeLiteRepeatedFieldsGeneratorGroup2*) parseFromInputStream:(NSInputStream*) input;
+ (TestParsingMergeLiteRepeatedFieldsGeneratorGroup2*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TestParsingMergeLiteRepeatedFieldsGeneratorGroup2*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (TestParsingMergeLiteRepeatedFieldsGeneratorGroup2*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface TestParsingMergeLiteRepeatedFieldsGeneratorGroup2Builder : PBGeneratedMessageBuilder {
@private
  TestParsingMergeLiteRepeatedFieldsGeneratorGroup2* result;
}

- (TestParsingMergeLiteRepeatedFieldsGeneratorGroup2*) defaultInstance;

- (TestParsingMergeLiteRepeatedFieldsGeneratorGroup2Builder*) clear;
- (TestParsingMergeLiteRepeatedFieldsGeneratorGroup2Builder*) clone;

- (TestParsingMergeLiteRepeatedFieldsGeneratorGroup2*) build;
- (TestParsingMergeLiteRepeatedFieldsGeneratorGroup2*) buildPartial;

- (TestParsingMergeLiteRepeatedFieldsGeneratorGroup2Builder*) mergeFrom:(TestParsingMergeLiteRepeatedFieldsGeneratorGroup2*) other;
- (TestParsingMergeLiteRepeatedFieldsGeneratorGroup2Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (TestParsingMergeLiteRepeatedFieldsGeneratorGroup2Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasField1;
- (TestAllTypesLite*) field1;
- (TestParsingMergeLiteRepeatedFieldsGeneratorGroup2Builder*) setField1:(TestAllTypesLite*) value;
- (TestParsingMergeLiteRepeatedFieldsGeneratorGroup2Builder*) setField1Builder:(TestAllTypesLiteBuilder*) builderForValue;
- (TestParsingMergeLiteRepeatedFieldsGeneratorGroup2Builder*) mergeField1:(TestAllTypesLite*) value;
- (TestParsingMergeLiteRepeatedFieldsGeneratorGroup2Builder*) clearField1;
@end

@interface TestParsingMergeLiteRepeatedFieldsGeneratorBuilder : PBGeneratedMessageBuilder {
@private
  TestParsingMergeLiteRepeatedFieldsGenerator* result;
}

- (TestParsingMergeLiteRepeatedFieldsGenerator*) defaultInstance;

- (TestParsingMergeLiteRepeatedFieldsGeneratorBuilder*) clear;
- (TestParsingMergeLiteRepeatedFieldsGeneratorBuilder*) clone;

- (TestParsingMergeLiteRepeatedFieldsGenerator*) build;
- (TestParsingMergeLiteRepeatedFieldsGenerator*) buildPartial;

- (TestParsingMergeLiteRepeatedFieldsGeneratorBuilder*) mergeFrom:(TestParsingMergeLiteRepeatedFieldsGenerator*) other;
- (TestParsingMergeLiteRepeatedFieldsGeneratorBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (TestParsingMergeLiteRepeatedFieldsGeneratorBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (NSMutableArray *)field1;
- (TestAllTypesLite*)field1AtIndex:(NSUInteger)index;
- (TestParsingMergeLiteRepeatedFieldsGeneratorBuilder *)addField1:(TestAllTypesLite*)value;
- (TestParsingMergeLiteRepeatedFieldsGeneratorBuilder *)setField1Array:(NSArray *)array;
- (TestParsingMergeLiteRepeatedFieldsGeneratorBuilder *)clearField1;

- (NSMutableArray *)field2;
- (TestAllTypesLite*)field2AtIndex:(NSUInteger)index;
- (TestParsingMergeLiteRepeatedFieldsGeneratorBuilder *)addField2:(TestAllTypesLite*)value;
- (TestParsingMergeLiteRepeatedFieldsGeneratorBuilder *)setField2Array:(NSArray *)array;
- (TestParsingMergeLiteRepeatedFieldsGeneratorBuilder *)clearField2;

- (NSMutableArray *)field3;
- (TestAllTypesLite*)field3AtIndex:(NSUInteger)index;
- (TestParsingMergeLiteRepeatedFieldsGeneratorBuilder *)addField3:(TestAllTypesLite*)value;
- (TestParsingMergeLiteRepeatedFieldsGeneratorBuilder *)setField3Array:(NSArray *)array;
- (TestParsingMergeLiteRepeatedFieldsGeneratorBuilder *)clearField3;

- (NSMutableArray *)group1;
- (TestParsingMergeLiteRepeatedFieldsGeneratorGroup1*)group1AtIndex:(NSUInteger)index;
- (TestParsingMergeLiteRepeatedFieldsGeneratorBuilder *)addGroup1:(TestParsingMergeLiteRepeatedFieldsGeneratorGroup1*)value;
- (TestParsingMergeLiteRepeatedFieldsGeneratorBuilder *)setGroup1Array:(NSArray *)array;
- (TestParsingMergeLiteRepeatedFieldsGeneratorBuilder *)clearGroup1;

- (NSMutableArray *)group2;
- (TestParsingMergeLiteRepeatedFieldsGeneratorGroup2*)group2AtIndex:(NSUInteger)index;
- (TestParsingMergeLiteRepeatedFieldsGeneratorBuilder *)addGroup2:(TestParsingMergeLiteRepeatedFieldsGeneratorGroup2*)value;
- (TestParsingMergeLiteRepeatedFieldsGeneratorBuilder *)setGroup2Array:(NSArray *)array;
- (TestParsingMergeLiteRepeatedFieldsGeneratorBuilder *)clearGroup2;

- (NSMutableArray *)ext1;
- (TestAllTypesLite*)ext1AtIndex:(NSUInteger)index;
- (TestParsingMergeLiteRepeatedFieldsGeneratorBuilder *)addExt1:(TestAllTypesLite*)value;
- (TestParsingMergeLiteRepeatedFieldsGeneratorBuilder *)setExt1Array:(NSArray *)array;
- (TestParsingMergeLiteRepeatedFieldsGeneratorBuilder *)clearExt1;

- (NSMutableArray *)ext2;
- (TestAllTypesLite*)ext2AtIndex:(NSUInteger)index;
- (TestParsingMergeLiteRepeatedFieldsGeneratorBuilder *)addExt2:(TestAllTypesLite*)value;
- (TestParsingMergeLiteRepeatedFieldsGeneratorBuilder *)setExt2Array:(NSArray *)array;
- (TestParsingMergeLiteRepeatedFieldsGeneratorBuilder *)clearExt2;
@end

@interface TestParsingMergeLiteOptionalGroup : PBGeneratedMessage {
@private
  BOOL hasOptionalGroupAllTypes_:1;
  TestAllTypesLite* optionalGroupAllTypes;
}
- (BOOL) hasOptionalGroupAllTypes;
@property (readonly, strong) TestAllTypesLite* optionalGroupAllTypes;

+ (TestParsingMergeLiteOptionalGroup*) defaultInstance;
- (TestParsingMergeLiteOptionalGroup*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (TestParsingMergeLiteOptionalGroupBuilder*) builder;
+ (TestParsingMergeLiteOptionalGroupBuilder*) builder;
+ (TestParsingMergeLiteOptionalGroupBuilder*) builderWithPrototype:(TestParsingMergeLiteOptionalGroup*) prototype;
- (TestParsingMergeLiteOptionalGroupBuilder*) toBuilder;

+ (TestParsingMergeLiteOptionalGroup*) parseFromData:(NSData*) data;
+ (TestParsingMergeLiteOptionalGroup*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TestParsingMergeLiteOptionalGroup*) parseFromInputStream:(NSInputStream*) input;
+ (TestParsingMergeLiteOptionalGroup*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TestParsingMergeLiteOptionalGroup*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (TestParsingMergeLiteOptionalGroup*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface TestParsingMergeLiteOptionalGroupBuilder : PBGeneratedMessageBuilder {
@private
  TestParsingMergeLiteOptionalGroup* result;
}

- (TestParsingMergeLiteOptionalGroup*) defaultInstance;

- (TestParsingMergeLiteOptionalGroupBuilder*) clear;
- (TestParsingMergeLiteOptionalGroupBuilder*) clone;

- (TestParsingMergeLiteOptionalGroup*) build;
- (TestParsingMergeLiteOptionalGroup*) buildPartial;

- (TestParsingMergeLiteOptionalGroupBuilder*) mergeFrom:(TestParsingMergeLiteOptionalGroup*) other;
- (TestParsingMergeLiteOptionalGroupBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (TestParsingMergeLiteOptionalGroupBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasOptionalGroupAllTypes;
- (TestAllTypesLite*) optionalGroupAllTypes;
- (TestParsingMergeLiteOptionalGroupBuilder*) setOptionalGroupAllTypes:(TestAllTypesLite*) value;
- (TestParsingMergeLiteOptionalGroupBuilder*) setOptionalGroupAllTypesBuilder:(TestAllTypesLiteBuilder*) builderForValue;
- (TestParsingMergeLiteOptionalGroupBuilder*) mergeOptionalGroupAllTypes:(TestAllTypesLite*) value;
- (TestParsingMergeLiteOptionalGroupBuilder*) clearOptionalGroupAllTypes;
@end

@interface TestParsingMergeLiteRepeatedGroup : PBGeneratedMessage {
@private
  BOOL hasRepeatedGroupAllTypes_:1;
  TestAllTypesLite* repeatedGroupAllTypes;
}
- (BOOL) hasRepeatedGroupAllTypes;
@property (readonly, strong) TestAllTypesLite* repeatedGroupAllTypes;

+ (TestParsingMergeLiteRepeatedGroup*) defaultInstance;
- (TestParsingMergeLiteRepeatedGroup*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (TestParsingMergeLiteRepeatedGroupBuilder*) builder;
+ (TestParsingMergeLiteRepeatedGroupBuilder*) builder;
+ (TestParsingMergeLiteRepeatedGroupBuilder*) builderWithPrototype:(TestParsingMergeLiteRepeatedGroup*) prototype;
- (TestParsingMergeLiteRepeatedGroupBuilder*) toBuilder;

+ (TestParsingMergeLiteRepeatedGroup*) parseFromData:(NSData*) data;
+ (TestParsingMergeLiteRepeatedGroup*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TestParsingMergeLiteRepeatedGroup*) parseFromInputStream:(NSInputStream*) input;
+ (TestParsingMergeLiteRepeatedGroup*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TestParsingMergeLiteRepeatedGroup*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (TestParsingMergeLiteRepeatedGroup*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface TestParsingMergeLiteRepeatedGroupBuilder : PBGeneratedMessageBuilder {
@private
  TestParsingMergeLiteRepeatedGroup* result;
}

- (TestParsingMergeLiteRepeatedGroup*) defaultInstance;

- (TestParsingMergeLiteRepeatedGroupBuilder*) clear;
- (TestParsingMergeLiteRepeatedGroupBuilder*) clone;

- (TestParsingMergeLiteRepeatedGroup*) build;
- (TestParsingMergeLiteRepeatedGroup*) buildPartial;

- (TestParsingMergeLiteRepeatedGroupBuilder*) mergeFrom:(TestParsingMergeLiteRepeatedGroup*) other;
- (TestParsingMergeLiteRepeatedGroupBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (TestParsingMergeLiteRepeatedGroupBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasRepeatedGroupAllTypes;
- (TestAllTypesLite*) repeatedGroupAllTypes;
- (TestParsingMergeLiteRepeatedGroupBuilder*) setRepeatedGroupAllTypes:(TestAllTypesLite*) value;
- (TestParsingMergeLiteRepeatedGroupBuilder*) setRepeatedGroupAllTypesBuilder:(TestAllTypesLiteBuilder*) builderForValue;
- (TestParsingMergeLiteRepeatedGroupBuilder*) mergeRepeatedGroupAllTypes:(TestAllTypesLite*) value;
- (TestParsingMergeLiteRepeatedGroupBuilder*) clearRepeatedGroupAllTypes;
@end

@interface TestParsingMergeLiteBuilder : PBExtendableMessageBuilder {
@private
  TestParsingMergeLite* result;
}

- (TestParsingMergeLite*) defaultInstance;

- (TestParsingMergeLiteBuilder*) clear;
- (TestParsingMergeLiteBuilder*) clone;

- (TestParsingMergeLite*) build;
- (TestParsingMergeLite*) buildPartial;

- (TestParsingMergeLiteBuilder*) mergeFrom:(TestParsingMergeLite*) other;
- (TestParsingMergeLiteBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (TestParsingMergeLiteBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasRequiredAllTypes;
- (TestAllTypesLite*) requiredAllTypes;
- (TestParsingMergeLiteBuilder*) setRequiredAllTypes:(TestAllTypesLite*) value;
- (TestParsingMergeLiteBuilder*) setRequiredAllTypesBuilder:(TestAllTypesLiteBuilder*) builderForValue;
- (TestParsingMergeLiteBuilder*) mergeRequiredAllTypes:(TestAllTypesLite*) value;
- (TestParsingMergeLiteBuilder*) clearRequiredAllTypes;

- (BOOL) hasOptionalAllTypes;
- (TestAllTypesLite*) optionalAllTypes;
- (TestParsingMergeLiteBuilder*) setOptionalAllTypes:(TestAllTypesLite*) value;
- (TestParsingMergeLiteBuilder*) setOptionalAllTypesBuilder:(TestAllTypesLiteBuilder*) builderForValue;
- (TestParsingMergeLiteBuilder*) mergeOptionalAllTypes:(TestAllTypesLite*) value;
- (TestParsingMergeLiteBuilder*) clearOptionalAllTypes;

- (NSMutableArray *)repeatedAllTypes;
- (TestAllTypesLite*)repeatedAllTypesAtIndex:(NSUInteger)index;
- (TestParsingMergeLiteBuilder *)addRepeatedAllTypes:(TestAllTypesLite*)value;
- (TestParsingMergeLiteBuilder *)setRepeatedAllTypesArray:(NSArray *)array;
- (TestParsingMergeLiteBuilder *)clearRepeatedAllTypes;

- (BOOL) hasOptionalGroup;
- (TestParsingMergeLiteOptionalGroup*) optionalGroup;
- (TestParsingMergeLiteBuilder*) setOptionalGroup:(TestParsingMergeLiteOptionalGroup*) value;
- (TestParsingMergeLiteBuilder*) setOptionalGroupBuilder:(TestParsingMergeLiteOptionalGroupBuilder*) builderForValue;
- (TestParsingMergeLiteBuilder*) mergeOptionalGroup:(TestParsingMergeLiteOptionalGroup*) value;
- (TestParsingMergeLiteBuilder*) clearOptionalGroup;

- (NSMutableArray *)repeatedGroup;
- (TestParsingMergeLiteRepeatedGroup*)repeatedGroupAtIndex:(NSUInteger)index;
- (TestParsingMergeLiteBuilder *)addRepeatedGroup:(TestParsingMergeLiteRepeatedGroup*)value;
- (TestParsingMergeLiteBuilder *)setRepeatedGroupArray:(NSArray *)array;
- (TestParsingMergeLiteBuilder *)clearRepeatedGroup;
@end

@interface TestEmptyMessageLite : PBGeneratedMessage {
@private
}

+ (TestEmptyMessageLite*) defaultInstance;
- (TestEmptyMessageLite*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (TestEmptyMessageLiteBuilder*) builder;
+ (TestEmptyMessageLiteBuilder*) builder;
+ (TestEmptyMessageLiteBuilder*) builderWithPrototype:(TestEmptyMessageLite*) prototype;
- (TestEmptyMessageLiteBuilder*) toBuilder;

+ (TestEmptyMessageLite*) parseFromData:(NSData*) data;
+ (TestEmptyMessageLite*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TestEmptyMessageLite*) parseFromInputStream:(NSInputStream*) input;
+ (TestEmptyMessageLite*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TestEmptyMessageLite*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (TestEmptyMessageLite*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface TestEmptyMessageLiteBuilder : PBGeneratedMessageBuilder {
@private
  TestEmptyMessageLite* result;
}

- (TestEmptyMessageLite*) defaultInstance;

- (TestEmptyMessageLiteBuilder*) clear;
- (TestEmptyMessageLiteBuilder*) clone;

- (TestEmptyMessageLite*) build;
- (TestEmptyMessageLite*) buildPartial;

- (TestEmptyMessageLiteBuilder*) mergeFrom:(TestEmptyMessageLite*) other;
- (TestEmptyMessageLiteBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (TestEmptyMessageLiteBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface TestEmptyMessageWithExtensionsLite : PBExtendableMessage {
@private
}

+ (TestEmptyMessageWithExtensionsLite*) defaultInstance;
- (TestEmptyMessageWithExtensionsLite*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (TestEmptyMessageWithExtensionsLiteBuilder*) builder;
+ (TestEmptyMessageWithExtensionsLiteBuilder*) builder;
+ (TestEmptyMessageWithExtensionsLiteBuilder*) builderWithPrototype:(TestEmptyMessageWithExtensionsLite*) prototype;
- (TestEmptyMessageWithExtensionsLiteBuilder*) toBuilder;

+ (TestEmptyMessageWithExtensionsLite*) parseFromData:(NSData*) data;
+ (TestEmptyMessageWithExtensionsLite*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TestEmptyMessageWithExtensionsLite*) parseFromInputStream:(NSInputStream*) input;
+ (TestEmptyMessageWithExtensionsLite*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TestEmptyMessageWithExtensionsLite*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (TestEmptyMessageWithExtensionsLite*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface TestEmptyMessageWithExtensionsLiteBuilder : PBExtendableMessageBuilder {
@private
  TestEmptyMessageWithExtensionsLite* result;
}

- (TestEmptyMessageWithExtensionsLite*) defaultInstance;

- (TestEmptyMessageWithExtensionsLiteBuilder*) clear;
- (TestEmptyMessageWithExtensionsLiteBuilder*) clone;

- (TestEmptyMessageWithExtensionsLite*) build;
- (TestEmptyMessageWithExtensionsLite*) buildPartial;

- (TestEmptyMessageWithExtensionsLiteBuilder*) mergeFrom:(TestEmptyMessageWithExtensionsLite*) other;
- (TestEmptyMessageWithExtensionsLiteBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (TestEmptyMessageWithExtensionsLiteBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end


// @@protoc_insertion_point(global_scope)
