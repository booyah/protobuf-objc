// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import <ProtocolBuffers/ProtocolBuffers.h>

#import "UnittestImportLite.pb.h"

@class ForeignMessageLite;
@class ForeignMessageLite_Builder;
@class ImportMessageLite;
@class ImportMessageLite_Builder;
@class OptionalGroup_extension_lite;
@class OptionalGroup_extension_lite_Builder;
@class RepeatedGroup_extension_lite;
@class RepeatedGroup_extension_lite_Builder;
@class TestAllExtensionsLite;
@class TestAllExtensionsLite_Builder;
@class TestAllTypesLite;
@class TestAllTypesLite_Builder;
@class TestAllTypesLite_NestedMessage;
@class TestAllTypesLite_NestedMessage_Builder;
@class TestAllTypesLite_OptionalGroup;
@class TestAllTypesLite_OptionalGroup_Builder;
@class TestAllTypesLite_RepeatedGroup;
@class TestAllTypesLite_RepeatedGroup_Builder;
@class TestDeprecatedLite;
@class TestDeprecatedLite_Builder;
@class TestNestedExtensionLite;
@class TestNestedExtensionLite_Builder;
@class TestPackedExtensionsLite;
@class TestPackedExtensionsLite_Builder;
@class TestPackedTypesLite;
@class TestPackedTypesLite_Builder;
#ifndef __has_feature
  #define __has_feature(x) 0 // Compatibility with non-clang compilers.
#endif // __has_feature

#ifndef NS_RETURNS_NOT_RETAINED
  #if __has_feature(attribute_ns_returns_not_retained)
    #define NS_RETURNS_NOT_RETAINED __attribute__((ns_returns_not_retained))
  #else
    #define NS_RETURNS_NOT_RETAINED
  #endif
#endif

typedef enum {
  ForeignEnumLiteForeignLiteFoo = 4,
  ForeignEnumLiteForeignLiteBar = 5,
  ForeignEnumLiteForeignLiteBaz = 6,
} ForeignEnumLite;

BOOL ForeignEnumLiteIsValidValue(ForeignEnumLite value);

typedef enum {
  TestAllTypesLite_NestedEnumFoo = 1,
  TestAllTypesLite_NestedEnumBar = 2,
  TestAllTypesLite_NestedEnumBaz = 3,
} TestAllTypesLite_NestedEnum;

BOOL TestAllTypesLite_NestedEnumIsValidValue(TestAllTypesLite_NestedEnum value);


@interface UnittestLiteRoot : NSObject {
}
+ (PBExtensionRegistry*) extensionRegistry;
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry;
+ (id<PBExtensionField>) optionalInt32ExtensionLite;
+ (id<PBExtensionField>) optionalInt64ExtensionLite;
+ (id<PBExtensionField>) optionalUint32ExtensionLite;
+ (id<PBExtensionField>) optionalUint64ExtensionLite;
+ (id<PBExtensionField>) optionalSint32ExtensionLite;
+ (id<PBExtensionField>) optionalSint64ExtensionLite;
+ (id<PBExtensionField>) optionalFixed32ExtensionLite;
+ (id<PBExtensionField>) optionalFixed64ExtensionLite;
+ (id<PBExtensionField>) optionalSfixed32ExtensionLite;
+ (id<PBExtensionField>) optionalSfixed64ExtensionLite;
+ (id<PBExtensionField>) optionalFloatExtensionLite;
+ (id<PBExtensionField>) optionalDoubleExtensionLite;
+ (id<PBExtensionField>) optionalBoolExtensionLite;
+ (id<PBExtensionField>) optionalStringExtensionLite;
+ (id<PBExtensionField>) optionalBytesExtensionLite;
+ (id<PBExtensionField>) optionalGroupExtensionLite;
+ (id<PBExtensionField>) optionalNestedMessageExtensionLite;
+ (id<PBExtensionField>) optionalForeignMessageExtensionLite;
+ (id<PBExtensionField>) optionalImportMessageExtensionLite;
+ (id<PBExtensionField>) optionalNestedEnumExtensionLite;
+ (id<PBExtensionField>) optionalForeignEnumExtensionLite;
+ (id<PBExtensionField>) optionalImportEnumExtensionLite;
+ (id<PBExtensionField>) optionalStringPieceExtensionLite;
+ (id<PBExtensionField>) optionalCordExtensionLite;
+ (id<PBExtensionField>) repeatedInt32ExtensionLite;
+ (id<PBExtensionField>) repeatedInt64ExtensionLite;
+ (id<PBExtensionField>) repeatedUint32ExtensionLite;
+ (id<PBExtensionField>) repeatedUint64ExtensionLite;
+ (id<PBExtensionField>) repeatedSint32ExtensionLite;
+ (id<PBExtensionField>) repeatedSint64ExtensionLite;
+ (id<PBExtensionField>) repeatedFixed32ExtensionLite;
+ (id<PBExtensionField>) repeatedFixed64ExtensionLite;
+ (id<PBExtensionField>) repeatedSfixed32ExtensionLite;
+ (id<PBExtensionField>) repeatedSfixed64ExtensionLite;
+ (id<PBExtensionField>) repeatedFloatExtensionLite;
+ (id<PBExtensionField>) repeatedDoubleExtensionLite;
+ (id<PBExtensionField>) repeatedBoolExtensionLite;
+ (id<PBExtensionField>) repeatedStringExtensionLite;
+ (id<PBExtensionField>) repeatedBytesExtensionLite;
+ (id<PBExtensionField>) repeatedGroupExtensionLite;
+ (id<PBExtensionField>) repeatedNestedMessageExtensionLite;
+ (id<PBExtensionField>) repeatedForeignMessageExtensionLite;
+ (id<PBExtensionField>) repeatedImportMessageExtensionLite;
+ (id<PBExtensionField>) repeatedNestedEnumExtensionLite;
+ (id<PBExtensionField>) repeatedForeignEnumExtensionLite;
+ (id<PBExtensionField>) repeatedImportEnumExtensionLite;
+ (id<PBExtensionField>) repeatedStringPieceExtensionLite;
+ (id<PBExtensionField>) repeatedCordExtensionLite;
+ (id<PBExtensionField>) defaultInt32ExtensionLite;
+ (id<PBExtensionField>) defaultInt64ExtensionLite;
+ (id<PBExtensionField>) defaultUint32ExtensionLite;
+ (id<PBExtensionField>) defaultUint64ExtensionLite;
+ (id<PBExtensionField>) defaultSint32ExtensionLite;
+ (id<PBExtensionField>) defaultSint64ExtensionLite;
+ (id<PBExtensionField>) defaultFixed32ExtensionLite;
+ (id<PBExtensionField>) defaultFixed64ExtensionLite;
+ (id<PBExtensionField>) defaultSfixed32ExtensionLite;
+ (id<PBExtensionField>) defaultSfixed64ExtensionLite;
+ (id<PBExtensionField>) defaultFloatExtensionLite;
+ (id<PBExtensionField>) defaultDoubleExtensionLite;
+ (id<PBExtensionField>) defaultBoolExtensionLite;
+ (id<PBExtensionField>) defaultStringExtensionLite;
+ (id<PBExtensionField>) defaultBytesExtensionLite;
+ (id<PBExtensionField>) defaultNestedEnumExtensionLite;
+ (id<PBExtensionField>) defaultForeignEnumExtensionLite;
+ (id<PBExtensionField>) defaultImportEnumExtensionLite;
+ (id<PBExtensionField>) defaultStringPieceExtensionLite;
+ (id<PBExtensionField>) defaultCordExtensionLite;
+ (id<PBExtensionField>) packedInt32ExtensionLite;
+ (id<PBExtensionField>) packedInt64ExtensionLite;
+ (id<PBExtensionField>) packedUint32ExtensionLite;
+ (id<PBExtensionField>) packedUint64ExtensionLite;
+ (id<PBExtensionField>) packedSint32ExtensionLite;
+ (id<PBExtensionField>) packedSint64ExtensionLite;
+ (id<PBExtensionField>) packedFixed32ExtensionLite;
+ (id<PBExtensionField>) packedFixed64ExtensionLite;
+ (id<PBExtensionField>) packedSfixed32ExtensionLite;
+ (id<PBExtensionField>) packedSfixed64ExtensionLite;
+ (id<PBExtensionField>) packedFloatExtensionLite;
+ (id<PBExtensionField>) packedDoubleExtensionLite;
+ (id<PBExtensionField>) packedBoolExtensionLite;
+ (id<PBExtensionField>) packedEnumExtensionLite;
@end

@interface TestAllTypesLite : PBGeneratedMessage {
@private
  BOOL hasOptionalBool_:1;
  BOOL hasDefaultBool_:1;
  BOOL hasOptionalDouble_:1;
  BOOL hasDefaultDouble_:1;
  BOOL hasDefaultFloat_:1;
  BOOL hasOptionalFloat_:1;
  BOOL hasOptionalInt64_:1;
  BOOL hasDefaultInt64_:1;
  BOOL hasOptionalUint64_:1;
  BOOL hasDefaultUint64_:1;
  BOOL hasDefaultInt32_:1;
  BOOL hasOptionalInt32_:1;
  BOOL hasOptionalFixed64_:1;
  BOOL hasDefaultFixed64_:1;
  BOOL hasOptionalFixed32_:1;
  BOOL hasDefaultFixed32_:1;
  BOOL hasDefaultString_:1;
  BOOL hasDefaultStringPiece_:1;
  BOOL hasDefaultCord_:1;
  BOOL hasOptionalCord_:1;
  BOOL hasOptionalStringPiece_:1;
  BOOL hasOptionalString_:1;
  BOOL hasOptionalGroup_:1;
  BOOL hasOptionalNestedMessage_:1;
  BOOL hasOptionalForeignMessage_:1;
  BOOL hasOptionalImportMessage_:1;
  BOOL hasDefaultBytes_:1;
  BOOL hasOptionalBytes_:1;
  BOOL hasOptionalUint32_:1;
  BOOL hasDefaultUint32_:1;
  BOOL hasDefaultImportEnum_:1;
  BOOL hasDefaultForeignEnum_:1;
  BOOL hasDefaultNestedEnum_:1;
  BOOL hasOptionalImportEnum_:1;
  BOOL hasOptionalForeignEnum_:1;
  BOOL hasOptionalNestedEnum_:1;
  BOOL hasDefaultSfixed32_:1;
  BOOL hasOptionalSfixed32_:1;
  BOOL hasDefaultSfixed64_:1;
  BOOL hasOptionalSfixed64_:1;
  BOOL hasDefaultSint32_:1;
  BOOL hasOptionalSint32_:1;
  BOOL hasOptionalSint64_:1;
  BOOL hasDefaultSint64_:1;
  BOOL optionalBool_:1;
  BOOL defaultBool_:1;
  Float64 optionalDouble;
  Float64 defaultDouble;
  Float32 defaultFloat;
  Float32 optionalFloat;
  int64_t optionalInt64;
  int64_t defaultInt64;
  uint64_t optionalUint64;
  uint64_t defaultUint64;
  int32_t defaultInt32;
  int32_t optionalInt32;
  uint64_t optionalFixed64;
  uint64_t defaultFixed64;
  uint32_t optionalFixed32;
  uint32_t defaultFixed32;
  NSString* defaultString;
  NSString* defaultStringPiece;
  NSString* defaultCord;
  NSString* optionalCord;
  NSString* optionalStringPiece;
  NSString* optionalString;
  TestAllTypesLite_OptionalGroup* optionalGroup;
  TestAllTypesLite_NestedMessage* optionalNestedMessage;
  ForeignMessageLite* optionalForeignMessage;
  ImportMessageLite* optionalImportMessage;
  NSData* defaultBytes;
  NSData* optionalBytes;
  uint32_t optionalUint32;
  uint32_t defaultUint32;
  ImportEnumLite defaultImportEnum;
  ForeignEnumLite defaultForeignEnum;
  TestAllTypesLite_NestedEnum defaultNestedEnum;
  ImportEnumLite optionalImportEnum;
  ForeignEnumLite optionalForeignEnum;
  TestAllTypesLite_NestedEnum optionalNestedEnum;
  int32_t defaultSfixed32;
  int32_t optionalSfixed32;
  int64_t defaultSfixed64;
  int64_t optionalSfixed64;
  int32_t defaultSint32;
  int32_t optionalSint32;
  int64_t optionalSint64;
  int64_t defaultSint64;
  PBAppendableArray * repeatedBoolArray;
  PBAppendableArray * repeatedDoubleArray;
  PBAppendableArray * repeatedFloatArray;
  PBAppendableArray * repeatedInt64Array;
  PBAppendableArray * repeatedUint64Array;
  PBAppendableArray * repeatedInt32Array;
  PBAppendableArray * repeatedFixed64Array;
  PBAppendableArray * repeatedFixed32Array;
  PBAppendableArray * repeatedStringArray;
  PBAppendableArray * repeatedCordArray;
  PBAppendableArray * repeatedStringPieceArray;
  PBAppendableArray * repeatedGroupArray;
  PBAppendableArray * repeatedImportMessageArray;
  PBAppendableArray * repeatedForeignMessageArray;
  PBAppendableArray * repeatedNestedMessageArray;
  PBAppendableArray * repeatedBytesArray;
  PBAppendableArray * repeatedUint32Array;
  PBAppendableArray * repeatedImportEnumArray;
  PBAppendableArray * repeatedForeignEnumArray;
  PBAppendableArray * repeatedNestedEnumArray;
  PBAppendableArray * repeatedSfixed32Array;
  PBAppendableArray * repeatedSfixed64Array;
  PBAppendableArray * repeatedSint32Array;
  PBAppendableArray * repeatedSint64Array;
}
- (BOOL) hasOptionalInt32;
- (BOOL) hasOptionalInt64;
- (BOOL) hasOptionalUint32;
- (BOOL) hasOptionalUint64;
- (BOOL) hasOptionalSint32;
- (BOOL) hasOptionalSint64;
- (BOOL) hasOptionalFixed32;
- (BOOL) hasOptionalFixed64;
- (BOOL) hasOptionalSfixed32;
- (BOOL) hasOptionalSfixed64;
- (BOOL) hasOptionalFloat;
- (BOOL) hasOptionalDouble;
- (BOOL) hasOptionalBool;
- (BOOL) hasOptionalString;
- (BOOL) hasOptionalBytes;
- (BOOL) hasOptionalGroup;
- (BOOL) hasOptionalNestedMessage;
- (BOOL) hasOptionalForeignMessage;
- (BOOL) hasOptionalImportMessage;
- (BOOL) hasOptionalNestedEnum;
- (BOOL) hasOptionalForeignEnum;
- (BOOL) hasOptionalImportEnum;
- (BOOL) hasOptionalStringPiece;
- (BOOL) hasOptionalCord;
- (BOOL) hasDefaultInt32;
- (BOOL) hasDefaultInt64;
- (BOOL) hasDefaultUint32;
- (BOOL) hasDefaultUint64;
- (BOOL) hasDefaultSint32;
- (BOOL) hasDefaultSint64;
- (BOOL) hasDefaultFixed32;
- (BOOL) hasDefaultFixed64;
- (BOOL) hasDefaultSfixed32;
- (BOOL) hasDefaultSfixed64;
- (BOOL) hasDefaultFloat;
- (BOOL) hasDefaultDouble;
- (BOOL) hasDefaultBool;
- (BOOL) hasDefaultString;
- (BOOL) hasDefaultBytes;
- (BOOL) hasDefaultNestedEnum;
- (BOOL) hasDefaultForeignEnum;
- (BOOL) hasDefaultImportEnum;
- (BOOL) hasDefaultStringPiece;
- (BOOL) hasDefaultCord;
@property (readonly) int32_t optionalInt32;
@property (readonly) int64_t optionalInt64;
@property (readonly) uint32_t optionalUint32;
@property (readonly) uint64_t optionalUint64;
@property (readonly) int32_t optionalSint32;
@property (readonly) int64_t optionalSint64;
@property (readonly) uint32_t optionalFixed32;
@property (readonly) uint64_t optionalFixed64;
@property (readonly) int32_t optionalSfixed32;
@property (readonly) int64_t optionalSfixed64;
@property (readonly) Float32 optionalFloat;
@property (readonly) Float64 optionalDouble;
- (BOOL) optionalBool;
@property (readonly, retain) NSString* optionalString;
@property (readonly, retain) NSData* optionalBytes;
@property (readonly, retain) TestAllTypesLite_OptionalGroup* optionalGroup;
@property (readonly, retain) TestAllTypesLite_NestedMessage* optionalNestedMessage;
@property (readonly, retain) ForeignMessageLite* optionalForeignMessage;
@property (readonly, retain) ImportMessageLite* optionalImportMessage;
@property (readonly) TestAllTypesLite_NestedEnum optionalNestedEnum;
@property (readonly) ForeignEnumLite optionalForeignEnum;
@property (readonly) ImportEnumLite optionalImportEnum;
@property (readonly, retain) NSString* optionalStringPiece;
@property (readonly, retain) NSString* optionalCord;
@property (readonly, retain) PBArray * repeatedInt32;
@property (readonly, retain) PBArray * repeatedInt64;
@property (readonly, retain) PBArray * repeatedUint32;
@property (readonly, retain) PBArray * repeatedUint64;
@property (readonly, retain) PBArray * repeatedSint32;
@property (readonly, retain) PBArray * repeatedSint64;
@property (readonly, retain) PBArray * repeatedFixed32;
@property (readonly, retain) PBArray * repeatedFixed64;
@property (readonly, retain) PBArray * repeatedSfixed32;
@property (readonly, retain) PBArray * repeatedSfixed64;
@property (readonly, retain) PBArray * repeatedFloat;
@property (readonly, retain) PBArray * repeatedDouble;
@property (readonly, retain) PBArray * repeatedBool;
@property (readonly, retain) PBArray * repeatedString;
@property (readonly, retain) PBArray * repeatedBytes;
@property (readonly, retain) PBArray * repeatedGroup;
@property (readonly, retain) PBArray * repeatedNestedMessage;
@property (readonly, retain) PBArray * repeatedForeignMessage;
@property (readonly, retain) PBArray * repeatedImportMessage;
@property (readonly, retain) PBArray * repeatedNestedEnum;
@property (readonly, retain) PBArray * repeatedForeignEnum;
@property (readonly, retain) PBArray * repeatedImportEnum;
@property (readonly, retain) PBArray * repeatedStringPiece;
@property (readonly, retain) PBArray * repeatedCord;
@property (readonly) int32_t defaultInt32;
@property (readonly) int64_t defaultInt64;
@property (readonly) uint32_t defaultUint32;
@property (readonly) uint64_t defaultUint64;
@property (readonly) int32_t defaultSint32;
@property (readonly) int64_t defaultSint64;
@property (readonly) uint32_t defaultFixed32;
@property (readonly) uint64_t defaultFixed64;
@property (readonly) int32_t defaultSfixed32;
@property (readonly) int64_t defaultSfixed64;
@property (readonly) Float32 defaultFloat;
@property (readonly) Float64 defaultDouble;
- (BOOL) defaultBool;
@property (readonly, retain) NSString* defaultString;
@property (readonly, retain) NSData* defaultBytes;
@property (readonly) TestAllTypesLite_NestedEnum defaultNestedEnum;
@property (readonly) ForeignEnumLite defaultForeignEnum;
@property (readonly) ImportEnumLite defaultImportEnum;
@property (readonly, retain) NSString* defaultStringPiece;
@property (readonly, retain) NSString* defaultCord;
- (int32_t)repeatedInt32AtIndex:(NSUInteger)index;
- (int64_t)repeatedInt64AtIndex:(NSUInteger)index;
- (uint32_t)repeatedUint32AtIndex:(NSUInteger)index;
- (uint64_t)repeatedUint64AtIndex:(NSUInteger)index;
- (int32_t)repeatedSint32AtIndex:(NSUInteger)index;
- (int64_t)repeatedSint64AtIndex:(NSUInteger)index;
- (uint32_t)repeatedFixed32AtIndex:(NSUInteger)index;
- (uint64_t)repeatedFixed64AtIndex:(NSUInteger)index;
- (int32_t)repeatedSfixed32AtIndex:(NSUInteger)index;
- (int64_t)repeatedSfixed64AtIndex:(NSUInteger)index;
- (Float32)repeatedFloatAtIndex:(NSUInteger)index;
- (Float64)repeatedDoubleAtIndex:(NSUInteger)index;
- (BOOL)repeatedBoolAtIndex:(NSUInteger)index;
- (NSString*)repeatedStringAtIndex:(NSUInteger)index;
- (NSData*)repeatedBytesAtIndex:(NSUInteger)index;
- (TestAllTypesLite_RepeatedGroup*)repeatedGroupAtIndex:(NSUInteger)index;
- (TestAllTypesLite_NestedMessage*)repeatedNestedMessageAtIndex:(NSUInteger)index;
- (ForeignMessageLite*)repeatedForeignMessageAtIndex:(NSUInteger)index;
- (ImportMessageLite*)repeatedImportMessageAtIndex:(NSUInteger)index;
- (TestAllTypesLite_NestedEnum)repeatedNestedEnumAtIndex:(NSUInteger)index;
- (ForeignEnumLite)repeatedForeignEnumAtIndex:(NSUInteger)index;
- (ImportEnumLite)repeatedImportEnumAtIndex:(NSUInteger)index;
- (NSString*)repeatedStringPieceAtIndex:(NSUInteger)index;
- (NSString*)repeatedCordAtIndex:(NSUInteger)index;

+ (TestAllTypesLite*) defaultInstance;
- (TestAllTypesLite*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (TestAllTypesLite_Builder*) builder;
+ (TestAllTypesLite_Builder*) builder;
+ (TestAllTypesLite_Builder*) builderWithPrototype:(TestAllTypesLite*) prototype;
- (TestAllTypesLite_Builder*) toBuilder;

+ (TestAllTypesLite*) parseFromData:(NSData*) data;
+ (TestAllTypesLite*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TestAllTypesLite*) parseFromInputStream:(NSInputStream*) input;
+ (TestAllTypesLite*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TestAllTypesLite*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (TestAllTypesLite*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface TestAllTypesLite_NestedMessage : PBGeneratedMessage {
@private
  BOOL hasBb_:1;
  int32_t bb;
}
- (BOOL) hasBb;
@property (readonly) int32_t bb;

+ (TestAllTypesLite_NestedMessage*) defaultInstance;
- (TestAllTypesLite_NestedMessage*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (TestAllTypesLite_NestedMessage_Builder*) builder;
+ (TestAllTypesLite_NestedMessage_Builder*) builder;
+ (TestAllTypesLite_NestedMessage_Builder*) builderWithPrototype:(TestAllTypesLite_NestedMessage*) prototype;
- (TestAllTypesLite_NestedMessage_Builder*) toBuilder;

+ (TestAllTypesLite_NestedMessage*) parseFromData:(NSData*) data;
+ (TestAllTypesLite_NestedMessage*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TestAllTypesLite_NestedMessage*) parseFromInputStream:(NSInputStream*) input;
+ (TestAllTypesLite_NestedMessage*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TestAllTypesLite_NestedMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (TestAllTypesLite_NestedMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface TestAllTypesLite_NestedMessage_Builder : PBGeneratedMessage_Builder {
@private
  TestAllTypesLite_NestedMessage* result;
}

- (TestAllTypesLite_NestedMessage*) defaultInstance;

- (TestAllTypesLite_NestedMessage_Builder*) clear;
- (TestAllTypesLite_NestedMessage_Builder*) clone;

- (TestAllTypesLite_NestedMessage*) build;
- (TestAllTypesLite_NestedMessage*) buildPartial;

- (TestAllTypesLite_NestedMessage_Builder*) mergeFrom:(TestAllTypesLite_NestedMessage*) other;
- (TestAllTypesLite_NestedMessage_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (TestAllTypesLite_NestedMessage_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasBb;
- (int32_t) bb;
- (TestAllTypesLite_NestedMessage_Builder*) setBb:(int32_t) value;
- (TestAllTypesLite_NestedMessage_Builder*) clearBb;
@end

@interface TestAllTypesLite_OptionalGroup : PBGeneratedMessage {
@private
  BOOL hasA_:1;
  int32_t a;
}
- (BOOL) hasA;
@property (readonly) int32_t a;

+ (TestAllTypesLite_OptionalGroup*) defaultInstance;
- (TestAllTypesLite_OptionalGroup*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (TestAllTypesLite_OptionalGroup_Builder*) builder;
+ (TestAllTypesLite_OptionalGroup_Builder*) builder;
+ (TestAllTypesLite_OptionalGroup_Builder*) builderWithPrototype:(TestAllTypesLite_OptionalGroup*) prototype;
- (TestAllTypesLite_OptionalGroup_Builder*) toBuilder;

+ (TestAllTypesLite_OptionalGroup*) parseFromData:(NSData*) data;
+ (TestAllTypesLite_OptionalGroup*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TestAllTypesLite_OptionalGroup*) parseFromInputStream:(NSInputStream*) input;
+ (TestAllTypesLite_OptionalGroup*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TestAllTypesLite_OptionalGroup*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (TestAllTypesLite_OptionalGroup*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface TestAllTypesLite_OptionalGroup_Builder : PBGeneratedMessage_Builder {
@private
  TestAllTypesLite_OptionalGroup* result;
}

- (TestAllTypesLite_OptionalGroup*) defaultInstance;

- (TestAllTypesLite_OptionalGroup_Builder*) clear;
- (TestAllTypesLite_OptionalGroup_Builder*) clone;

- (TestAllTypesLite_OptionalGroup*) build;
- (TestAllTypesLite_OptionalGroup*) buildPartial;

- (TestAllTypesLite_OptionalGroup_Builder*) mergeFrom:(TestAllTypesLite_OptionalGroup*) other;
- (TestAllTypesLite_OptionalGroup_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (TestAllTypesLite_OptionalGroup_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasA;
- (int32_t) a;
- (TestAllTypesLite_OptionalGroup_Builder*) setA:(int32_t) value;
- (TestAllTypesLite_OptionalGroup_Builder*) clearA;
@end

@interface TestAllTypesLite_RepeatedGroup : PBGeneratedMessage {
@private
  BOOL hasA_:1;
  int32_t a;
}
- (BOOL) hasA;
@property (readonly) int32_t a;

+ (TestAllTypesLite_RepeatedGroup*) defaultInstance;
- (TestAllTypesLite_RepeatedGroup*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (TestAllTypesLite_RepeatedGroup_Builder*) builder;
+ (TestAllTypesLite_RepeatedGroup_Builder*) builder;
+ (TestAllTypesLite_RepeatedGroup_Builder*) builderWithPrototype:(TestAllTypesLite_RepeatedGroup*) prototype;
- (TestAllTypesLite_RepeatedGroup_Builder*) toBuilder;

+ (TestAllTypesLite_RepeatedGroup*) parseFromData:(NSData*) data;
+ (TestAllTypesLite_RepeatedGroup*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TestAllTypesLite_RepeatedGroup*) parseFromInputStream:(NSInputStream*) input;
+ (TestAllTypesLite_RepeatedGroup*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TestAllTypesLite_RepeatedGroup*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (TestAllTypesLite_RepeatedGroup*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface TestAllTypesLite_RepeatedGroup_Builder : PBGeneratedMessage_Builder {
@private
  TestAllTypesLite_RepeatedGroup* result;
}

- (TestAllTypesLite_RepeatedGroup*) defaultInstance;

- (TestAllTypesLite_RepeatedGroup_Builder*) clear;
- (TestAllTypesLite_RepeatedGroup_Builder*) clone;

- (TestAllTypesLite_RepeatedGroup*) build;
- (TestAllTypesLite_RepeatedGroup*) buildPartial;

- (TestAllTypesLite_RepeatedGroup_Builder*) mergeFrom:(TestAllTypesLite_RepeatedGroup*) other;
- (TestAllTypesLite_RepeatedGroup_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (TestAllTypesLite_RepeatedGroup_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasA;
- (int32_t) a;
- (TestAllTypesLite_RepeatedGroup_Builder*) setA:(int32_t) value;
- (TestAllTypesLite_RepeatedGroup_Builder*) clearA;
@end

@interface TestAllTypesLite_Builder : PBGeneratedMessage_Builder {
@private
  TestAllTypesLite* result;
}

- (TestAllTypesLite*) defaultInstance;

- (TestAllTypesLite_Builder*) clear;
- (TestAllTypesLite_Builder*) clone;

- (TestAllTypesLite*) build;
- (TestAllTypesLite*) buildPartial;

- (TestAllTypesLite_Builder*) mergeFrom:(TestAllTypesLite*) other;
- (TestAllTypesLite_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (TestAllTypesLite_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasOptionalInt32;
- (int32_t) optionalInt32;
- (TestAllTypesLite_Builder*) setOptionalInt32:(int32_t) value;
- (TestAllTypesLite_Builder*) clearOptionalInt32;

- (BOOL) hasOptionalInt64;
- (int64_t) optionalInt64;
- (TestAllTypesLite_Builder*) setOptionalInt64:(int64_t) value;
- (TestAllTypesLite_Builder*) clearOptionalInt64;

- (BOOL) hasOptionalUint32;
- (uint32_t) optionalUint32;
- (TestAllTypesLite_Builder*) setOptionalUint32:(uint32_t) value;
- (TestAllTypesLite_Builder*) clearOptionalUint32;

- (BOOL) hasOptionalUint64;
- (uint64_t) optionalUint64;
- (TestAllTypesLite_Builder*) setOptionalUint64:(uint64_t) value;
- (TestAllTypesLite_Builder*) clearOptionalUint64;

- (BOOL) hasOptionalSint32;
- (int32_t) optionalSint32;
- (TestAllTypesLite_Builder*) setOptionalSint32:(int32_t) value;
- (TestAllTypesLite_Builder*) clearOptionalSint32;

- (BOOL) hasOptionalSint64;
- (int64_t) optionalSint64;
- (TestAllTypesLite_Builder*) setOptionalSint64:(int64_t) value;
- (TestAllTypesLite_Builder*) clearOptionalSint64;

- (BOOL) hasOptionalFixed32;
- (uint32_t) optionalFixed32;
- (TestAllTypesLite_Builder*) setOptionalFixed32:(uint32_t) value;
- (TestAllTypesLite_Builder*) clearOptionalFixed32;

- (BOOL) hasOptionalFixed64;
- (uint64_t) optionalFixed64;
- (TestAllTypesLite_Builder*) setOptionalFixed64:(uint64_t) value;
- (TestAllTypesLite_Builder*) clearOptionalFixed64;

- (BOOL) hasOptionalSfixed32;
- (int32_t) optionalSfixed32;
- (TestAllTypesLite_Builder*) setOptionalSfixed32:(int32_t) value;
- (TestAllTypesLite_Builder*) clearOptionalSfixed32;

- (BOOL) hasOptionalSfixed64;
- (int64_t) optionalSfixed64;
- (TestAllTypesLite_Builder*) setOptionalSfixed64:(int64_t) value;
- (TestAllTypesLite_Builder*) clearOptionalSfixed64;

- (BOOL) hasOptionalFloat;
- (Float32) optionalFloat;
- (TestAllTypesLite_Builder*) setOptionalFloat:(Float32) value;
- (TestAllTypesLite_Builder*) clearOptionalFloat;

- (BOOL) hasOptionalDouble;
- (Float64) optionalDouble;
- (TestAllTypesLite_Builder*) setOptionalDouble:(Float64) value;
- (TestAllTypesLite_Builder*) clearOptionalDouble;

- (BOOL) hasOptionalBool;
- (BOOL) optionalBool;
- (TestAllTypesLite_Builder*) setOptionalBool:(BOOL) value;
- (TestAllTypesLite_Builder*) clearOptionalBool;

- (BOOL) hasOptionalString;
- (NSString*) optionalString;
- (TestAllTypesLite_Builder*) setOptionalString:(NSString*) value;
- (TestAllTypesLite_Builder*) clearOptionalString;

- (BOOL) hasOptionalBytes;
- (NSData*) optionalBytes;
- (TestAllTypesLite_Builder*) setOptionalBytes:(NSData*) value;
- (TestAllTypesLite_Builder*) clearOptionalBytes;

- (BOOL) hasOptionalGroup;
- (TestAllTypesLite_OptionalGroup*) optionalGroup;
- (TestAllTypesLite_Builder*) setOptionalGroup:(TestAllTypesLite_OptionalGroup*) value;
- (TestAllTypesLite_Builder*) setOptionalGroupBuilder:(TestAllTypesLite_OptionalGroup_Builder*) builderForValue;
- (TestAllTypesLite_Builder*) mergeOptionalGroup:(TestAllTypesLite_OptionalGroup*) value;
- (TestAllTypesLite_Builder*) clearOptionalGroup;

- (BOOL) hasOptionalNestedMessage;
- (TestAllTypesLite_NestedMessage*) optionalNestedMessage;
- (TestAllTypesLite_Builder*) setOptionalNestedMessage:(TestAllTypesLite_NestedMessage*) value;
- (TestAllTypesLite_Builder*) setOptionalNestedMessageBuilder:(TestAllTypesLite_NestedMessage_Builder*) builderForValue;
- (TestAllTypesLite_Builder*) mergeOptionalNestedMessage:(TestAllTypesLite_NestedMessage*) value;
- (TestAllTypesLite_Builder*) clearOptionalNestedMessage;

- (BOOL) hasOptionalForeignMessage;
- (ForeignMessageLite*) optionalForeignMessage;
- (TestAllTypesLite_Builder*) setOptionalForeignMessage:(ForeignMessageLite*) value;
- (TestAllTypesLite_Builder*) setOptionalForeignMessageBuilder:(ForeignMessageLite_Builder*) builderForValue;
- (TestAllTypesLite_Builder*) mergeOptionalForeignMessage:(ForeignMessageLite*) value;
- (TestAllTypesLite_Builder*) clearOptionalForeignMessage;

- (BOOL) hasOptionalImportMessage;
- (ImportMessageLite*) optionalImportMessage;
- (TestAllTypesLite_Builder*) setOptionalImportMessage:(ImportMessageLite*) value;
- (TestAllTypesLite_Builder*) setOptionalImportMessageBuilder:(ImportMessageLite_Builder*) builderForValue;
- (TestAllTypesLite_Builder*) mergeOptionalImportMessage:(ImportMessageLite*) value;
- (TestAllTypesLite_Builder*) clearOptionalImportMessage;

- (BOOL) hasOptionalNestedEnum;
- (TestAllTypesLite_NestedEnum) optionalNestedEnum;
- (TestAllTypesLite_Builder*) setOptionalNestedEnum:(TestAllTypesLite_NestedEnum) value;
- (TestAllTypesLite_Builder*) clearOptionalNestedEnum;

- (BOOL) hasOptionalForeignEnum;
- (ForeignEnumLite) optionalForeignEnum;
- (TestAllTypesLite_Builder*) setOptionalForeignEnum:(ForeignEnumLite) value;
- (TestAllTypesLite_Builder*) clearOptionalForeignEnum;

- (BOOL) hasOptionalImportEnum;
- (ImportEnumLite) optionalImportEnum;
- (TestAllTypesLite_Builder*) setOptionalImportEnum:(ImportEnumLite) value;
- (TestAllTypesLite_Builder*) clearOptionalImportEnum;

- (BOOL) hasOptionalStringPiece;
- (NSString*) optionalStringPiece;
- (TestAllTypesLite_Builder*) setOptionalStringPiece:(NSString*) value;
- (TestAllTypesLite_Builder*) clearOptionalStringPiece;

- (BOOL) hasOptionalCord;
- (NSString*) optionalCord;
- (TestAllTypesLite_Builder*) setOptionalCord:(NSString*) value;
- (TestAllTypesLite_Builder*) clearOptionalCord;

- (PBAppendableArray *)repeatedInt32;
- (int32_t)repeatedInt32AtIndex:(NSUInteger)index;
- (TestAllTypesLite_Builder *)addRepeatedInt32:(int32_t)value;
- (TestAllTypesLite_Builder *)setRepeatedInt32Array:(NSArray *)array;
- (TestAllTypesLite_Builder *)setRepeatedInt32Values:(const int32_t *)values count:(NSUInteger)count;
- (TestAllTypesLite_Builder *)clearRepeatedInt32;

- (PBAppendableArray *)repeatedInt64;
- (int64_t)repeatedInt64AtIndex:(NSUInteger)index;
- (TestAllTypesLite_Builder *)addRepeatedInt64:(int64_t)value;
- (TestAllTypesLite_Builder *)setRepeatedInt64Array:(NSArray *)array;
- (TestAllTypesLite_Builder *)setRepeatedInt64Values:(const int64_t *)values count:(NSUInteger)count;
- (TestAllTypesLite_Builder *)clearRepeatedInt64;

- (PBAppendableArray *)repeatedUint32;
- (uint32_t)repeatedUint32AtIndex:(NSUInteger)index;
- (TestAllTypesLite_Builder *)addRepeatedUint32:(uint32_t)value;
- (TestAllTypesLite_Builder *)setRepeatedUint32Array:(NSArray *)array;
- (TestAllTypesLite_Builder *)setRepeatedUint32Values:(const uint32_t *)values count:(NSUInteger)count;
- (TestAllTypesLite_Builder *)clearRepeatedUint32;

- (PBAppendableArray *)repeatedUint64;
- (uint64_t)repeatedUint64AtIndex:(NSUInteger)index;
- (TestAllTypesLite_Builder *)addRepeatedUint64:(uint64_t)value;
- (TestAllTypesLite_Builder *)setRepeatedUint64Array:(NSArray *)array;
- (TestAllTypesLite_Builder *)setRepeatedUint64Values:(const uint64_t *)values count:(NSUInteger)count;
- (TestAllTypesLite_Builder *)clearRepeatedUint64;

- (PBAppendableArray *)repeatedSint32;
- (int32_t)repeatedSint32AtIndex:(NSUInteger)index;
- (TestAllTypesLite_Builder *)addRepeatedSint32:(int32_t)value;
- (TestAllTypesLite_Builder *)setRepeatedSint32Array:(NSArray *)array;
- (TestAllTypesLite_Builder *)setRepeatedSint32Values:(const int32_t *)values count:(NSUInteger)count;
- (TestAllTypesLite_Builder *)clearRepeatedSint32;

- (PBAppendableArray *)repeatedSint64;
- (int64_t)repeatedSint64AtIndex:(NSUInteger)index;
- (TestAllTypesLite_Builder *)addRepeatedSint64:(int64_t)value;
- (TestAllTypesLite_Builder *)setRepeatedSint64Array:(NSArray *)array;
- (TestAllTypesLite_Builder *)setRepeatedSint64Values:(const int64_t *)values count:(NSUInteger)count;
- (TestAllTypesLite_Builder *)clearRepeatedSint64;

- (PBAppendableArray *)repeatedFixed32;
- (uint32_t)repeatedFixed32AtIndex:(NSUInteger)index;
- (TestAllTypesLite_Builder *)addRepeatedFixed32:(uint32_t)value;
- (TestAllTypesLite_Builder *)setRepeatedFixed32Array:(NSArray *)array;
- (TestAllTypesLite_Builder *)setRepeatedFixed32Values:(const uint32_t *)values count:(NSUInteger)count;
- (TestAllTypesLite_Builder *)clearRepeatedFixed32;

- (PBAppendableArray *)repeatedFixed64;
- (uint64_t)repeatedFixed64AtIndex:(NSUInteger)index;
- (TestAllTypesLite_Builder *)addRepeatedFixed64:(uint64_t)value;
- (TestAllTypesLite_Builder *)setRepeatedFixed64Array:(NSArray *)array;
- (TestAllTypesLite_Builder *)setRepeatedFixed64Values:(const uint64_t *)values count:(NSUInteger)count;
- (TestAllTypesLite_Builder *)clearRepeatedFixed64;

- (PBAppendableArray *)repeatedSfixed32;
- (int32_t)repeatedSfixed32AtIndex:(NSUInteger)index;
- (TestAllTypesLite_Builder *)addRepeatedSfixed32:(int32_t)value;
- (TestAllTypesLite_Builder *)setRepeatedSfixed32Array:(NSArray *)array;
- (TestAllTypesLite_Builder *)setRepeatedSfixed32Values:(const int32_t *)values count:(NSUInteger)count;
- (TestAllTypesLite_Builder *)clearRepeatedSfixed32;

- (PBAppendableArray *)repeatedSfixed64;
- (int64_t)repeatedSfixed64AtIndex:(NSUInteger)index;
- (TestAllTypesLite_Builder *)addRepeatedSfixed64:(int64_t)value;
- (TestAllTypesLite_Builder *)setRepeatedSfixed64Array:(NSArray *)array;
- (TestAllTypesLite_Builder *)setRepeatedSfixed64Values:(const int64_t *)values count:(NSUInteger)count;
- (TestAllTypesLite_Builder *)clearRepeatedSfixed64;

- (PBAppendableArray *)repeatedFloat;
- (Float32)repeatedFloatAtIndex:(NSUInteger)index;
- (TestAllTypesLite_Builder *)addRepeatedFloat:(Float32)value;
- (TestAllTypesLite_Builder *)setRepeatedFloatArray:(NSArray *)array;
- (TestAllTypesLite_Builder *)setRepeatedFloatValues:(const Float32 *)values count:(NSUInteger)count;
- (TestAllTypesLite_Builder *)clearRepeatedFloat;

- (PBAppendableArray *)repeatedDouble;
- (Float64)repeatedDoubleAtIndex:(NSUInteger)index;
- (TestAllTypesLite_Builder *)addRepeatedDouble:(Float64)value;
- (TestAllTypesLite_Builder *)setRepeatedDoubleArray:(NSArray *)array;
- (TestAllTypesLite_Builder *)setRepeatedDoubleValues:(const Float64 *)values count:(NSUInteger)count;
- (TestAllTypesLite_Builder *)clearRepeatedDouble;

- (PBAppendableArray *)repeatedBool;
- (BOOL)repeatedBoolAtIndex:(NSUInteger)index;
- (TestAllTypesLite_Builder *)addRepeatedBool:(BOOL)value;
- (TestAllTypesLite_Builder *)setRepeatedBoolArray:(NSArray *)array;
- (TestAllTypesLite_Builder *)setRepeatedBoolValues:(const BOOL *)values count:(NSUInteger)count;
- (TestAllTypesLite_Builder *)clearRepeatedBool;

- (PBAppendableArray *)repeatedString;
- (NSString*)repeatedStringAtIndex:(NSUInteger)index;
- (TestAllTypesLite_Builder *)addRepeatedString:(NSString*)value;
- (TestAllTypesLite_Builder *)setRepeatedStringArray:(NSArray *)array;
- (TestAllTypesLite_Builder *)setRepeatedStringValues:(const NSString* *)values count:(NSUInteger)count;
- (TestAllTypesLite_Builder *)clearRepeatedString;

- (PBAppendableArray *)repeatedBytes;
- (NSData*)repeatedBytesAtIndex:(NSUInteger)index;
- (TestAllTypesLite_Builder *)addRepeatedBytes:(NSData*)value;
- (TestAllTypesLite_Builder *)setRepeatedBytesArray:(NSArray *)array;
- (TestAllTypesLite_Builder *)setRepeatedBytesValues:(const NSData* *)values count:(NSUInteger)count;
- (TestAllTypesLite_Builder *)clearRepeatedBytes;

- (PBAppendableArray *)repeatedGroup;
- (TestAllTypesLite_RepeatedGroup*)repeatedGroupAtIndex:(NSUInteger)index;
- (TestAllTypesLite_Builder *)addRepeatedGroup:(TestAllTypesLite_RepeatedGroup*)value;
- (TestAllTypesLite_Builder *)setRepeatedGroupArray:(NSArray *)array;
- (TestAllTypesLite_Builder *)setRepeatedGroupValues:(const TestAllTypesLite_RepeatedGroup* *)values count:(NSUInteger)count;
- (TestAllTypesLite_Builder *)clearRepeatedGroup;

- (PBAppendableArray *)repeatedNestedMessage;
- (TestAllTypesLite_NestedMessage*)repeatedNestedMessageAtIndex:(NSUInteger)index;
- (TestAllTypesLite_Builder *)addRepeatedNestedMessage:(TestAllTypesLite_NestedMessage*)value;
- (TestAllTypesLite_Builder *)setRepeatedNestedMessageArray:(NSArray *)array;
- (TestAllTypesLite_Builder *)setRepeatedNestedMessageValues:(const TestAllTypesLite_NestedMessage* *)values count:(NSUInteger)count;
- (TestAllTypesLite_Builder *)clearRepeatedNestedMessage;

- (PBAppendableArray *)repeatedForeignMessage;
- (ForeignMessageLite*)repeatedForeignMessageAtIndex:(NSUInteger)index;
- (TestAllTypesLite_Builder *)addRepeatedForeignMessage:(ForeignMessageLite*)value;
- (TestAllTypesLite_Builder *)setRepeatedForeignMessageArray:(NSArray *)array;
- (TestAllTypesLite_Builder *)setRepeatedForeignMessageValues:(const ForeignMessageLite* *)values count:(NSUInteger)count;
- (TestAllTypesLite_Builder *)clearRepeatedForeignMessage;

- (PBAppendableArray *)repeatedImportMessage;
- (ImportMessageLite*)repeatedImportMessageAtIndex:(NSUInteger)index;
- (TestAllTypesLite_Builder *)addRepeatedImportMessage:(ImportMessageLite*)value;
- (TestAllTypesLite_Builder *)setRepeatedImportMessageArray:(NSArray *)array;
- (TestAllTypesLite_Builder *)setRepeatedImportMessageValues:(const ImportMessageLite* *)values count:(NSUInteger)count;
- (TestAllTypesLite_Builder *)clearRepeatedImportMessage;

- (PBAppendableArray *)repeatedNestedEnum;
- (TestAllTypesLite_NestedEnum)repeatedNestedEnumAtIndex:(NSUInteger)index;
- (TestAllTypesLite_Builder *)addRepeatedNestedEnum:(TestAllTypesLite_NestedEnum)value;
- (TestAllTypesLite_Builder *)setRepeatedNestedEnumArray:(NSArray *)array;
- (TestAllTypesLite_Builder *)setRepeatedNestedEnumValues:(const TestAllTypesLite_NestedEnum *)values count:(NSUInteger)count;
- (TestAllTypesLite_Builder *)clearRepeatedNestedEnum;

- (PBAppendableArray *)repeatedForeignEnum;
- (ForeignEnumLite)repeatedForeignEnumAtIndex:(NSUInteger)index;
- (TestAllTypesLite_Builder *)addRepeatedForeignEnum:(ForeignEnumLite)value;
- (TestAllTypesLite_Builder *)setRepeatedForeignEnumArray:(NSArray *)array;
- (TestAllTypesLite_Builder *)setRepeatedForeignEnumValues:(const ForeignEnumLite *)values count:(NSUInteger)count;
- (TestAllTypesLite_Builder *)clearRepeatedForeignEnum;

- (PBAppendableArray *)repeatedImportEnum;
- (ImportEnumLite)repeatedImportEnumAtIndex:(NSUInteger)index;
- (TestAllTypesLite_Builder *)addRepeatedImportEnum:(ImportEnumLite)value;
- (TestAllTypesLite_Builder *)setRepeatedImportEnumArray:(NSArray *)array;
- (TestAllTypesLite_Builder *)setRepeatedImportEnumValues:(const ImportEnumLite *)values count:(NSUInteger)count;
- (TestAllTypesLite_Builder *)clearRepeatedImportEnum;

- (PBAppendableArray *)repeatedStringPiece;
- (NSString*)repeatedStringPieceAtIndex:(NSUInteger)index;
- (TestAllTypesLite_Builder *)addRepeatedStringPiece:(NSString*)value;
- (TestAllTypesLite_Builder *)setRepeatedStringPieceArray:(NSArray *)array;
- (TestAllTypesLite_Builder *)setRepeatedStringPieceValues:(const NSString* *)values count:(NSUInteger)count;
- (TestAllTypesLite_Builder *)clearRepeatedStringPiece;

- (PBAppendableArray *)repeatedCord;
- (NSString*)repeatedCordAtIndex:(NSUInteger)index;
- (TestAllTypesLite_Builder *)addRepeatedCord:(NSString*)value;
- (TestAllTypesLite_Builder *)setRepeatedCordArray:(NSArray *)array;
- (TestAllTypesLite_Builder *)setRepeatedCordValues:(const NSString* *)values count:(NSUInteger)count;
- (TestAllTypesLite_Builder *)clearRepeatedCord;

- (BOOL) hasDefaultInt32;
- (int32_t) defaultInt32;
- (TestAllTypesLite_Builder*) setDefaultInt32:(int32_t) value;
- (TestAllTypesLite_Builder*) clearDefaultInt32;

- (BOOL) hasDefaultInt64;
- (int64_t) defaultInt64;
- (TestAllTypesLite_Builder*) setDefaultInt64:(int64_t) value;
- (TestAllTypesLite_Builder*) clearDefaultInt64;

- (BOOL) hasDefaultUint32;
- (uint32_t) defaultUint32;
- (TestAllTypesLite_Builder*) setDefaultUint32:(uint32_t) value;
- (TestAllTypesLite_Builder*) clearDefaultUint32;

- (BOOL) hasDefaultUint64;
- (uint64_t) defaultUint64;
- (TestAllTypesLite_Builder*) setDefaultUint64:(uint64_t) value;
- (TestAllTypesLite_Builder*) clearDefaultUint64;

- (BOOL) hasDefaultSint32;
- (int32_t) defaultSint32;
- (TestAllTypesLite_Builder*) setDefaultSint32:(int32_t) value;
- (TestAllTypesLite_Builder*) clearDefaultSint32;

- (BOOL) hasDefaultSint64;
- (int64_t) defaultSint64;
- (TestAllTypesLite_Builder*) setDefaultSint64:(int64_t) value;
- (TestAllTypesLite_Builder*) clearDefaultSint64;

- (BOOL) hasDefaultFixed32;
- (uint32_t) defaultFixed32;
- (TestAllTypesLite_Builder*) setDefaultFixed32:(uint32_t) value;
- (TestAllTypesLite_Builder*) clearDefaultFixed32;

- (BOOL) hasDefaultFixed64;
- (uint64_t) defaultFixed64;
- (TestAllTypesLite_Builder*) setDefaultFixed64:(uint64_t) value;
- (TestAllTypesLite_Builder*) clearDefaultFixed64;

- (BOOL) hasDefaultSfixed32;
- (int32_t) defaultSfixed32;
- (TestAllTypesLite_Builder*) setDefaultSfixed32:(int32_t) value;
- (TestAllTypesLite_Builder*) clearDefaultSfixed32;

- (BOOL) hasDefaultSfixed64;
- (int64_t) defaultSfixed64;
- (TestAllTypesLite_Builder*) setDefaultSfixed64:(int64_t) value;
- (TestAllTypesLite_Builder*) clearDefaultSfixed64;

- (BOOL) hasDefaultFloat;
- (Float32) defaultFloat;
- (TestAllTypesLite_Builder*) setDefaultFloat:(Float32) value;
- (TestAllTypesLite_Builder*) clearDefaultFloat;

- (BOOL) hasDefaultDouble;
- (Float64) defaultDouble;
- (TestAllTypesLite_Builder*) setDefaultDouble:(Float64) value;
- (TestAllTypesLite_Builder*) clearDefaultDouble;

- (BOOL) hasDefaultBool;
- (BOOL) defaultBool;
- (TestAllTypesLite_Builder*) setDefaultBool:(BOOL) value;
- (TestAllTypesLite_Builder*) clearDefaultBool;

- (BOOL) hasDefaultString;
- (NSString*) defaultString;
- (TestAllTypesLite_Builder*) setDefaultString:(NSString*) value;
- (TestAllTypesLite_Builder*) clearDefaultString;

- (BOOL) hasDefaultBytes;
- (NSData*) defaultBytes;
- (TestAllTypesLite_Builder*) setDefaultBytes:(NSData*) value;
- (TestAllTypesLite_Builder*) clearDefaultBytes;

- (BOOL) hasDefaultNestedEnum;
- (TestAllTypesLite_NestedEnum) defaultNestedEnum;
- (TestAllTypesLite_Builder*) setDefaultNestedEnum:(TestAllTypesLite_NestedEnum) value;
- (TestAllTypesLite_Builder*) clearDefaultNestedEnum;

- (BOOL) hasDefaultForeignEnum;
- (ForeignEnumLite) defaultForeignEnum;
- (TestAllTypesLite_Builder*) setDefaultForeignEnum:(ForeignEnumLite) value;
- (TestAllTypesLite_Builder*) clearDefaultForeignEnum;

- (BOOL) hasDefaultImportEnum;
- (ImportEnumLite) defaultImportEnum;
- (TestAllTypesLite_Builder*) setDefaultImportEnum:(ImportEnumLite) value;
- (TestAllTypesLite_Builder*) clearDefaultImportEnum;

- (BOOL) hasDefaultStringPiece;
- (NSString*) defaultStringPiece;
- (TestAllTypesLite_Builder*) setDefaultStringPiece:(NSString*) value;
- (TestAllTypesLite_Builder*) clearDefaultStringPiece;

- (BOOL) hasDefaultCord;
- (NSString*) defaultCord;
- (TestAllTypesLite_Builder*) setDefaultCord:(NSString*) value;
- (TestAllTypesLite_Builder*) clearDefaultCord;
@end

@interface ForeignMessageLite : PBGeneratedMessage {
@private
  BOOL hasC_:1;
  int32_t c;
}
- (BOOL) hasC;
@property (readonly) int32_t c;

+ (ForeignMessageLite*) defaultInstance;
- (ForeignMessageLite*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (ForeignMessageLite_Builder*) builder;
+ (ForeignMessageLite_Builder*) builder;
+ (ForeignMessageLite_Builder*) builderWithPrototype:(ForeignMessageLite*) prototype;
- (ForeignMessageLite_Builder*) toBuilder;

+ (ForeignMessageLite*) parseFromData:(NSData*) data;
+ (ForeignMessageLite*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ForeignMessageLite*) parseFromInputStream:(NSInputStream*) input;
+ (ForeignMessageLite*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ForeignMessageLite*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (ForeignMessageLite*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface ForeignMessageLite_Builder : PBGeneratedMessage_Builder {
@private
  ForeignMessageLite* result;
}

- (ForeignMessageLite*) defaultInstance;

- (ForeignMessageLite_Builder*) clear;
- (ForeignMessageLite_Builder*) clone;

- (ForeignMessageLite*) build;
- (ForeignMessageLite*) buildPartial;

- (ForeignMessageLite_Builder*) mergeFrom:(ForeignMessageLite*) other;
- (ForeignMessageLite_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (ForeignMessageLite_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasC;
- (int32_t) c;
- (ForeignMessageLite_Builder*) setC:(int32_t) value;
- (ForeignMessageLite_Builder*) clearC;
@end

@interface TestPackedTypesLite : PBGeneratedMessage {
@private
  PBAppendableArray * packedBoolArray;
  int32_t packedBoolMemoizedSerializedSize;
  PBAppendableArray * packedDoubleArray;
  int32_t packedDoubleMemoizedSerializedSize;
  PBAppendableArray * packedFloatArray;
  int32_t packedFloatMemoizedSerializedSize;
  PBAppendableArray * packedInt64Array;
  int32_t packedInt64MemoizedSerializedSize;
  PBAppendableArray * packedUint64Array;
  int32_t packedUint64MemoizedSerializedSize;
  PBAppendableArray * packedInt32Array;
  int32_t packedInt32MemoizedSerializedSize;
  PBAppendableArray * packedFixed64Array;
  int32_t packedFixed64MemoizedSerializedSize;
  PBAppendableArray * packedFixed32Array;
  int32_t packedFixed32MemoizedSerializedSize;
  PBAppendableArray * packedUint32Array;
  int32_t packedUint32MemoizedSerializedSize;
  PBAppendableArray * packedEnumArray;
  int32_t packedEnumMemoizedSerializedSize;
  PBAppendableArray * packedSfixed32Array;
  int32_t packedSfixed32MemoizedSerializedSize;
  PBAppendableArray * packedSfixed64Array;
  int32_t packedSfixed64MemoizedSerializedSize;
  PBAppendableArray * packedSint32Array;
  int32_t packedSint32MemoizedSerializedSize;
  PBAppendableArray * packedSint64Array;
  int32_t packedSint64MemoizedSerializedSize;
}
@property (readonly, retain) PBArray * packedInt32;
@property (readonly, retain) PBArray * packedInt64;
@property (readonly, retain) PBArray * packedUint32;
@property (readonly, retain) PBArray * packedUint64;
@property (readonly, retain) PBArray * packedSint32;
@property (readonly, retain) PBArray * packedSint64;
@property (readonly, retain) PBArray * packedFixed32;
@property (readonly, retain) PBArray * packedFixed64;
@property (readonly, retain) PBArray * packedSfixed32;
@property (readonly, retain) PBArray * packedSfixed64;
@property (readonly, retain) PBArray * packedFloat;
@property (readonly, retain) PBArray * packedDouble;
@property (readonly, retain) PBArray * packedBool;
@property (readonly, retain) PBArray * packedEnum;
- (int32_t)packedInt32AtIndex:(NSUInteger)index;
- (int64_t)packedInt64AtIndex:(NSUInteger)index;
- (uint32_t)packedUint32AtIndex:(NSUInteger)index;
- (uint64_t)packedUint64AtIndex:(NSUInteger)index;
- (int32_t)packedSint32AtIndex:(NSUInteger)index;
- (int64_t)packedSint64AtIndex:(NSUInteger)index;
- (uint32_t)packedFixed32AtIndex:(NSUInteger)index;
- (uint64_t)packedFixed64AtIndex:(NSUInteger)index;
- (int32_t)packedSfixed32AtIndex:(NSUInteger)index;
- (int64_t)packedSfixed64AtIndex:(NSUInteger)index;
- (Float32)packedFloatAtIndex:(NSUInteger)index;
- (Float64)packedDoubleAtIndex:(NSUInteger)index;
- (BOOL)packedBoolAtIndex:(NSUInteger)index;
- (ForeignEnumLite)packedEnumAtIndex:(NSUInteger)index;

+ (TestPackedTypesLite*) defaultInstance;
- (TestPackedTypesLite*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (TestPackedTypesLite_Builder*) builder;
+ (TestPackedTypesLite_Builder*) builder;
+ (TestPackedTypesLite_Builder*) builderWithPrototype:(TestPackedTypesLite*) prototype;
- (TestPackedTypesLite_Builder*) toBuilder;

+ (TestPackedTypesLite*) parseFromData:(NSData*) data;
+ (TestPackedTypesLite*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TestPackedTypesLite*) parseFromInputStream:(NSInputStream*) input;
+ (TestPackedTypesLite*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TestPackedTypesLite*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (TestPackedTypesLite*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface TestPackedTypesLite_Builder : PBGeneratedMessage_Builder {
@private
  TestPackedTypesLite* result;
}

- (TestPackedTypesLite*) defaultInstance;

- (TestPackedTypesLite_Builder*) clear;
- (TestPackedTypesLite_Builder*) clone;

- (TestPackedTypesLite*) build;
- (TestPackedTypesLite*) buildPartial;

- (TestPackedTypesLite_Builder*) mergeFrom:(TestPackedTypesLite*) other;
- (TestPackedTypesLite_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (TestPackedTypesLite_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (PBAppendableArray *)packedInt32;
- (int32_t)packedInt32AtIndex:(NSUInteger)index;
- (TestPackedTypesLite_Builder *)addPackedInt32:(int32_t)value;
- (TestPackedTypesLite_Builder *)setPackedInt32Array:(NSArray *)array;
- (TestPackedTypesLite_Builder *)setPackedInt32Values:(const int32_t *)values count:(NSUInteger)count;
- (TestPackedTypesLite_Builder *)clearPackedInt32;

- (PBAppendableArray *)packedInt64;
- (int64_t)packedInt64AtIndex:(NSUInteger)index;
- (TestPackedTypesLite_Builder *)addPackedInt64:(int64_t)value;
- (TestPackedTypesLite_Builder *)setPackedInt64Array:(NSArray *)array;
- (TestPackedTypesLite_Builder *)setPackedInt64Values:(const int64_t *)values count:(NSUInteger)count;
- (TestPackedTypesLite_Builder *)clearPackedInt64;

- (PBAppendableArray *)packedUint32;
- (uint32_t)packedUint32AtIndex:(NSUInteger)index;
- (TestPackedTypesLite_Builder *)addPackedUint32:(uint32_t)value;
- (TestPackedTypesLite_Builder *)setPackedUint32Array:(NSArray *)array;
- (TestPackedTypesLite_Builder *)setPackedUint32Values:(const uint32_t *)values count:(NSUInteger)count;
- (TestPackedTypesLite_Builder *)clearPackedUint32;

- (PBAppendableArray *)packedUint64;
- (uint64_t)packedUint64AtIndex:(NSUInteger)index;
- (TestPackedTypesLite_Builder *)addPackedUint64:(uint64_t)value;
- (TestPackedTypesLite_Builder *)setPackedUint64Array:(NSArray *)array;
- (TestPackedTypesLite_Builder *)setPackedUint64Values:(const uint64_t *)values count:(NSUInteger)count;
- (TestPackedTypesLite_Builder *)clearPackedUint64;

- (PBAppendableArray *)packedSint32;
- (int32_t)packedSint32AtIndex:(NSUInteger)index;
- (TestPackedTypesLite_Builder *)addPackedSint32:(int32_t)value;
- (TestPackedTypesLite_Builder *)setPackedSint32Array:(NSArray *)array;
- (TestPackedTypesLite_Builder *)setPackedSint32Values:(const int32_t *)values count:(NSUInteger)count;
- (TestPackedTypesLite_Builder *)clearPackedSint32;

- (PBAppendableArray *)packedSint64;
- (int64_t)packedSint64AtIndex:(NSUInteger)index;
- (TestPackedTypesLite_Builder *)addPackedSint64:(int64_t)value;
- (TestPackedTypesLite_Builder *)setPackedSint64Array:(NSArray *)array;
- (TestPackedTypesLite_Builder *)setPackedSint64Values:(const int64_t *)values count:(NSUInteger)count;
- (TestPackedTypesLite_Builder *)clearPackedSint64;

- (PBAppendableArray *)packedFixed32;
- (uint32_t)packedFixed32AtIndex:(NSUInteger)index;
- (TestPackedTypesLite_Builder *)addPackedFixed32:(uint32_t)value;
- (TestPackedTypesLite_Builder *)setPackedFixed32Array:(NSArray *)array;
- (TestPackedTypesLite_Builder *)setPackedFixed32Values:(const uint32_t *)values count:(NSUInteger)count;
- (TestPackedTypesLite_Builder *)clearPackedFixed32;

- (PBAppendableArray *)packedFixed64;
- (uint64_t)packedFixed64AtIndex:(NSUInteger)index;
- (TestPackedTypesLite_Builder *)addPackedFixed64:(uint64_t)value;
- (TestPackedTypesLite_Builder *)setPackedFixed64Array:(NSArray *)array;
- (TestPackedTypesLite_Builder *)setPackedFixed64Values:(const uint64_t *)values count:(NSUInteger)count;
- (TestPackedTypesLite_Builder *)clearPackedFixed64;

- (PBAppendableArray *)packedSfixed32;
- (int32_t)packedSfixed32AtIndex:(NSUInteger)index;
- (TestPackedTypesLite_Builder *)addPackedSfixed32:(int32_t)value;
- (TestPackedTypesLite_Builder *)setPackedSfixed32Array:(NSArray *)array;
- (TestPackedTypesLite_Builder *)setPackedSfixed32Values:(const int32_t *)values count:(NSUInteger)count;
- (TestPackedTypesLite_Builder *)clearPackedSfixed32;

- (PBAppendableArray *)packedSfixed64;
- (int64_t)packedSfixed64AtIndex:(NSUInteger)index;
- (TestPackedTypesLite_Builder *)addPackedSfixed64:(int64_t)value;
- (TestPackedTypesLite_Builder *)setPackedSfixed64Array:(NSArray *)array;
- (TestPackedTypesLite_Builder *)setPackedSfixed64Values:(const int64_t *)values count:(NSUInteger)count;
- (TestPackedTypesLite_Builder *)clearPackedSfixed64;

- (PBAppendableArray *)packedFloat;
- (Float32)packedFloatAtIndex:(NSUInteger)index;
- (TestPackedTypesLite_Builder *)addPackedFloat:(Float32)value;
- (TestPackedTypesLite_Builder *)setPackedFloatArray:(NSArray *)array;
- (TestPackedTypesLite_Builder *)setPackedFloatValues:(const Float32 *)values count:(NSUInteger)count;
- (TestPackedTypesLite_Builder *)clearPackedFloat;

- (PBAppendableArray *)packedDouble;
- (Float64)packedDoubleAtIndex:(NSUInteger)index;
- (TestPackedTypesLite_Builder *)addPackedDouble:(Float64)value;
- (TestPackedTypesLite_Builder *)setPackedDoubleArray:(NSArray *)array;
- (TestPackedTypesLite_Builder *)setPackedDoubleValues:(const Float64 *)values count:(NSUInteger)count;
- (TestPackedTypesLite_Builder *)clearPackedDouble;

- (PBAppendableArray *)packedBool;
- (BOOL)packedBoolAtIndex:(NSUInteger)index;
- (TestPackedTypesLite_Builder *)addPackedBool:(BOOL)value;
- (TestPackedTypesLite_Builder *)setPackedBoolArray:(NSArray *)array;
- (TestPackedTypesLite_Builder *)setPackedBoolValues:(const BOOL *)values count:(NSUInteger)count;
- (TestPackedTypesLite_Builder *)clearPackedBool;

- (PBAppendableArray *)packedEnum;
- (ForeignEnumLite)packedEnumAtIndex:(NSUInteger)index;
- (TestPackedTypesLite_Builder *)addPackedEnum:(ForeignEnumLite)value;
- (TestPackedTypesLite_Builder *)setPackedEnumArray:(NSArray *)array;
- (TestPackedTypesLite_Builder *)setPackedEnumValues:(const ForeignEnumLite *)values count:(NSUInteger)count;
- (TestPackedTypesLite_Builder *)clearPackedEnum;
@end

@interface TestAllExtensionsLite : PBExtendableMessage {
@private
}

+ (TestAllExtensionsLite*) defaultInstance;
- (TestAllExtensionsLite*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (TestAllExtensionsLite_Builder*) builder;
+ (TestAllExtensionsLite_Builder*) builder;
+ (TestAllExtensionsLite_Builder*) builderWithPrototype:(TestAllExtensionsLite*) prototype;
- (TestAllExtensionsLite_Builder*) toBuilder;

+ (TestAllExtensionsLite*) parseFromData:(NSData*) data;
+ (TestAllExtensionsLite*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TestAllExtensionsLite*) parseFromInputStream:(NSInputStream*) input;
+ (TestAllExtensionsLite*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TestAllExtensionsLite*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (TestAllExtensionsLite*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface TestAllExtensionsLite_Builder : PBExtendableMessage_Builder {
@private
  TestAllExtensionsLite* result;
}

- (TestAllExtensionsLite*) defaultInstance;

- (TestAllExtensionsLite_Builder*) clear;
- (TestAllExtensionsLite_Builder*) clone;

- (TestAllExtensionsLite*) build;
- (TestAllExtensionsLite*) buildPartial;

- (TestAllExtensionsLite_Builder*) mergeFrom:(TestAllExtensionsLite*) other;
- (TestAllExtensionsLite_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (TestAllExtensionsLite_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface OptionalGroup_extension_lite : PBGeneratedMessage {
@private
  BOOL hasA_:1;
  int32_t a;
}
- (BOOL) hasA;
@property (readonly) int32_t a;

+ (OptionalGroup_extension_lite*) defaultInstance;
- (OptionalGroup_extension_lite*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (OptionalGroup_extension_lite_Builder*) builder;
+ (OptionalGroup_extension_lite_Builder*) builder;
+ (OptionalGroup_extension_lite_Builder*) builderWithPrototype:(OptionalGroup_extension_lite*) prototype;
- (OptionalGroup_extension_lite_Builder*) toBuilder;

+ (OptionalGroup_extension_lite*) parseFromData:(NSData*) data;
+ (OptionalGroup_extension_lite*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (OptionalGroup_extension_lite*) parseFromInputStream:(NSInputStream*) input;
+ (OptionalGroup_extension_lite*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (OptionalGroup_extension_lite*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (OptionalGroup_extension_lite*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface OptionalGroup_extension_lite_Builder : PBGeneratedMessage_Builder {
@private
  OptionalGroup_extension_lite* result;
}

- (OptionalGroup_extension_lite*) defaultInstance;

- (OptionalGroup_extension_lite_Builder*) clear;
- (OptionalGroup_extension_lite_Builder*) clone;

- (OptionalGroup_extension_lite*) build;
- (OptionalGroup_extension_lite*) buildPartial;

- (OptionalGroup_extension_lite_Builder*) mergeFrom:(OptionalGroup_extension_lite*) other;
- (OptionalGroup_extension_lite_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (OptionalGroup_extension_lite_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasA;
- (int32_t) a;
- (OptionalGroup_extension_lite_Builder*) setA:(int32_t) value;
- (OptionalGroup_extension_lite_Builder*) clearA;
@end

@interface RepeatedGroup_extension_lite : PBGeneratedMessage {
@private
  BOOL hasA_:1;
  int32_t a;
}
- (BOOL) hasA;
@property (readonly) int32_t a;

+ (RepeatedGroup_extension_lite*) defaultInstance;
- (RepeatedGroup_extension_lite*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (RepeatedGroup_extension_lite_Builder*) builder;
+ (RepeatedGroup_extension_lite_Builder*) builder;
+ (RepeatedGroup_extension_lite_Builder*) builderWithPrototype:(RepeatedGroup_extension_lite*) prototype;
- (RepeatedGroup_extension_lite_Builder*) toBuilder;

+ (RepeatedGroup_extension_lite*) parseFromData:(NSData*) data;
+ (RepeatedGroup_extension_lite*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (RepeatedGroup_extension_lite*) parseFromInputStream:(NSInputStream*) input;
+ (RepeatedGroup_extension_lite*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (RepeatedGroup_extension_lite*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (RepeatedGroup_extension_lite*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface RepeatedGroup_extension_lite_Builder : PBGeneratedMessage_Builder {
@private
  RepeatedGroup_extension_lite* result;
}

- (RepeatedGroup_extension_lite*) defaultInstance;

- (RepeatedGroup_extension_lite_Builder*) clear;
- (RepeatedGroup_extension_lite_Builder*) clone;

- (RepeatedGroup_extension_lite*) build;
- (RepeatedGroup_extension_lite*) buildPartial;

- (RepeatedGroup_extension_lite_Builder*) mergeFrom:(RepeatedGroup_extension_lite*) other;
- (RepeatedGroup_extension_lite_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (RepeatedGroup_extension_lite_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasA;
- (int32_t) a;
- (RepeatedGroup_extension_lite_Builder*) setA:(int32_t) value;
- (RepeatedGroup_extension_lite_Builder*) clearA;
@end

@interface TestPackedExtensionsLite : PBExtendableMessage {
@private
}

+ (TestPackedExtensionsLite*) defaultInstance;
- (TestPackedExtensionsLite*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (TestPackedExtensionsLite_Builder*) builder;
+ (TestPackedExtensionsLite_Builder*) builder;
+ (TestPackedExtensionsLite_Builder*) builderWithPrototype:(TestPackedExtensionsLite*) prototype;
- (TestPackedExtensionsLite_Builder*) toBuilder;

+ (TestPackedExtensionsLite*) parseFromData:(NSData*) data;
+ (TestPackedExtensionsLite*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TestPackedExtensionsLite*) parseFromInputStream:(NSInputStream*) input;
+ (TestPackedExtensionsLite*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TestPackedExtensionsLite*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (TestPackedExtensionsLite*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface TestPackedExtensionsLite_Builder : PBExtendableMessage_Builder {
@private
  TestPackedExtensionsLite* result;
}

- (TestPackedExtensionsLite*) defaultInstance;

- (TestPackedExtensionsLite_Builder*) clear;
- (TestPackedExtensionsLite_Builder*) clone;

- (TestPackedExtensionsLite*) build;
- (TestPackedExtensionsLite*) buildPartial;

- (TestPackedExtensionsLite_Builder*) mergeFrom:(TestPackedExtensionsLite*) other;
- (TestPackedExtensionsLite_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (TestPackedExtensionsLite_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface TestNestedExtensionLite : PBGeneratedMessage {
@private
}

+ (TestNestedExtensionLite*) defaultInstance;
- (TestNestedExtensionLite*) defaultInstance;

+ (id<PBExtensionField>) nestedExtension;
- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (TestNestedExtensionLite_Builder*) builder;
+ (TestNestedExtensionLite_Builder*) builder;
+ (TestNestedExtensionLite_Builder*) builderWithPrototype:(TestNestedExtensionLite*) prototype;
- (TestNestedExtensionLite_Builder*) toBuilder;

+ (TestNestedExtensionLite*) parseFromData:(NSData*) data;
+ (TestNestedExtensionLite*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TestNestedExtensionLite*) parseFromInputStream:(NSInputStream*) input;
+ (TestNestedExtensionLite*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TestNestedExtensionLite*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (TestNestedExtensionLite*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface TestNestedExtensionLite_Builder : PBGeneratedMessage_Builder {
@private
  TestNestedExtensionLite* result;
}

- (TestNestedExtensionLite*) defaultInstance;

- (TestNestedExtensionLite_Builder*) clear;
- (TestNestedExtensionLite_Builder*) clone;

- (TestNestedExtensionLite*) build;
- (TestNestedExtensionLite*) buildPartial;

- (TestNestedExtensionLite_Builder*) mergeFrom:(TestNestedExtensionLite*) other;
- (TestNestedExtensionLite_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (TestNestedExtensionLite_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface TestDeprecatedLite : PBGeneratedMessage {
@private
  BOOL hasDeprecatedField_:1;
  int32_t deprecatedField;
}
- (BOOL) hasDeprecatedField;
@property (readonly) int32_t deprecatedField;

+ (TestDeprecatedLite*) defaultInstance;
- (TestDeprecatedLite*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (TestDeprecatedLite_Builder*) builder;
+ (TestDeprecatedLite_Builder*) builder;
+ (TestDeprecatedLite_Builder*) builderWithPrototype:(TestDeprecatedLite*) prototype;
- (TestDeprecatedLite_Builder*) toBuilder;

+ (TestDeprecatedLite*) parseFromData:(NSData*) data;
+ (TestDeprecatedLite*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TestDeprecatedLite*) parseFromInputStream:(NSInputStream*) input;
+ (TestDeprecatedLite*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TestDeprecatedLite*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (TestDeprecatedLite*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface TestDeprecatedLite_Builder : PBGeneratedMessage_Builder {
@private
  TestDeprecatedLite* result;
}

- (TestDeprecatedLite*) defaultInstance;

- (TestDeprecatedLite_Builder*) clear;
- (TestDeprecatedLite_Builder*) clone;

- (TestDeprecatedLite*) build;
- (TestDeprecatedLite*) buildPartial;

- (TestDeprecatedLite_Builder*) mergeFrom:(TestDeprecatedLite*) other;
- (TestDeprecatedLite_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (TestDeprecatedLite_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasDeprecatedField;
- (int32_t) deprecatedField;
- (TestDeprecatedLite_Builder*) setDeprecatedField:(int32_t) value;
- (TestDeprecatedLite_Builder*) clearDeprecatedField;
@end

